
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = '2X_DOIS_PONTOS AND BOOL CHAVE_ABRE CHAVE_FECHA CLASS DIFERENTE DIV DOIS_PONTOS ELSE FALSE FOR ID IF IGUAL INT INT_V MAIOR_IGUAL MAIOR_Q MAIS_MAIS MENOR_IGUAL MENOR_Q MENOS_MENOS MODULO MULT NEW NOT OP_E OP_NOT OP_OU OP_OU_EX OR PARENT_ABRE PARENT_FECHA PONTO PONTO_VIRG PUBLIC RECEBER RETURN SETA SIZEOF SOMA STATIC STRING STRING_V SUB THIS TRUE TYPEDEF TYPEID USING VIRGULA VOID WHILE XORcpp : decl_classe\n         | decl_funcao\n         | decl_variavel\n         | typedef\n         | using\n         | decl_classe  cpp\n         | decl_funcao  cpp\n         | decl_variavel cpp\n         | typedef cpp\n         | using cppdecl_classe : CLASS ID body_class PONTO_VIRGbody_class : CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHAcontent_class : decl_variavel\n                     | decl_funcao\n                     | STATIC decl_variavel\n                     | STATIC decl_funcao\n                     | decl_variavel content_class\n                     | decl_funcao content_class\n                     | STATIC decl_variavel content_class\n                     | STATIC decl_funcao content_classdecl_funcao : tipo ID PARENT_ABRE parametros PARENT_FECHA body\n                 | tipo ID PARENT_ABRE PARENT_FECHA body\n                 | tipo ID PARENT_ABRE VOID PARENT_FECHA body\n                 | VOID ID PARENT_ABRE parametros PARENT_FECHA body\n                 | VOID ID PARENT_ABRE PARENT_FECHA body\n                 | VOID ID PARENT_ABRE VOID PARENT_FECHA bodyparametros : tipo ID\n                | tipo ID VIRGULA parametrosdecl_variavel : tipo ID PONTO_VIRG \n                   | tipo ID RECEBER exp PONTO_VIRG\n                   | tipo ID decl_variavel_n PONTO_VIRG \n                   | tipo ID RECEBER exp decl_variavel_n PONTO_VIRGdecl_variavel_n : VIRGULA ID decl_variavel_n\n                     | VIRGULA ID RECEBER exp decl_variavel_n\n                     | VIRGULA ID \n                     typedef : TYPEDEF tipo ID PONTO_VIRG\n               | TYPEDEF tipo ID decl_typedef_n PONTO_VIRGdecl_typedef_n : VIRGULA ID decl_typedef_n\n                      | VIRGULA IDusing : USING ID 2X_DOIS_PONTOS ID PONTO_VIRG\n             | USING ID ID PONTO_VIRGbody : CHAVE_ABRE comandos CHAVE_FECHA\n            | CHAVE_ABRE CHAVE_FECHA comandos : comando \n               | comando comandoscomando : condicional_1\n               | condicional_2exp : exp RECEBER exp_1\n           | exp_1exp_1 : exp_1 OP_OU exp_2 \n           | exp_1 OR exp_2\n           | exp_2exp_2 : exp_2 OP_E exp_3\n           | exp_2 AND exp_3\n           | exp_3exp_3 : exp_3 OP_OU_EX exp_4\n           | exp_3 XOR exp_4\n           | exp_4exp_4 : exp_4 IGUAL exp_5\n           | exp_4 DIFERENTE exp_5\n           | exp_5exp_5 : exp_5 MENOR_Q exp_6\n           | exp_5 MAIOR_Q exp_6\n           | exp_5 MAIOR_IGUAL exp_6\n           | exp_5 MENOR_IGUAL exp_6\n           | exp_6exp_6 : exp_6 SOMA exp_7\n           | exp_6 SUB exp_7\n           | exp_7exp_7 : exp_7 MULT exp_8\n           | exp_7 DIV exp_8\n           | exp_7 MODULO exp_8\n           | exp_8exp_8 : OP_NOT exp_9\n           | NOT exp_9\n           | exp_9 MAIS_MAIS\n           | exp_9 MENOS_MENOS\n           | SIZEOF PARENT_ABRE exp_9 PARENT_FECHA\n           | NEW tipo PONTO_VIRG\n           | exp_9exp_9 : exp_9 PONTO exp_10\n           | exp_9 SETA exp_10\n           | exp_10exp_10 : ID\n           | INT_V\n           | TRUE\n           | FALSE\n           | chamada_funcao\n           | STRING_V\n           | THIS\n           | PARENT_ABRE exp PARENT_FECHAchamada_funcao : ID PARENT_ABRE parametros PARENT_FECHA\n                    | ID PARENT_ABRE PARENT_FECHA\n                    | TYPEID PARENT_ABRE exp PARENT_FECHAcondicional_1 : IF PARENT_ABRE exp PARENT_FECHA rest_if\n                     | exp PONTO_VIRG \n                     | decl_variavel\n                     | typedef\n                     | using\n                     | WHILE PARENT_ABRE exp PARENT_FECHA body\n                     | FOR PARENT_ABRE for_log PARENT_FECHA body\n                     | RETURN exp PONTO_VIRG\n                     | RETURN PONTO_VIRGcondicional_2 : IF PARENT_ABRE exp PARENT_FECHA body\n                     | IF PARENT_ABRE exp PARENT_FECHA comando\n                     | IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2rest_if : condicional_1 ELSE condicional_1\n               | body ELSE body\n               | condicional_1 ELSE body\n               | body ELSE condicional_1for_log : decl_variavel PONTO_VIRG\n             | decl_variavel exp PONTO_VIRG\n             | decl_variavel exp PONTO_VIRG exp\n             | decl_variavel PONTO_VIRG exp\n             | PONTO_VIRG exp PONTO_VIRG exp\n             | PONTO_VIRG exp PONTO_VIRG\n             | PONTO_VIRG PONTO_VIRG exp\n             | PONTO_VIRG PONTO_VIRGtipo : INT \n          | BOOL \n          | ID\n          | STRING'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,6,29,37,67,72,75,80,85,118,119,121,128,130,144,148,173,174,183,],[7,7,7,7,7,7,-29,-11,-31,-36,-41,-22,-30,-25,-37,-40,-21,-43,-23,-32,-26,-24,-42,]),'VOID':([0,2,3,4,5,6,28,29,33,37,67,72,75,77,80,85,118,119,121,123,124,125,128,130,144,148,173,174,179,180,183,],[10,10,10,10,10,10,42,-29,69,-11,-31,-36,-41,10,-22,-30,-25,-37,-40,10,10,10,-21,-43,-23,-32,-26,-24,10,10,-42,]),'TYPEDEF':([0,2,3,4,5,6,29,37,67,72,75,80,81,85,118,119,121,128,130,131,132,133,136,137,138,144,148,173,174,183,186,190,203,204,211,212,213,214,215,216,221,222,225,226,229,230,231,236,237,240,241,],[11,11,11,11,11,11,-29,-11,-31,-36,-41,-22,11,-30,-25,-37,-40,-21,-43,11,-46,-47,-97,-98,-99,-23,-32,-26,-24,-42,-96,-103,-102,11,-95,-104,-105,-46,-100,-101,11,11,-108,-110,-107,-106,-109,11,11,-46,11,]),'USING':([0,2,3,4,5,6,29,37,67,72,75,80,81,85,118,119,121,128,130,131,132,133,136,137,138,144,148,173,174,183,186,190,203,204,211,212,213,214,215,216,221,222,225,226,229,230,231,236,237,240,241,],[12,12,12,12,12,12,-29,-11,-31,-36,-41,-22,12,-30,-25,-37,-40,-21,-43,12,-46,-47,-97,-98,-99,-23,-32,-26,-24,-42,-96,-103,-102,12,-95,-104,-105,-46,-100,-101,12,12,-108,-110,-107,-106,-109,12,12,-46,12,]),'INT':([0,2,3,4,5,6,11,28,29,33,37,58,67,72,75,77,80,81,83,85,118,119,121,123,124,125,127,128,130,131,132,133,136,137,138,144,148,173,174,179,180,183,186,188,190,203,204,211,212,213,214,215,216,221,222,225,226,229,230,231,236,237,240,241,],[13,13,13,13,13,13,13,13,-29,13,-11,13,-31,-36,-41,13,-22,13,13,-30,-25,-37,-40,13,13,13,13,-21,-43,13,-46,-47,-97,-98,-99,-23,-32,-26,-24,13,13,-42,-96,13,-103,-102,13,-95,-104,-105,-46,-100,-101,13,13,-108,-110,-107,-106,-109,13,13,-46,13,]),'BOOL':([0,2,3,4,5,6,11,28,29,33,37,58,67,72,75,77,80,81,83,85,118,119,121,123,124,125,127,128,130,131,132,133,136,137,138,144,148,173,174,179,180,183,186,188,190,203,204,211,212,213,214,215,216,221,222,225,226,229,230,231,236,237,240,241,],[14,14,14,14,14,14,14,14,-29,14,-11,14,-31,-36,-41,14,-22,14,14,-30,-25,-37,-40,14,14,14,14,-21,-43,14,-46,-47,-97,-98,-99,-23,-32,-26,-24,14,14,-42,-96,14,-103,-102,14,-95,-104,-105,-46,-100,-101,14,14,-108,-110,-107,-106,-109,14,14,-46,14,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,28,29,30,32,33,36,37,39,53,55,57,58,67,72,74,75,77,80,81,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,110,113,115,118,119,121,123,124,125,126,127,128,130,131,132,133,136,137,138,141,142,143,144,148,173,174,179,180,183,185,186,187,188,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,229,230,231,232,233,236,237,240,241,],[8,8,8,8,8,8,21,-121,22,23,8,25,-119,-120,-122,34,35,8,-29,43,68,8,76,-11,78,43,43,43,8,-31,-36,120,-41,8,-22,143,8,43,-30,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-25,-37,-40,8,8,8,181,8,-21,-43,143,-46,-47,-97,-98,-99,43,191,-121,-23,-32,-26,-24,8,8,-42,43,-96,43,8,-103,43,43,-102,143,43,43,-95,-104,-105,-46,-100,-101,43,43,143,143,-108,-110,-107,-106,-109,43,43,143,143,-46,143,]),'STRING':([0,2,3,4,5,6,11,28,29,33,37,58,67,72,75,77,80,81,83,85,118,119,121,123,124,125,127,128,130,131,132,133,136,137,138,144,148,173,174,179,180,183,186,188,190,203,204,211,212,213,214,215,216,221,222,225,226,229,230,231,236,237,240,241,],[15,15,15,15,15,15,15,15,-29,15,-11,15,-31,-36,-41,15,-22,15,15,-30,-25,-37,-40,15,15,15,15,-21,-43,15,-46,-47,-97,-98,-99,-23,-32,-26,-24,15,15,-42,-96,15,-103,-102,15,-95,-104,-105,-46,-100,-101,15,15,-108,-110,-107,-106,-109,15,15,-46,15,]),'$end':([1,2,3,4,5,6,16,17,18,19,20,29,37,67,72,75,80,85,118,119,121,128,130,144,148,173,174,183,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-29,-11,-31,-36,-41,-22,-30,-25,-37,-40,-21,-43,-23,-32,-26,-24,-42,]),'PONTO_VIRG':([8,13,14,15,22,26,29,31,34,35,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,67,68,73,76,85,86,104,105,106,109,112,114,120,135,141,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,175,176,181,188,189,191,192,193,194,195,201,202,208,210,],[-121,-119,-120,-122,29,37,-29,67,72,75,-84,85,-49,-52,-55,-58,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-31,-35,119,121,-30,148,-74,-76,-77,-75,170,-33,-39,186,190,-84,-93,-48,-32,-50,-51,-53,-54,-56,-57,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-38,-12,29,202,203,29,-92,-78,-94,-34,207,209,218,220,]),'CHAVE_ABRE':([21,41,71,79,82,116,117,204,205,206,221,222,236,237,241,],[27,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'PARENT_ABRE':([22,23,29,30,43,53,55,56,57,66,67,72,75,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,110,113,115,119,121,130,131,132,133,134,136,137,138,139,140,141,143,148,181,183,185,186,187,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,227,228,229,230,231,232,233,236,237,240,241,],[28,33,-29,57,83,57,57,110,57,113,-31,-36,-41,57,57,-30,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-37,-40,-43,57,-46,-47,185,-97,-98,-99,187,188,57,83,-32,28,-42,57,-96,57,-103,57,57,-102,57,57,57,-95,-104,-105,-46,-100,-101,57,57,57,57,-108,-110,232,233,-107,-106,-109,57,57,57,57,-46,57,]),'RECEBER':([22,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,68,104,105,106,109,111,135,143,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,181,189,191,192,193,194,198,199,208,210,217,219,223,224,234,235,],[30,-84,84,-49,-52,-55,-58,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,115,-74,-76,-77,-75,84,84,-84,-93,-48,-50,-51,-53,-54,-56,-57,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,84,84,30,84,30,-92,-78,-94,84,84,84,84,84,84,84,84,84,84,]),'VIRGULA':([22,34,43,44,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,68,78,104,105,106,109,120,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,172,181,191,192,193,194,],[32,74,-84,32,-49,-52,-55,-58,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,32,127,-74,-76,-77,-75,74,-93,-48,-50,-51,-53,-54,-56,-57,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,32,32,32,-92,-78,-94,]),'2X_DOIS_PONTOS':([25,],[36,]),'PUBLIC':([27,],[38,]),'PARENT_FECHA':([28,33,40,42,43,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,69,70,78,83,104,105,106,109,111,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,182,192,193,194,198,199,200,207,209,217,218,219,220,223,224,234,235,],[41,71,79,82,-84,-49,-52,-55,-58,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,116,117,-27,146,-74,-76,-77,-75,169,192,-93,-48,-50,-51,-53,-54,-56,-57,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,193,-91,-79,194,-28,-92,-78,-94,204,205,206,-111,-118,-114,-112,-117,-116,-113,-115,236,237,]),'STATIC':([29,67,77,80,85,118,123,124,128,130,144,148,173,174,179,180,183,],[-29,-31,125,-22,-30,-25,125,125,-21,-43,-23,-32,-26,-24,125,125,-42,]),'CHAVE_FECHA':([29,67,72,75,80,81,85,118,119,121,122,123,124,128,129,130,131,132,133,136,137,138,144,148,173,174,177,178,179,180,183,184,186,190,196,197,203,211,212,213,214,215,216,225,226,229,230,231,240,],[-29,-31,-36,-41,-22,130,-30,-25,-37,-40,176,-13,-14,-21,183,-43,-44,-46,-47,-97,-98,-99,-23,-32,-26,-24,-17,-18,-15,-16,-42,-45,-96,-103,-19,-20,-102,-95,-104,-105,-46,-100,-101,-108,-110,-107,-106,-109,-46,]),'IF':([29,67,72,75,81,85,119,121,130,131,132,133,136,137,138,148,183,186,190,203,204,211,212,213,214,215,216,221,222,225,226,229,230,231,236,237,240,241,],[-29,-31,-36,-41,134,-30,-37,-40,-43,134,-46,-47,-97,-98,-99,-32,-42,-96,-103,-102,134,-95,-104,-105,-46,-100,-101,227,228,-108,-110,-107,-106,-109,227,134,-46,227,]),'WHILE':([29,67,72,75,81,85,119,121,130,131,132,133,136,137,138,148,183,186,190,203,204,211,212,213,214,215,216,221,222,225,226,229,230,231,236,237,240,241,],[-29,-31,-36,-41,139,-30,-37,-40,-43,139,-46,-47,-97,-98,-99,-32,-42,-96,-103,-102,139,-95,-104,-105,-46,-100,-101,139,139,-108,-110,-107,-106,-109,139,139,-46,139,]),'FOR':([29,67,72,75,81,85,119,121,130,131,132,133,136,137,138,148,183,186,190,203,204,211,212,213,214,215,216,221,222,225,226,229,230,231,236,237,240,241,],[-29,-31,-36,-41,140,-30,-37,-40,-43,140,-46,-47,-97,-98,-99,-32,-42,-96,-103,-102,140,-95,-104,-105,-46,-100,-101,140,140,-108,-110,-107,-106,-109,140,140,-46,140,]),'RETURN':([29,67,72,75,81,85,119,121,130,131,132,133,136,137,138,148,183,186,190,203,204,211,212,213,214,215,216,221,222,225,226,229,230,231,236,237,240,241,],[-29,-31,-36,-41,141,-30,-37,-40,-43,141,-46,-47,-97,-98,-99,-32,-42,-96,-103,-102,141,-95,-104,-105,-46,-100,-101,141,141,-108,-110,-107,-106,-109,141,141,-46,141,]),'OP_NOT':([29,30,57,67,72,75,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,115,119,121,130,131,132,133,136,137,138,141,148,183,185,186,187,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,229,230,231,232,233,236,237,240,241,],[-29,53,53,-31,-36,-41,53,53,-30,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-37,-40,-43,53,-46,-47,-97,-98,-99,53,-32,-42,53,-96,53,-103,53,53,-102,53,53,53,-95,-104,-105,-46,-100,-101,53,53,53,53,-108,-110,-107,-106,-109,53,53,53,53,-46,53,]),'NOT':([29,30,57,67,72,75,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,115,119,121,130,131,132,133,136,137,138,141,148,183,185,186,187,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,229,230,231,232,233,236,237,240,241,],[-29,55,55,-31,-36,-41,55,55,-30,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-37,-40,-43,55,-46,-47,-97,-98,-99,55,-32,-42,55,-96,55,-103,55,55,-102,55,55,55,-95,-104,-105,-46,-100,-101,55,55,55,55,-108,-110,-107,-106,-109,55,55,55,55,-46,55,]),'SIZEOF':([29,30,57,67,72,75,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,115,119,121,130,131,132,133,136,137,138,141,148,183,185,186,187,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,229,230,231,232,233,236,237,240,241,],[-29,56,56,-31,-36,-41,56,56,-30,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-37,-40,-43,56,-46,-47,-97,-98,-99,56,-32,-42,56,-96,56,-103,56,56,-102,56,56,56,-95,-104,-105,-46,-100,-101,56,56,56,56,-108,-110,-107,-106,-109,56,56,56,56,-46,56,]),'NEW':([29,30,57,67,72,75,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,115,119,121,130,131,132,133,136,137,138,141,148,183,185,186,187,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,229,230,231,232,233,236,237,240,241,],[-29,58,58,-31,-36,-41,58,58,-30,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-37,-40,-43,58,-46,-47,-97,-98,-99,58,-32,-42,58,-96,58,-103,58,58,-102,58,58,58,-95,-104,-105,-46,-100,-101,58,58,58,58,-108,-110,-107,-106,-109,58,58,58,58,-46,58,]),'INT_V':([29,30,53,55,57,67,72,75,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,110,113,115,119,121,130,131,132,133,136,137,138,141,148,183,185,186,187,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,229,230,231,232,233,236,237,240,241,],[-29,60,60,60,60,-31,-36,-41,60,60,-30,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-37,-40,-43,60,-46,-47,-97,-98,-99,60,-32,-42,60,-96,60,-103,60,60,-102,60,60,60,-95,-104,-105,-46,-100,-101,60,60,60,60,-108,-110,-107,-106,-109,60,60,60,60,-46,60,]),'TRUE':([29,30,53,55,57,67,72,75,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,110,113,115,119,121,130,131,132,133,136,137,138,141,148,183,185,186,187,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,229,230,231,232,233,236,237,240,241,],[-29,61,61,61,61,-31,-36,-41,61,61,-30,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-37,-40,-43,61,-46,-47,-97,-98,-99,61,-32,-42,61,-96,61,-103,61,61,-102,61,61,61,-95,-104,-105,-46,-100,-101,61,61,61,61,-108,-110,-107,-106,-109,61,61,61,61,-46,61,]),'FALSE':([29,30,53,55,57,67,72,75,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,110,113,115,119,121,130,131,132,133,136,137,138,141,148,183,185,186,187,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,229,230,231,232,233,236,237,240,241,],[-29,62,62,62,62,-31,-36,-41,62,62,-30,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-37,-40,-43,62,-46,-47,-97,-98,-99,62,-32,-42,62,-96,62,-103,62,62,-102,62,62,62,-95,-104,-105,-46,-100,-101,62,62,62,62,-108,-110,-107,-106,-109,62,62,62,62,-46,62,]),'STRING_V':([29,30,53,55,57,67,72,75,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,110,113,115,119,121,130,131,132,133,136,137,138,141,148,183,185,186,187,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,229,230,231,232,233,236,237,240,241,],[-29,64,64,64,64,-31,-36,-41,64,64,-30,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-37,-40,-43,64,-46,-47,-97,-98,-99,64,-32,-42,64,-96,64,-103,64,64,-102,64,64,64,-95,-104,-105,-46,-100,-101,64,64,64,64,-108,-110,-107,-106,-109,64,64,64,64,-46,64,]),'THIS':([29,30,53,55,57,67,72,75,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,110,113,115,119,121,130,131,132,133,136,137,138,141,148,183,185,186,187,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,229,230,231,232,233,236,237,240,241,],[-29,65,65,65,65,-31,-36,-41,65,65,-30,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-37,-40,-43,65,-46,-47,-97,-98,-99,65,-32,-42,65,-96,65,-103,65,65,-102,65,65,65,-95,-104,-105,-46,-100,-101,65,65,65,65,-108,-110,-107,-106,-109,65,65,65,65,-46,65,]),'TYPEID':([29,30,53,55,57,67,72,75,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,110,113,115,119,121,130,131,132,133,136,137,138,141,148,183,185,186,187,190,201,202,203,204,207,209,211,212,213,214,215,216,218,220,221,222,225,226,229,230,231,232,233,236,237,240,241,],[-29,66,66,66,66,-31,-36,-41,66,66,-30,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-37,-40,-43,66,-46,-47,-97,-98,-99,66,-32,-42,66,-96,66,-103,66,66,-102,66,66,66,-95,-104,-105,-46,-100,-101,66,66,66,66,-108,-110,-107,-106,-109,66,66,66,66,-46,66,]),'ELSE':([29,67,72,75,85,119,121,130,136,137,138,148,183,186,190,203,211,212,214,215,216,225,226,229,231,238,239,240,],[-29,-31,-36,-41,-30,-37,-40,-43,-97,-98,-99,-32,-42,-96,-103,-102,-95,221,222,-100,-101,-108,-110,-107,-109,241,221,222,]),'DOIS_PONTOS':([38,],[77,]),'MAIS_MAIS':([43,54,59,60,61,62,63,64,65,143,146,166,167,169,192,194,],[-84,105,-83,-85,-86,-87,-88,-89,-90,-84,-93,-81,-82,-91,-92,-94,]),'MENOS_MENOS':([43,54,59,60,61,62,63,64,65,143,146,166,167,169,192,194,],[-84,106,-83,-85,-86,-87,-88,-89,-90,-84,-93,-81,-82,-91,-92,-94,]),'PONTO':([43,54,59,60,61,62,63,64,65,104,109,143,146,166,167,168,169,192,194,],[-84,107,-83,-85,-86,-87,-88,-89,-90,107,107,-84,-93,-81,-82,107,-91,-92,-94,]),'SETA':([43,54,59,60,61,62,63,64,65,104,109,143,146,166,167,168,169,192,194,],[-84,108,-83,-85,-86,-87,-88,-89,-90,108,108,-84,-93,-81,-82,108,-91,-92,-94,]),'MULT':([43,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,101,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,101,101,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'DIV':([43,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,102,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,102,102,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'MODULO':([43,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,103,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,103,103,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'SOMA':([43,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,99,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,99,99,99,99,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'SUB':([43,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,100,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,100,100,100,100,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'MENOR_Q':([43,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,95,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,95,95,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'MAIOR_Q':([43,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,96,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,96,96,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'MAIOR_IGUAL':([43,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,97,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,97,97,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'MENOR_IGUAL':([43,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,98,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,98,98,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'IGUAL':([43,48,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,93,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,93,93,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'DIFERENTE':([43,48,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,94,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,94,94,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'OP_OU_EX':([43,47,48,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,91,-58,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,91,91,-56,-57,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'XOR':([43,47,48,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,92,-58,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,92,92,-56,-57,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'OP_E':([43,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,89,-55,-58,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,89,89,-53,-54,-56,-57,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'AND':([43,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,90,-55,-58,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,90,90,-53,-54,-56,-57,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'OP_OU':([43,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,87,-52,-55,-58,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,87,-50,-51,-53,-54,-56,-57,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),'OR':([43,45,46,47,48,49,50,51,52,54,59,60,61,62,63,64,65,104,105,106,109,143,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,192,193,194,],[-84,88,-52,-55,-58,-61,-66,-69,-73,-80,-83,-85,-86,-87,-88,-89,-90,-74,-76,-77,-75,-84,-93,88,-50,-51,-53,-54,-56,-57,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-81,-82,-91,-79,-92,-78,-94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cpp':([0,2,3,4,5,6,],[1,16,17,18,19,20,]),'decl_classe':([0,2,3,4,5,6,],[2,2,2,2,2,2,]),'decl_funcao':([0,2,3,4,5,6,77,123,124,125,179,180,],[3,3,3,3,3,3,124,124,124,180,124,124,]),'decl_variavel':([0,2,3,4,5,6,77,81,123,124,125,131,179,180,188,204,221,222,236,237,241,],[4,4,4,4,4,4,123,136,123,123,179,136,123,123,201,136,136,136,136,136,136,]),'typedef':([0,2,3,4,5,6,81,131,204,221,222,236,237,241,],[5,5,5,5,5,5,137,137,137,137,137,137,137,137,]),'using':([0,2,3,4,5,6,81,131,204,221,222,236,237,241,],[6,6,6,6,6,6,138,138,138,138,138,138,138,138,]),'tipo':([0,2,3,4,5,6,11,28,33,58,77,81,83,123,124,125,127,131,179,180,188,204,221,222,236,237,241,],[9,9,9,9,9,9,24,39,39,112,126,142,39,126,126,126,39,142,126,126,142,142,142,142,142,142,142,]),'body_class':([21,],[26,]),'decl_variavel_n':([22,44,68,172,181,191,],[31,86,114,195,31,31,]),'parametros':([28,33,83,127,],[40,70,145,182,]),'exp':([30,57,81,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[44,111,135,171,172,135,189,198,199,208,210,135,217,219,223,224,135,135,234,235,135,135,135,]),'exp_1':([30,57,81,84,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[45,45,45,147,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'exp_2':([30,57,81,84,87,88,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[46,46,46,46,149,150,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'exp_3':([30,57,81,84,87,88,89,90,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[47,47,47,47,47,47,151,152,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'exp_4':([30,57,81,84,87,88,89,90,91,92,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[48,48,48,48,48,48,48,48,153,154,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'exp_5':([30,57,81,84,87,88,89,90,91,92,93,94,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[49,49,49,49,49,49,49,49,49,49,155,156,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'exp_6':([30,57,81,84,87,88,89,90,91,92,93,94,95,96,97,98,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[50,50,50,50,50,50,50,50,50,50,50,50,157,158,159,160,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'exp_7':([30,57,81,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,161,162,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'exp_8':([30,57,81,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,163,164,165,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'exp_9':([30,53,55,57,81,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,110,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[54,104,109,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,168,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'exp_10':([30,53,55,57,81,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,110,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,166,167,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'chamada_funcao':([30,53,55,57,81,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,110,113,115,131,141,185,187,201,202,204,207,209,218,220,221,222,232,233,236,237,241,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'decl_typedef_n':([34,120,],[73,175,]),'body':([41,71,79,82,116,117,204,205,206,221,222,236,237,241,],[80,118,128,144,173,174,212,215,216,225,231,239,212,231,]),'content_class':([77,123,124,179,180,],[122,177,178,196,197,]),'comandos':([81,131,],[129,184,]),'comando':([81,131,204,237,],[131,131,213,213,]),'condicional_1':([81,131,204,221,222,236,237,241,],[132,132,214,226,229,238,240,229,]),'condicional_2':([81,131,204,222,237,],[133,133,133,230,133,]),'for_log':([188,],[200,]),'rest_if':([204,236,237,],[211,211,211,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cpp","S'",1,None,None,None),
  ('cpp -> decl_classe','cpp',1,'p_cpp','sintatico.py',26),
  ('cpp -> decl_funcao','cpp',1,'p_cpp','sintatico.py',27),
  ('cpp -> decl_variavel','cpp',1,'p_cpp','sintatico.py',28),
  ('cpp -> typedef','cpp',1,'p_cpp','sintatico.py',29),
  ('cpp -> using','cpp',1,'p_cpp','sintatico.py',30),
  ('cpp -> decl_classe cpp','cpp',2,'p_cpp','sintatico.py',31),
  ('cpp -> decl_funcao cpp','cpp',2,'p_cpp','sintatico.py',32),
  ('cpp -> decl_variavel cpp','cpp',2,'p_cpp','sintatico.py',33),
  ('cpp -> typedef cpp','cpp',2,'p_cpp','sintatico.py',34),
  ('cpp -> using cpp','cpp',2,'p_cpp','sintatico.py',35),
  ('decl_classe -> CLASS ID body_class PONTO_VIRG','decl_classe',4,'p_decl_classe','sintatico.py',39),
  ('body_class -> CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHA','body_class',5,'p_body_class','sintatico.py',43),
  ('content_class -> decl_variavel','content_class',1,'p_content_class','sintatico.py',47),
  ('content_class -> decl_funcao','content_class',1,'p_content_class','sintatico.py',48),
  ('content_class -> STATIC decl_variavel','content_class',2,'p_content_class','sintatico.py',49),
  ('content_class -> STATIC decl_funcao','content_class',2,'p_content_class','sintatico.py',50),
  ('content_class -> decl_variavel content_class','content_class',2,'p_content_class','sintatico.py',51),
  ('content_class -> decl_funcao content_class','content_class',2,'p_content_class','sintatico.py',52),
  ('content_class -> STATIC decl_variavel content_class','content_class',3,'p_content_class','sintatico.py',53),
  ('content_class -> STATIC decl_funcao content_class','content_class',3,'p_content_class','sintatico.py',54),
  ('decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',58),
  ('decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body','decl_funcao',5,'p_decl_funcao','sintatico.py',59),
  ('decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',60),
  ('decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',61),
  ('decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body','decl_funcao',5,'p_decl_funcao','sintatico.py',62),
  ('decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',63),
  ('parametros -> tipo ID','parametros',2,'p_parametros','sintatico.py',67),
  ('parametros -> tipo ID VIRGULA parametros','parametros',4,'p_parametros','sintatico.py',68),
  ('decl_variavel -> tipo ID PONTO_VIRG','decl_variavel',3,'p_decl_variavel','sintatico.py',72),
  ('decl_variavel -> tipo ID RECEBER exp PONTO_VIRG','decl_variavel',5,'p_decl_variavel','sintatico.py',73),
  ('decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG','decl_variavel',4,'p_decl_variavel','sintatico.py',74),
  ('decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG','decl_variavel',6,'p_decl_variavel','sintatico.py',75),
  ('decl_variavel_n -> VIRGULA ID decl_variavel_n','decl_variavel_n',3,'p_decl_variavel_n','sintatico.py',79),
  ('decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n','decl_variavel_n',5,'p_decl_variavel_n','sintatico.py',80),
  ('decl_variavel_n -> VIRGULA ID','decl_variavel_n',2,'p_decl_variavel_n','sintatico.py',81),
  ('typedef -> TYPEDEF tipo ID PONTO_VIRG','typedef',4,'p_typedef','sintatico.py',85),
  ('typedef -> TYPEDEF tipo ID decl_typedef_n PONTO_VIRG','typedef',5,'p_typedef','sintatico.py',86),
  ('decl_typedef_n -> VIRGULA ID decl_typedef_n','decl_typedef_n',3,'p_decl_typedef_n','sintatico.py',89),
  ('decl_typedef_n -> VIRGULA ID','decl_typedef_n',2,'p_decl_typedef_n','sintatico.py',90),
  ('using -> USING ID 2X_DOIS_PONTOS ID PONTO_VIRG','using',5,'p_using','sintatico.py',93),
  ('using -> USING ID ID PONTO_VIRG','using',4,'p_using','sintatico.py',94),
  ('body -> CHAVE_ABRE comandos CHAVE_FECHA','body',3,'p_body','sintatico.py',97),
  ('body -> CHAVE_ABRE CHAVE_FECHA','body',2,'p_body','sintatico.py',98),
  ('comandos -> comando','comandos',1,'p_comandos','sintatico.py',102),
  ('comandos -> comando comandos','comandos',2,'p_comandos','sintatico.py',103),
  ('comando -> condicional_1','comando',1,'p_comando','sintatico.py',107),
  ('comando -> condicional_2','comando',1,'p_comando','sintatico.py',108),
  ('exp -> exp RECEBER exp_1','exp',3,'p_exp','sintatico.py',112),
  ('exp -> exp_1','exp',1,'p_exp','sintatico.py',113),
  ('exp_1 -> exp_1 OP_OU exp_2','exp_1',3,'p_exp_1','sintatico.py',117),
  ('exp_1 -> exp_1 OR exp_2','exp_1',3,'p_exp_1','sintatico.py',118),
  ('exp_1 -> exp_2','exp_1',1,'p_exp_1','sintatico.py',119),
  ('exp_2 -> exp_2 OP_E exp_3','exp_2',3,'p_exp_2','sintatico.py',123),
  ('exp_2 -> exp_2 AND exp_3','exp_2',3,'p_exp_2','sintatico.py',124),
  ('exp_2 -> exp_3','exp_2',1,'p_exp_2','sintatico.py',125),
  ('exp_3 -> exp_3 OP_OU_EX exp_4','exp_3',3,'p_exp_3','sintatico.py',129),
  ('exp_3 -> exp_3 XOR exp_4','exp_3',3,'p_exp_3','sintatico.py',130),
  ('exp_3 -> exp_4','exp_3',1,'p_exp_3','sintatico.py',131),
  ('exp_4 -> exp_4 IGUAL exp_5','exp_4',3,'p_exp_4','sintatico.py',135),
  ('exp_4 -> exp_4 DIFERENTE exp_5','exp_4',3,'p_exp_4','sintatico.py',136),
  ('exp_4 -> exp_5','exp_4',1,'p_exp_4','sintatico.py',137),
  ('exp_5 -> exp_5 MENOR_Q exp_6','exp_5',3,'p_exp_5','sintatico.py',141),
  ('exp_5 -> exp_5 MAIOR_Q exp_6','exp_5',3,'p_exp_5','sintatico.py',142),
  ('exp_5 -> exp_5 MAIOR_IGUAL exp_6','exp_5',3,'p_exp_5','sintatico.py',143),
  ('exp_5 -> exp_5 MENOR_IGUAL exp_6','exp_5',3,'p_exp_5','sintatico.py',144),
  ('exp_5 -> exp_6','exp_5',1,'p_exp_5','sintatico.py',145),
  ('exp_6 -> exp_6 SOMA exp_7','exp_6',3,'p_exp_6','sintatico.py',149),
  ('exp_6 -> exp_6 SUB exp_7','exp_6',3,'p_exp_6','sintatico.py',150),
  ('exp_6 -> exp_7','exp_6',1,'p_exp_6','sintatico.py',151),
  ('exp_7 -> exp_7 MULT exp_8','exp_7',3,'p_exp_7','sintatico.py',155),
  ('exp_7 -> exp_7 DIV exp_8','exp_7',3,'p_exp_7','sintatico.py',156),
  ('exp_7 -> exp_7 MODULO exp_8','exp_7',3,'p_exp_7','sintatico.py',157),
  ('exp_7 -> exp_8','exp_7',1,'p_exp_7','sintatico.py',158),
  ('exp_8 -> OP_NOT exp_9','exp_8',2,'p_exp_8','sintatico.py',162),
  ('exp_8 -> NOT exp_9','exp_8',2,'p_exp_8','sintatico.py',163),
  ('exp_8 -> exp_9 MAIS_MAIS','exp_8',2,'p_exp_8','sintatico.py',164),
  ('exp_8 -> exp_9 MENOS_MENOS','exp_8',2,'p_exp_8','sintatico.py',165),
  ('exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA','exp_8',4,'p_exp_8','sintatico.py',166),
  ('exp_8 -> NEW tipo PONTO_VIRG','exp_8',3,'p_exp_8','sintatico.py',167),
  ('exp_8 -> exp_9','exp_8',1,'p_exp_8','sintatico.py',168),
  ('exp_9 -> exp_9 PONTO exp_10','exp_9',3,'p_exp_9','sintatico.py',171),
  ('exp_9 -> exp_9 SETA exp_10','exp_9',3,'p_exp_9','sintatico.py',172),
  ('exp_9 -> exp_10','exp_9',1,'p_exp_9','sintatico.py',173),
  ('exp_10 -> ID','exp_10',1,'p_exp_10','sintatico.py',177),
  ('exp_10 -> INT_V','exp_10',1,'p_exp_10','sintatico.py',178),
  ('exp_10 -> TRUE','exp_10',1,'p_exp_10','sintatico.py',179),
  ('exp_10 -> FALSE','exp_10',1,'p_exp_10','sintatico.py',180),
  ('exp_10 -> chamada_funcao','exp_10',1,'p_exp_10','sintatico.py',181),
  ('exp_10 -> STRING_V','exp_10',1,'p_exp_10','sintatico.py',182),
  ('exp_10 -> THIS','exp_10',1,'p_exp_10','sintatico.py',183),
  ('exp_10 -> PARENT_ABRE exp PARENT_FECHA','exp_10',3,'p_exp_10','sintatico.py',184),
  ('chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA','chamada_funcao',4,'p_chamada_funcao','sintatico.py',188),
  ('chamada_funcao -> ID PARENT_ABRE PARENT_FECHA','chamada_funcao',3,'p_chamada_funcao','sintatico.py',189),
  ('chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA','chamada_funcao',4,'p_chamada_funcao','sintatico.py',190),
  ('condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if','condicional_1',5,'p_condicional_1','sintatico.py',193),
  ('condicional_1 -> exp PONTO_VIRG','condicional_1',2,'p_condicional_1','sintatico.py',194),
  ('condicional_1 -> decl_variavel','condicional_1',1,'p_condicional_1','sintatico.py',195),
  ('condicional_1 -> typedef','condicional_1',1,'p_condicional_1','sintatico.py',196),
  ('condicional_1 -> using','condicional_1',1,'p_condicional_1','sintatico.py',197),
  ('condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body','condicional_1',5,'p_condicional_1','sintatico.py',198),
  ('condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body','condicional_1',5,'p_condicional_1','sintatico.py',199),
  ('condicional_1 -> RETURN exp PONTO_VIRG','condicional_1',3,'p_condicional_1','sintatico.py',200),
  ('condicional_1 -> RETURN PONTO_VIRG','condicional_1',2,'p_condicional_1','sintatico.py',201),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body','condicional_2',5,'p_condicional_2','sintatico.py',204),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando','condicional_2',5,'p_condicional_2','sintatico.py',205),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2','condicional_2',7,'p_condicional_2','sintatico.py',206),
  ('rest_if -> condicional_1 ELSE condicional_1','rest_if',3,'p_rest_if','sintatico.py',209),
  ('rest_if -> body ELSE body','rest_if',3,'p_rest_if','sintatico.py',210),
  ('rest_if -> condicional_1 ELSE body','rest_if',3,'p_rest_if','sintatico.py',211),
  ('rest_if -> body ELSE condicional_1','rest_if',3,'p_rest_if','sintatico.py',212),
  ('for_log -> decl_variavel PONTO_VIRG','for_log',2,'p_for_log','sintatico.py',216),
  ('for_log -> decl_variavel exp PONTO_VIRG','for_log',3,'p_for_log','sintatico.py',217),
  ('for_log -> decl_variavel exp PONTO_VIRG exp','for_log',4,'p_for_log','sintatico.py',218),
  ('for_log -> decl_variavel PONTO_VIRG exp','for_log',3,'p_for_log','sintatico.py',219),
  ('for_log -> PONTO_VIRG exp PONTO_VIRG exp','for_log',4,'p_for_log','sintatico.py',220),
  ('for_log -> PONTO_VIRG exp PONTO_VIRG','for_log',3,'p_for_log','sintatico.py',221),
  ('for_log -> PONTO_VIRG PONTO_VIRG exp','for_log',3,'p_for_log','sintatico.py',222),
  ('for_log -> PONTO_VIRG PONTO_VIRG','for_log',2,'p_for_log','sintatico.py',223),
  ('tipo -> INT','tipo',1,'p_tipo','sintatico.py',227),
  ('tipo -> BOOL','tipo',1,'p_tipo','sintatico.py',228),
  ('tipo -> ID','tipo',1,'p_tipo','sintatico.py',229),
  ('tipo -> STRING','tipo',1,'p_tipo','sintatico.py',230),
]
