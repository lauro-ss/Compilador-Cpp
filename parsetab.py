
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = '2X_DOIS_PONTOS AND BOOL CHAVE_ABRE CHAVE_FECHA CLASS DIFERENTE DIV DOIS_PONTOS ELSE FALSE FOR ID IF IGUAL INT INT_V MAIOR_IGUAL MAIOR_Q MAIS_MAIS MENOR_IGUAL MENOR_Q MENOS_MENOS MODULO MULT NEW NOT OP_E OP_NOT OP_OU OP_OU_EX OR PARENT_ABRE PARENT_FECHA PONTO PONTO_VIRG PUBLIC RECEBER RETURN SETA SIZEOF SOMA STATIC STRING STRING_V SUB THIS TRUE TYPEDEF TYPEID USING VIRGULA VOID WHILE XORcpp : decl_classe\n         | decl_funcao\n         | decl_variavel\n         | typedef\n         | using\n         | exp PONTO_VIRG\n         | exp PONTO_VIRG cpp\n         | decl_classe  cpp\n         | decl_funcao  cpp\n         | decl_variavel cpp\n         | typedef cpp\n         | using cppdecl_classe : CLASS ID body_class PONTO_VIRGbody_class : CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHA\n                  | CHAVE_ABRE CHAVE_FECHAcontent_class : decl_variavel\n                     | decl_funcao\n                     | STATIC decl_variavel\n                     | STATIC decl_funcao\n                     | decl_variavel content_class\n                     | decl_funcao content_class\n                     | STATIC decl_variavel content_class\n                     | STATIC decl_funcao content_classdecl_funcao : tipo ID PARENT_ABRE parametros PARENT_FECHA body\n                 | tipo ID PARENT_ABRE PARENT_FECHA body\n                 | tipo ID PARENT_ABRE VOID PARENT_FECHA body\n                 | VOID ID PARENT_ABRE parametros PARENT_FECHA body\n                 | VOID ID PARENT_ABRE PARENT_FECHA body\n                 | VOID ID PARENT_ABRE VOID PARENT_FECHA bodyparametros : tipo ID\n                | tipo ID VIRGULA parametrosdecl_variavel : tipo ID PONTO_VIRG \n                   | tipo ID RECEBER exp PONTO_VIRG\n                   | tipo ID decl_variavel_n PONTO_VIRG \n                   | tipo ID RECEBER exp decl_variavel_n PONTO_VIRGdecl_variavel_n : VIRGULA ID decl_variavel_n\n                     | VIRGULA ID RECEBER exp decl_variavel_n\n                     | VIRGULA ID RECEBER exp\n                     | VIRGULA ID \n                     typedef : TYPEDEF tipo ID PONTO_VIRG\n               | TYPEDEF tipo ID decl_typedef_n PONTO_VIRGdecl_typedef_n : VIRGULA ID decl_typedef_n\n                      | VIRGULA IDusing : USING ID 2X_DOIS_PONTOS ID PONTO_VIRG\n             | USING ID ID PONTO_VIRGbody : CHAVE_ABRE comandos CHAVE_FECHA\n            | CHAVE_ABRE CHAVE_FECHA comandos : comando \n               | comando comandoscomando : condicional_1\n               | condicional_2exp : exp RECEBER exp_1\n           | exp_1exp_1 : exp_1 OP_OU exp_2 \n           | exp_1 OR exp_2\n           | exp_2exp_2 : exp_2 OP_E exp_3\n           | exp_2 AND exp_3\n           | exp_3exp_3 : exp_3 OP_OU_EX exp_4\n           | exp_3 XOR exp_4\n           | exp_4exp_4 : exp_4 IGUAL exp_5\n           | exp_4 DIFERENTE exp_5\n           | exp_5exp_5 : exp_5 MENOR_Q exp_6\n           | exp_5 MAIOR_Q exp_6\n           | exp_5 MAIOR_IGUAL exp_6\n           | exp_5 MENOR_IGUAL exp_6\n           | exp_6exp_6 : exp_6 SOMA exp_7\n           | exp_6 SUB exp_7\n           | exp_7exp_7 : exp_7 MULT exp_8\n           | exp_7 DIV exp_8\n           | exp_7 MODULO exp_8\n           | exp_8exp_8 : OP_NOT exp_9\n           | NOT exp_9\n           | exp_9 MAIS_MAIS\n           | exp_9 MENOS_MENOS\n           | SIZEOF PARENT_ABRE exp_9 PARENT_FECHA\n           | NEW tipo\n           | exp_9exp_9 : exp_9 PONTO exp_10\n             | exp_9 SETA exp_10\n             | exp_10exp_10 : ID\n           | INT_V\n           | TRUE\n           | FALSE\n           | chamada_funcao\n           | STRING_V\n           | THIS\n           | PARENT_ABRE exp PARENT_FECHAchamada_funcao : ID PARENT_ABRE parametros_chamada PARENT_FECHA\n                      | ID PARENT_ABRE PARENT_FECHA\n                      | TYPEID PARENT_ABRE exp PARENT_FECHAparametros_chamada : exp VIRGULA parametros_chamada\n                          | expcondicional_1 : IF PARENT_ABRE exp PARENT_FECHA rest_if\n                     | exp PONTO_VIRG \n                     | decl_variavel\n                     | typedef\n                     | using\n                     | WHILE PARENT_ABRE exp PARENT_FECHA body\n                     | FOR PARENT_ABRE for_log PARENT_FECHA body\n                     | WHILE PARENT_ABRE exp PARENT_FECHA condicional_1\n                     | FOR PARENT_ABRE for_log PARENT_FECHA condicional_1\n                     | RETURN exp PONTO_VIRG\n                     | RETURN PONTO_VIRGcondicional_2 : IF PARENT_ABRE exp PARENT_FECHA body\n                     | IF PARENT_ABRE exp PARENT_FECHA comando\n                     | IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2\n                     | IF PARENT_ABRE exp PARENT_FECHA body ELSE condicional_2rest_if : condicional_1 ELSE condicional_1\n               | body ELSE body\n               | condicional_1 ELSE body\n               | body ELSE condicional_1for_log : decl_variavel PONTO_VIRG\n             | decl_variavel exp PONTO_VIRG\n             | decl_variavel exp PONTO_VIRG exp\n             | decl_variavel PONTO_VIRG exp\n             | exp PONTO_VIRG PONTO_VIRG exp\n             | exp PONTO_VIRG exp PONTO_VIRG exp\n             | exp PONTO_VIRG PONTO_VIRG\n             | exp PONTO_VIRG exp PONTO_VIRG\n             | PONTO_VIRG exp PONTO_VIRG exp\n             | PONTO_VIRG exp PONTO_VIRG\n             | PONTO_VIRG PONTO_VIRG exp\n             | PONTO_VIRG PONTO_VIRGtipo : INT \n          | BOOL \n          | ID\n          | STRING'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,6,44,89,119,129,134,137,145,148,154,155,157,164,166,179,180,182,183,192,],[8,8,8,8,8,8,8,-32,-13,-34,-40,-45,-25,-33,-28,-41,-44,-24,-47,-26,-35,-29,-27,-46,]),'VOID':([0,2,3,4,5,6,44,88,89,94,119,129,134,137,141,145,148,154,155,157,159,160,161,164,166,179,180,182,183,188,189,192,],[12,12,12,12,12,12,12,127,-32,131,-13,-34,-40,-45,12,-25,-33,-28,-41,-44,12,12,12,-24,-47,-26,-35,-29,-27,12,12,-46,]),'TYPEDEF':([0,2,3,4,5,6,44,89,119,129,134,137,145,146,148,154,155,157,164,166,167,168,169,172,173,174,179,180,182,183,192,195,199,210,211,212,213,219,220,221,222,223,224,226,227,234,235,242,243,244,245,246,247,251,255,256,257,258,],[13,13,13,13,13,13,13,-32,-13,-34,-40,-45,-25,13,-33,-28,-41,-44,-24,-47,13,-50,-51,-103,-104,-105,-26,-35,-29,-27,-46,-102,-111,-110,13,13,13,-101,-112,-113,-50,-106,-108,-107,-109,13,13,-117,-115,-119,-116,-114,-118,13,13,13,13,-50,]),'USING':([0,2,3,4,5,6,44,89,119,129,134,137,145,146,148,154,155,157,164,166,167,168,169,172,173,174,179,180,182,183,192,195,199,210,211,212,213,219,220,221,222,223,224,226,227,234,235,242,243,244,245,246,247,251,255,256,257,258,],[14,14,14,14,14,14,14,-32,-13,-34,-40,-45,-25,14,-33,-28,-41,-44,-24,-47,14,-50,-51,-103,-104,-105,-26,-35,-29,-27,-46,-102,-111,-110,14,14,14,-101,-112,-113,-50,-106,-108,-107,-109,14,14,-117,-115,-119,-116,-114,-118,14,14,14,14,-50,]),'INT':([0,2,3,4,5,6,13,30,44,88,89,94,119,129,134,137,141,145,146,148,154,155,157,159,160,161,163,164,166,167,168,169,172,173,174,179,180,182,183,188,189,192,195,197,199,210,211,212,213,219,220,221,222,223,224,226,227,234,235,242,243,244,245,246,247,251,255,256,257,258,],[16,16,16,16,16,16,16,16,16,16,-32,16,-13,-34,-40,-45,16,-25,16,-33,-28,-41,-44,16,16,16,16,-24,-47,16,-50,-51,-103,-104,-105,-26,-35,-29,-27,16,16,-46,-102,16,-111,-110,16,16,16,-101,-112,-113,-50,-106,-108,-107,-109,16,16,-117,-115,-119,-116,-114,-118,16,16,16,16,-50,]),'BOOL':([0,2,3,4,5,6,13,30,44,88,89,94,119,129,134,137,141,145,146,148,154,155,157,159,160,161,163,164,166,167,168,169,172,173,174,179,180,182,183,188,189,192,195,197,199,210,211,212,213,219,220,221,222,223,224,226,227,234,235,242,243,244,245,246,247,251,255,256,257,258,],[17,17,17,17,17,17,17,17,17,17,-32,17,-13,-34,-40,-45,17,-25,17,-33,-28,-41,-44,17,17,17,17,-24,-47,17,-50,-51,-103,-104,-105,-26,-35,-29,-27,17,17,-46,-102,17,-111,-110,17,17,17,-101,-112,-113,-50,-106,-108,-107,-109,17,17,-117,-115,-119,-116,-114,-118,17,17,17,17,-50,]),'ID':([0,2,3,4,5,6,8,9,10,11,12,13,14,16,17,18,26,28,30,44,45,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,80,88,89,90,92,94,97,119,123,124,129,134,136,137,141,145,146,148,151,154,155,157,159,160,161,162,163,164,166,167,168,169,172,173,174,177,178,179,180,182,183,188,189,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,226,227,229,231,233,234,235,236,239,242,243,244,245,246,247,250,251,255,256,257,258,],[9,9,9,9,9,9,46,-134,48,50,51,53,54,-132,-133,-135,50,50,53,9,50,50,95,-134,96,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,53,-32,50,130,53,138,-13,50,143,-34,-40,156,-45,53,-25,9,-33,50,-28,-41,-44,53,53,53,190,53,-24,-47,9,-50,-51,-103,-104,-105,50,200,-26,-35,-29,-27,53,53,-46,50,-102,50,9,-111,50,50,-110,9,9,9,50,50,50,-101,-112,-113,-50,-106,-108,-107,-109,50,50,50,9,9,50,50,-117,-115,-119,-116,-114,-118,50,9,9,9,9,-50,]),'STRING':([0,2,3,4,5,6,13,30,44,88,89,94,119,129,134,137,141,145,146,148,154,155,157,159,160,161,163,164,166,167,168,169,172,173,174,179,180,182,183,188,189,192,195,197,199,210,211,212,213,219,220,221,222,223,224,226,227,234,235,242,243,244,245,246,247,251,255,256,257,258,],[18,18,18,18,18,18,18,18,18,18,-32,18,-13,-34,-40,-45,18,-25,18,-33,-28,-41,-44,18,18,18,18,-24,-47,18,-50,-51,-103,-104,-105,-26,-35,-29,-27,18,18,-46,-102,18,-111,-110,18,18,18,-101,-112,-113,-50,-106,-108,-107,-109,18,18,-117,-115,-119,-116,-114,-118,18,18,18,18,-50,]),'OP_NOT':([0,2,3,4,5,6,11,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,80,89,90,119,123,129,134,137,145,146,148,151,154,155,157,164,166,167,168,169,172,173,174,177,179,180,182,183,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,226,227,229,231,233,234,235,236,239,242,243,244,245,246,247,250,251,255,256,257,258,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-32,26,-13,26,-34,-40,-45,-25,26,-33,26,-28,-41,-44,-24,-47,26,-50,-51,-103,-104,-105,26,-26,-35,-29,-27,-46,26,-102,26,26,-111,26,26,-110,26,26,26,26,26,26,-101,-112,-113,-50,-106,-108,-107,-109,26,26,26,26,26,26,26,-117,-115,-119,-116,-114,-118,26,26,26,26,26,-50,]),'NOT':([0,2,3,4,5,6,11,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,80,89,90,119,123,129,134,137,145,146,148,151,154,155,157,164,166,167,168,169,172,173,174,177,179,180,182,183,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,226,227,229,231,233,234,235,236,239,242,243,244,245,246,247,250,251,255,256,257,258,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-32,28,-13,28,-34,-40,-45,-25,28,-33,28,-28,-41,-44,-24,-47,28,-50,-51,-103,-104,-105,28,-26,-35,-29,-27,-46,28,-102,28,28,-111,28,28,-110,28,28,28,28,28,28,-101,-112,-113,-50,-106,-108,-107,-109,28,28,28,28,28,28,28,-117,-115,-119,-116,-114,-118,28,28,28,28,28,-50,]),'SIZEOF':([0,2,3,4,5,6,11,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,80,89,90,119,123,129,134,137,145,146,148,151,154,155,157,164,166,167,168,169,172,173,174,177,179,180,182,183,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,226,227,229,231,233,234,235,236,239,242,243,244,245,246,247,250,251,255,256,257,258,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-32,29,-13,29,-34,-40,-45,-25,29,-33,29,-28,-41,-44,-24,-47,29,-50,-51,-103,-104,-105,29,-26,-35,-29,-27,-46,29,-102,29,29,-111,29,29,-110,29,29,29,29,29,29,-101,-112,-113,-50,-106,-108,-107,-109,29,29,29,29,29,29,29,-117,-115,-119,-116,-114,-118,29,29,29,29,29,-50,]),'NEW':([0,2,3,4,5,6,11,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,80,89,90,119,123,129,134,137,145,146,148,151,154,155,157,164,166,167,168,169,172,173,174,177,179,180,182,183,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,226,227,229,231,233,234,235,236,239,242,243,244,245,246,247,250,251,255,256,257,258,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-32,30,-13,30,-34,-40,-45,-25,30,-33,30,-28,-41,-44,-24,-47,30,-50,-51,-103,-104,-105,30,-26,-35,-29,-27,-46,30,-102,30,30,-111,30,30,-110,30,30,30,30,30,30,-101,-112,-113,-50,-106,-108,-107,-109,30,30,30,30,30,30,30,-117,-115,-119,-116,-114,-118,30,30,30,30,30,-50,]),'INT_V':([0,2,3,4,5,6,11,26,28,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,80,89,90,119,123,129,134,137,145,146,148,151,154,155,157,164,166,167,168,169,172,173,174,177,179,180,182,183,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,226,227,229,231,233,234,235,236,239,242,243,244,245,246,247,250,251,255,256,257,258,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-32,32,-13,32,-34,-40,-45,-25,32,-33,32,-28,-41,-44,-24,-47,32,-50,-51,-103,-104,-105,32,-26,-35,-29,-27,-46,32,-102,32,32,-111,32,32,-110,32,32,32,32,32,32,-101,-112,-113,-50,-106,-108,-107,-109,32,32,32,32,32,32,32,-117,-115,-119,-116,-114,-118,32,32,32,32,32,-50,]),'TRUE':([0,2,3,4,5,6,11,26,28,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,80,89,90,119,123,129,134,137,145,146,148,151,154,155,157,164,166,167,168,169,172,173,174,177,179,180,182,183,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,226,227,229,231,233,234,235,236,239,242,243,244,245,246,247,250,251,255,256,257,258,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-32,33,-13,33,-34,-40,-45,-25,33,-33,33,-28,-41,-44,-24,-47,33,-50,-51,-103,-104,-105,33,-26,-35,-29,-27,-46,33,-102,33,33,-111,33,33,-110,33,33,33,33,33,33,-101,-112,-113,-50,-106,-108,-107,-109,33,33,33,33,33,33,33,-117,-115,-119,-116,-114,-118,33,33,33,33,33,-50,]),'FALSE':([0,2,3,4,5,6,11,26,28,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,80,89,90,119,123,129,134,137,145,146,148,151,154,155,157,164,166,167,168,169,172,173,174,177,179,180,182,183,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,226,227,229,231,233,234,235,236,239,242,243,244,245,246,247,250,251,255,256,257,258,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-32,34,-13,34,-34,-40,-45,-25,34,-33,34,-28,-41,-44,-24,-47,34,-50,-51,-103,-104,-105,34,-26,-35,-29,-27,-46,34,-102,34,34,-111,34,34,-110,34,34,34,34,34,34,-101,-112,-113,-50,-106,-108,-107,-109,34,34,34,34,34,34,34,-117,-115,-119,-116,-114,-118,34,34,34,34,34,-50,]),'STRING_V':([0,2,3,4,5,6,11,26,28,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,80,89,90,119,123,129,134,137,145,146,148,151,154,155,157,164,166,167,168,169,172,173,174,177,179,180,182,183,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,226,227,229,231,233,234,235,236,239,242,243,244,245,246,247,250,251,255,256,257,258,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-32,36,-13,36,-34,-40,-45,-25,36,-33,36,-28,-41,-44,-24,-47,36,-50,-51,-103,-104,-105,36,-26,-35,-29,-27,-46,36,-102,36,36,-111,36,36,-110,36,36,36,36,36,36,-101,-112,-113,-50,-106,-108,-107,-109,36,36,36,36,36,36,36,-117,-115,-119,-116,-114,-118,36,36,36,36,36,-50,]),'THIS':([0,2,3,4,5,6,11,26,28,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,80,89,90,119,123,129,134,137,145,146,148,151,154,155,157,164,166,167,168,169,172,173,174,177,179,180,182,183,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,226,227,229,231,233,234,235,236,239,242,243,244,245,246,247,250,251,255,256,257,258,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-32,37,-13,37,-34,-40,-45,-25,37,-33,37,-28,-41,-44,-24,-47,37,-50,-51,-103,-104,-105,37,-26,-35,-29,-27,-46,37,-102,37,37,-111,37,37,-110,37,37,37,37,37,37,-101,-112,-113,-50,-106,-108,-107,-109,37,37,37,37,37,37,37,-117,-115,-119,-116,-114,-118,37,37,37,37,37,-50,]),'PARENT_ABRE':([0,2,3,4,5,6,9,11,26,28,29,38,44,45,47,48,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,80,89,90,119,123,129,134,137,145,146,148,151,154,155,157,164,166,167,168,169,170,172,173,174,175,176,177,179,180,182,183,190,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,225,226,227,229,231,233,234,235,236,239,241,242,243,244,245,246,247,250,251,255,256,257,258,],[11,11,11,11,11,11,47,11,11,11,78,80,11,11,11,88,47,94,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-32,11,-13,11,-34,-40,-45,-25,11,-33,11,-28,-41,-44,-24,-47,11,-50,-51,194,-103,-104,-105,196,197,11,-26,-35,-29,-27,88,-46,11,-102,11,11,-111,11,11,-110,11,11,11,11,11,11,-101,-112,-113,-50,-106,-108,236,-107,-109,11,11,11,11,11,11,11,250,-117,-115,-119,-116,-114,-118,11,11,11,11,11,-50,]),'TYPEID':([0,2,3,4,5,6,11,26,28,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,80,89,90,119,123,129,134,137,145,146,148,151,154,155,157,164,166,167,168,169,172,173,174,177,179,180,182,183,192,194,195,196,197,199,207,208,210,211,212,213,214,216,218,219,220,221,222,223,224,226,227,229,231,233,234,235,236,239,242,243,244,245,246,247,250,251,255,256,257,258,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-32,38,-13,38,-34,-40,-45,-25,38,-33,38,-28,-41,-44,-24,-47,38,-50,-51,-103,-104,-105,38,-26,-35,-29,-27,-46,38,-102,38,38,-111,38,38,-110,38,38,38,38,38,38,-101,-112,-113,-50,-106,-108,-107,-109,38,38,38,38,38,38,38,-117,-115,-119,-116,-114,-118,38,38,38,38,38,-50,]),'$end':([1,2,3,4,5,6,39,40,41,42,43,44,81,89,119,129,134,137,145,148,154,155,157,164,166,179,180,182,183,192,],[0,-1,-2,-3,-4,-5,-8,-9,-10,-11,-12,-6,-7,-32,-13,-34,-40,-45,-25,-33,-28,-41,-44,-24,-47,-26,-35,-29,-27,-46,]),'PONTO_VIRG':([7,9,15,16,17,18,19,20,21,22,23,24,25,27,31,32,33,34,35,36,37,48,50,53,72,73,74,77,79,82,83,86,89,91,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,122,128,129,130,135,138,139,140,148,149,150,156,171,177,180,181,184,185,190,197,198,200,201,207,208,209,215,217,218,232,],[44,-88,-53,-132,-133,-135,-56,-59,-62,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,89,-88,-134,-78,-80,-81,-79,-83,-52,119,-97,-32,129,-95,134,137,-54,-55,-57,-58,-60,-61,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-15,-96,148,-34,-39,155,157,-82,-98,-33,180,-36,-43,195,199,-35,-38,-42,-14,89,208,210,89,-37,214,216,218,229,231,233,239,]),'RECEBER':([7,9,15,16,17,18,19,20,21,22,23,24,25,27,31,32,33,34,35,36,37,48,49,50,53,72,73,74,77,79,82,86,87,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,122,128,130,139,140,171,181,190,198,200,204,205,209,215,217,228,230,232,237,238,240,248,249,252,],[45,-88,-53,-132,-133,-135,-56,-59,-62,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,90,45,-88,-134,-78,-80,-81,-79,-83,-52,-97,45,-95,-54,-55,-57,-58,-60,-61,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,45,-96,45,151,-82,-98,45,45,90,45,90,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'MAIS_MAIS':([9,27,31,32,33,34,35,36,37,50,86,93,115,116,122,140,],[-88,73,-87,-89,-90,-91,-92,-93,-94,-88,-97,-95,-85,-86,-96,-98,]),'MENOS_MENOS':([9,27,31,32,33,34,35,36,37,50,86,93,115,116,122,140,],[-88,74,-87,-89,-90,-91,-92,-93,-94,-88,-97,-95,-85,-86,-96,-98,]),'PONTO':([9,27,31,32,33,34,35,36,37,50,72,77,86,93,115,116,117,122,140,],[-88,75,-87,-89,-90,-91,-92,-93,-94,-88,75,75,-97,-95,-85,-86,75,-96,-98,]),'SETA':([9,27,31,32,33,34,35,36,37,50,72,77,86,93,115,116,117,122,140,],[-88,76,-87,-89,-90,-91,-92,-93,-94,-88,76,76,-97,-95,-85,-86,76,-96,-98,]),'MULT':([9,16,17,18,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,69,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,69,69,-74,-75,-76,-85,-86,-96,-82,-98,]),'DIV':([9,16,17,18,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,70,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,70,70,-74,-75,-76,-85,-86,-96,-82,-98,]),'MODULO':([9,16,17,18,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,71,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,71,71,-74,-75,-76,-85,-86,-96,-82,-98,]),'SOMA':([9,16,17,18,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,67,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,67,67,67,67,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'SUB':([9,16,17,18,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,68,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,68,68,68,68,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'MENOR_Q':([9,16,17,18,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,63,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,63,63,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'MAIOR_Q':([9,16,17,18,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,64,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,64,64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'MAIOR_IGUAL':([9,16,17,18,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,65,65,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'MENOR_IGUAL':([9,16,17,18,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,66,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,66,66,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'IGUAL':([9,16,17,18,21,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,61,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,61,61,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'DIFERENTE':([9,16,17,18,21,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,62,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,62,62,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'OP_OU_EX':([9,16,17,18,20,21,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,59,-62,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,59,59,-60,-61,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'XOR':([9,16,17,18,20,21,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,60,-62,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,60,60,-60,-61,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'OP_E':([9,16,17,18,19,20,21,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,57,-59,-62,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,57,57,-57,-58,-60,-61,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'AND':([9,16,17,18,19,20,21,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,86,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,-132,-133,-135,58,-59,-62,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,-97,-95,58,58,-57,-58,-60,-61,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'OP_OU':([9,15,16,17,18,19,20,21,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,82,86,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,55,-132,-133,-135,-56,-59,-62,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,55,-97,-95,-54,-55,-57,-58,-60,-61,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'OR':([9,15,16,17,18,19,20,21,22,23,24,25,27,31,32,33,34,35,36,37,50,53,72,73,74,77,79,82,86,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,139,140,],[-88,56,-132,-133,-135,-56,-59,-62,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,-88,-134,-78,-80,-81,-79,-83,56,-97,-95,-54,-55,-57,-58,-60,-61,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,-82,-98,]),'PARENT_FECHA':([15,16,17,18,19,20,21,22,23,24,25,27,31,32,33,34,35,36,37,47,49,50,53,72,73,74,77,79,82,85,86,87,88,93,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,127,131,132,139,140,142,143,191,204,205,206,214,216,228,229,230,231,233,237,238,239,240,248,249,252,],[-53,-132,-133,-135,-56,-59,-62,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,86,93,-88,-134,-78,-80,-81,-79,-83,-52,122,-97,-100,126,-95,133,-54,-55,-57,-58,-60,-61,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,139,140,-96,144,147,152,153,-82,-98,-99,-30,-31,211,212,213,-120,-131,-123,-121,-130,-129,-126,-122,-128,-127,-124,251,-125,255,]),'VIRGULA':([15,16,17,18,19,20,21,22,23,24,25,27,31,32,33,34,35,36,37,48,50,53,72,73,74,77,79,82,86,87,93,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,128,130,139,140,143,156,181,190,200,],[-53,-132,-133,-135,-56,-59,-62,-65,-70,-73,-77,-84,-87,-89,-90,-91,-92,-93,-94,92,-88,-134,-78,-80,-81,-79,-83,-52,-97,123,-95,136,-54,-55,-57,-58,-60,-61,-63,-64,-66,-67,-68,-69,-71,-72,-74,-75,-76,-85,-86,-96,92,92,-82,-98,163,136,92,92,92,]),'CHAVE_ABRE':([46,126,133,144,147,152,153,211,212,213,234,235,251,255,256,257,],[84,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'2X_DOIS_PONTOS':([54,],[97,]),'PUBLIC':([84,],[120,]),'CHAVE_FECHA':([84,89,129,134,137,145,146,148,154,155,157,158,159,160,164,165,166,167,168,169,172,173,174,179,180,182,183,186,187,188,189,192,193,195,199,202,203,210,219,220,221,222,223,224,226,227,242,243,244,245,246,247,258,],[121,-32,-34,-40,-45,-25,166,-33,-28,-41,-44,185,-16,-17,-24,192,-47,-48,-50,-51,-103,-104,-105,-26,-35,-29,-27,-20,-21,-18,-19,-46,-49,-102,-111,-22,-23,-110,-101,-112,-113,-50,-106,-108,-107,-109,-117,-115,-119,-116,-114,-118,-50,]),'STATIC':([89,129,141,145,148,154,159,160,164,166,179,180,182,183,188,189,192,],[-32,-34,161,-25,-33,-28,161,161,-24,-47,-26,-35,-29,-27,161,161,-46,]),'IF':([89,129,134,137,146,148,155,157,166,167,168,169,172,173,174,180,192,195,199,210,211,212,213,219,220,221,222,223,224,226,227,234,235,242,243,244,245,246,247,251,255,256,257,258,],[-32,-34,-40,-45,170,-33,-41,-44,-47,170,-50,-51,-103,-104,-105,-35,-46,-102,-111,-110,170,225,225,-101,-112,-113,-50,-106,-108,-107,-109,241,241,-117,-115,-119,-116,-114,-118,225,170,225,225,-50,]),'WHILE':([89,129,134,137,146,148,155,157,166,167,168,169,172,173,174,180,192,195,199,210,211,212,213,219,220,221,222,223,224,226,227,234,235,242,243,244,245,246,247,251,255,256,257,258,],[-32,-34,-40,-45,175,-33,-41,-44,-47,175,-50,-51,-103,-104,-105,-35,-46,-102,-111,-110,175,175,175,-101,-112,-113,-50,-106,-108,-107,-109,175,175,-117,-115,-119,-116,-114,-118,175,175,175,175,-50,]),'FOR':([89,129,134,137,146,148,155,157,166,167,168,169,172,173,174,180,192,195,199,210,211,212,213,219,220,221,222,223,224,226,227,234,235,242,243,244,245,246,247,251,255,256,257,258,],[-32,-34,-40,-45,176,-33,-41,-44,-47,176,-50,-51,-103,-104,-105,-35,-46,-102,-111,-110,176,176,176,-101,-112,-113,-50,-106,-108,-107,-109,176,176,-117,-115,-119,-116,-114,-118,176,176,176,176,-50,]),'RETURN':([89,129,134,137,146,148,155,157,166,167,168,169,172,173,174,180,192,195,199,210,211,212,213,219,220,221,222,223,224,226,227,234,235,242,243,244,245,246,247,251,255,256,257,258,],[-32,-34,-40,-45,177,-33,-41,-44,-47,177,-50,-51,-103,-104,-105,-35,-46,-102,-111,-110,177,177,177,-101,-112,-113,-50,-106,-108,-107,-109,177,177,-117,-115,-119,-116,-114,-118,177,177,177,177,-50,]),'ELSE':([89,129,134,137,148,155,157,166,172,173,174,180,192,195,199,210,219,220,222,223,224,226,227,242,244,245,247,253,254,258,],[-32,-34,-40,-45,-33,-41,-44,-47,-103,-104,-105,-35,-46,-102,-111,-110,-101,234,235,-106,-108,-107,-109,-117,-119,-116,-118,256,257,235,]),'DOIS_PONTOS':([120,],[141,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cpp':([0,2,3,4,5,6,44,],[1,39,40,41,42,43,81,]),'decl_classe':([0,2,3,4,5,6,44,],[2,2,2,2,2,2,2,]),'decl_funcao':([0,2,3,4,5,6,44,141,159,160,161,188,189,],[3,3,3,3,3,3,3,160,160,160,189,160,160,]),'decl_variavel':([0,2,3,4,5,6,44,141,146,159,160,161,167,188,189,197,211,212,213,234,235,251,255,256,257,],[4,4,4,4,4,4,4,159,172,159,159,188,172,159,159,207,172,172,172,172,172,172,172,172,172,]),'typedef':([0,2,3,4,5,6,44,146,167,211,212,213,234,235,251,255,256,257,],[5,5,5,5,5,5,5,173,173,173,173,173,173,173,173,173,173,173,]),'using':([0,2,3,4,5,6,44,146,167,211,212,213,234,235,251,255,256,257,],[6,6,6,6,6,6,6,174,174,174,174,174,174,174,174,174,174,174,]),'exp':([0,2,3,4,5,6,11,44,47,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[7,7,7,7,7,7,49,7,87,118,128,87,171,181,171,198,204,205,209,215,217,171,171,171,228,230,232,237,238,240,171,171,248,249,252,171,171,171,171,]),'tipo':([0,2,3,4,5,6,13,30,44,88,94,141,146,159,160,161,163,167,188,189,197,211,212,213,234,235,251,255,256,257,],[10,10,10,10,10,10,52,79,10,124,124,162,178,162,162,162,124,178,162,162,178,178,178,178,178,178,178,178,178,178,]),'exp_1':([0,2,3,4,5,6,11,44,45,47,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[15,15,15,15,15,15,15,15,82,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'exp_2':([0,2,3,4,5,6,11,44,45,47,55,56,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[19,19,19,19,19,19,19,19,19,19,98,99,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'exp_3':([0,2,3,4,5,6,11,44,45,47,55,56,57,58,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[20,20,20,20,20,20,20,20,20,20,20,20,100,101,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'exp_4':([0,2,3,4,5,6,11,44,45,47,55,56,57,58,59,60,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,102,103,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'exp_5':([0,2,3,4,5,6,11,44,45,47,55,56,57,58,59,60,61,62,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,104,105,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'exp_6':([0,2,3,4,5,6,11,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,106,107,108,109,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'exp_7':([0,2,3,4,5,6,11,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,110,111,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'exp_8':([0,2,3,4,5,6,11,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,112,113,114,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'exp_9':([0,2,3,4,5,6,11,26,28,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[27,27,27,27,27,27,27,72,77,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,117,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'exp_10':([0,2,3,4,5,6,11,26,28,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,115,116,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'chamada_funcao':([0,2,3,4,5,6,11,26,28,44,45,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,80,90,123,146,151,167,177,194,196,197,207,208,211,212,213,214,216,218,229,231,233,234,235,236,239,250,251,255,256,257,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'body_class':([46,],[83,]),'parametros_chamada':([47,123,],[85,142,]),'decl_variavel_n':([48,128,130,181,190,200,],[91,149,150,201,91,91,]),'parametros':([88,94,163,],[125,132,191,]),'decl_typedef_n':([95,156,],[135,184,]),'body':([126,133,144,147,152,153,211,212,213,234,235,251,255,256,257,],[145,154,164,179,182,183,220,223,226,242,247,254,220,247,242,]),'content_class':([141,159,160,188,189,],[158,186,187,202,203,]),'comandos':([146,167,],[165,193,]),'comando':([146,167,211,255,],[167,167,221,221,]),'condicional_1':([146,167,211,212,213,234,235,251,255,256,257,],[168,168,222,224,227,244,245,253,258,245,244,]),'condicional_2':([146,167,211,234,235,255,],[169,169,169,243,246,169,]),'for_log':([197,],[206,]),'rest_if':([211,251,255,],[219,219,219,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cpp","S'",1,None,None,None),
  ('cpp -> decl_classe','cpp',1,'p_cpp','sintatico.py',9),
  ('cpp -> decl_funcao','cpp',1,'p_cpp','sintatico.py',10),
  ('cpp -> decl_variavel','cpp',1,'p_cpp','sintatico.py',11),
  ('cpp -> typedef','cpp',1,'p_cpp','sintatico.py',12),
  ('cpp -> using','cpp',1,'p_cpp','sintatico.py',13),
  ('cpp -> exp PONTO_VIRG','cpp',2,'p_cpp','sintatico.py',14),
  ('cpp -> exp PONTO_VIRG cpp','cpp',3,'p_cpp','sintatico.py',15),
  ('cpp -> decl_classe cpp','cpp',2,'p_cpp','sintatico.py',16),
  ('cpp -> decl_funcao cpp','cpp',2,'p_cpp','sintatico.py',17),
  ('cpp -> decl_variavel cpp','cpp',2,'p_cpp','sintatico.py',18),
  ('cpp -> typedef cpp','cpp',2,'p_cpp','sintatico.py',19),
  ('cpp -> using cpp','cpp',2,'p_cpp','sintatico.py',20),
  ('decl_classe -> CLASS ID body_class PONTO_VIRG','decl_classe',4,'p_decl_classe','sintatico.py',33),
  ('body_class -> CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHA','body_class',5,'p_body_class','sintatico.py',38),
  ('body_class -> CHAVE_ABRE CHAVE_FECHA','body_class',2,'p_body_class','sintatico.py',39),
  ('content_class -> decl_variavel','content_class',1,'p_content_class','sintatico.py',47),
  ('content_class -> decl_funcao','content_class',1,'p_content_class','sintatico.py',48),
  ('content_class -> STATIC decl_variavel','content_class',2,'p_content_class','sintatico.py',49),
  ('content_class -> STATIC decl_funcao','content_class',2,'p_content_class','sintatico.py',50),
  ('content_class -> decl_variavel content_class','content_class',2,'p_content_class','sintatico.py',51),
  ('content_class -> decl_funcao content_class','content_class',2,'p_content_class','sintatico.py',52),
  ('content_class -> STATIC decl_variavel content_class','content_class',3,'p_content_class','sintatico.py',53),
  ('content_class -> STATIC decl_funcao content_class','content_class',3,'p_content_class','sintatico.py',54),
  ('decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',66),
  ('decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body','decl_funcao',5,'p_decl_funcao','sintatico.py',67),
  ('decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',68),
  ('decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',69),
  ('decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body','decl_funcao',5,'p_decl_funcao','sintatico.py',70),
  ('decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',71),
  ('parametros -> tipo ID','parametros',2,'p_parametros','sintatico.py',79),
  ('parametros -> tipo ID VIRGULA parametros','parametros',4,'p_parametros','sintatico.py',80),
  ('decl_variavel -> tipo ID PONTO_VIRG','decl_variavel',3,'p_decl_variavel','sintatico.py',88),
  ('decl_variavel -> tipo ID RECEBER exp PONTO_VIRG','decl_variavel',5,'p_decl_variavel','sintatico.py',89),
  ('decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG','decl_variavel',4,'p_decl_variavel','sintatico.py',90),
  ('decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG','decl_variavel',6,'p_decl_variavel','sintatico.py',91),
  ('decl_variavel_n -> VIRGULA ID decl_variavel_n','decl_variavel_n',3,'p_decl_variavel_n','sintatico.py',103),
  ('decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n','decl_variavel_n',5,'p_decl_variavel_n','sintatico.py',104),
  ('decl_variavel_n -> VIRGULA ID RECEBER exp','decl_variavel_n',4,'p_decl_variavel_n','sintatico.py',105),
  ('decl_variavel_n -> VIRGULA ID','decl_variavel_n',2,'p_decl_variavel_n','sintatico.py',106),
  ('typedef -> TYPEDEF tipo ID PONTO_VIRG','typedef',4,'p_typedef','sintatico.py',118),
  ('typedef -> TYPEDEF tipo ID decl_typedef_n PONTO_VIRG','typedef',5,'p_typedef','sintatico.py',119),
  ('decl_typedef_n -> VIRGULA ID decl_typedef_n','decl_typedef_n',3,'p_decl_typedef_n','sintatico.py',126),
  ('decl_typedef_n -> VIRGULA ID','decl_typedef_n',2,'p_decl_typedef_n','sintatico.py',127),
  ('using -> USING ID 2X_DOIS_PONTOS ID PONTO_VIRG','using',5,'p_using','sintatico.py',134),
  ('using -> USING ID ID PONTO_VIRG','using',4,'p_using','sintatico.py',135),
  ('body -> CHAVE_ABRE comandos CHAVE_FECHA','body',3,'p_body','sintatico.py',142),
  ('body -> CHAVE_ABRE CHAVE_FECHA','body',2,'p_body','sintatico.py',143),
  ('comandos -> comando','comandos',1,'p_comandos','sintatico.py',149),
  ('comandos -> comando comandos','comandos',2,'p_comandos','sintatico.py',150),
  ('comando -> condicional_1','comando',1,'p_comando','sintatico.py',158),
  ('comando -> condicional_2','comando',1,'p_comando','sintatico.py',159),
  ('exp -> exp RECEBER exp_1','exp',3,'p_exp','sintatico.py',167),
  ('exp -> exp_1','exp',1,'p_exp','sintatico.py',168),
  ('exp_1 -> exp_1 OP_OU exp_2','exp_1',3,'p_exp_1','sintatico.py',176),
  ('exp_1 -> exp_1 OR exp_2','exp_1',3,'p_exp_1','sintatico.py',177),
  ('exp_1 -> exp_2','exp_1',1,'p_exp_1','sintatico.py',178),
  ('exp_2 -> exp_2 OP_E exp_3','exp_2',3,'p_exp_2','sintatico.py',188),
  ('exp_2 -> exp_2 AND exp_3','exp_2',3,'p_exp_2','sintatico.py',189),
  ('exp_2 -> exp_3','exp_2',1,'p_exp_2','sintatico.py',190),
  ('exp_3 -> exp_3 OP_OU_EX exp_4','exp_3',3,'p_exp_3','sintatico.py',200),
  ('exp_3 -> exp_3 XOR exp_4','exp_3',3,'p_exp_3','sintatico.py',201),
  ('exp_3 -> exp_4','exp_3',1,'p_exp_3','sintatico.py',202),
  ('exp_4 -> exp_4 IGUAL exp_5','exp_4',3,'p_exp_4','sintatico.py',212),
  ('exp_4 -> exp_4 DIFERENTE exp_5','exp_4',3,'p_exp_4','sintatico.py',213),
  ('exp_4 -> exp_5','exp_4',1,'p_exp_4','sintatico.py',214),
  ('exp_5 -> exp_5 MENOR_Q exp_6','exp_5',3,'p_exp_5','sintatico.py',224),
  ('exp_5 -> exp_5 MAIOR_Q exp_6','exp_5',3,'p_exp_5','sintatico.py',225),
  ('exp_5 -> exp_5 MAIOR_IGUAL exp_6','exp_5',3,'p_exp_5','sintatico.py',226),
  ('exp_5 -> exp_5 MENOR_IGUAL exp_6','exp_5',3,'p_exp_5','sintatico.py',227),
  ('exp_5 -> exp_6','exp_5',1,'p_exp_5','sintatico.py',228),
  ('exp_6 -> exp_6 SOMA exp_7','exp_6',3,'p_exp_6','sintatico.py',242),
  ('exp_6 -> exp_6 SUB exp_7','exp_6',3,'p_exp_6','sintatico.py',243),
  ('exp_6 -> exp_7','exp_6',1,'p_exp_6','sintatico.py',244),
  ('exp_7 -> exp_7 MULT exp_8','exp_7',3,'p_exp_7','sintatico.py',254),
  ('exp_7 -> exp_7 DIV exp_8','exp_7',3,'p_exp_7','sintatico.py',255),
  ('exp_7 -> exp_7 MODULO exp_8','exp_7',3,'p_exp_7','sintatico.py',256),
  ('exp_7 -> exp_8','exp_7',1,'p_exp_7','sintatico.py',257),
  ('exp_8 -> OP_NOT exp_9','exp_8',2,'p_exp_8','sintatico.py',269),
  ('exp_8 -> NOT exp_9','exp_8',2,'p_exp_8','sintatico.py',270),
  ('exp_8 -> exp_9 MAIS_MAIS','exp_8',2,'p_exp_8','sintatico.py',271),
  ('exp_8 -> exp_9 MENOS_MENOS','exp_8',2,'p_exp_8','sintatico.py',272),
  ('exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA','exp_8',4,'p_exp_8','sintatico.py',273),
  ('exp_8 -> NEW tipo','exp_8',2,'p_exp_8','sintatico.py',274),
  ('exp_8 -> exp_9','exp_8',1,'p_exp_8','sintatico.py',275),
  ('exp_9 -> exp_9 PONTO exp_10','exp_9',3,'p_exp_9','sintatico.py',298),
  ('exp_9 -> exp_9 SETA exp_10','exp_9',3,'p_exp_9','sintatico.py',299),
  ('exp_9 -> exp_10','exp_9',1,'p_exp_9','sintatico.py',300),
  ('exp_10 -> ID','exp_10',1,'p_exp_10','sintatico.py',310),
  ('exp_10 -> INT_V','exp_10',1,'p_exp_10','sintatico.py',311),
  ('exp_10 -> TRUE','exp_10',1,'p_exp_10','sintatico.py',312),
  ('exp_10 -> FALSE','exp_10',1,'p_exp_10','sintatico.py',313),
  ('exp_10 -> chamada_funcao','exp_10',1,'p_exp_10','sintatico.py',314),
  ('exp_10 -> STRING_V','exp_10',1,'p_exp_10','sintatico.py',315),
  ('exp_10 -> THIS','exp_10',1,'p_exp_10','sintatico.py',316),
  ('exp_10 -> PARENT_ABRE exp PARENT_FECHA','exp_10',3,'p_exp_10','sintatico.py',317),
  ('chamada_funcao -> ID PARENT_ABRE parametros_chamada PARENT_FECHA','chamada_funcao',4,'p_chamada_funcao','sintatico.py',329),
  ('chamada_funcao -> ID PARENT_ABRE PARENT_FECHA','chamada_funcao',3,'p_chamada_funcao','sintatico.py',330),
  ('chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA','chamada_funcao',4,'p_chamada_funcao','sintatico.py',331),
  ('parametros_chamada -> exp VIRGULA parametros_chamada','parametros_chamada',3,'p_parametros_chamada','sintatico.py',341),
  ('parametros_chamada -> exp','parametros_chamada',1,'p_parametros_chamada','sintatico.py',342),
  ('condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if','condicional_1',5,'p_condicional_1','sintatico.py',349),
  ('condicional_1 -> exp PONTO_VIRG','condicional_1',2,'p_condicional_1','sintatico.py',350),
  ('condicional_1 -> decl_variavel','condicional_1',1,'p_condicional_1','sintatico.py',351),
  ('condicional_1 -> typedef','condicional_1',1,'p_condicional_1','sintatico.py',352),
  ('condicional_1 -> using','condicional_1',1,'p_condicional_1','sintatico.py',353),
  ('condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body','condicional_1',5,'p_condicional_1','sintatico.py',354),
  ('condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body','condicional_1',5,'p_condicional_1','sintatico.py',355),
  ('condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA condicional_1','condicional_1',5,'p_condicional_1','sintatico.py',356),
  ('condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA condicional_1','condicional_1',5,'p_condicional_1','sintatico.py',357),
  ('condicional_1 -> RETURN exp PONTO_VIRG','condicional_1',3,'p_condicional_1','sintatico.py',358),
  ('condicional_1 -> RETURN PONTO_VIRG','condicional_1',2,'p_condicional_1','sintatico.py',359),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body','condicional_2',5,'p_condicional_2','sintatico.py',391),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando','condicional_2',5,'p_condicional_2','sintatico.py',392),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2','condicional_2',7,'p_condicional_2','sintatico.py',393),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body ELSE condicional_2','condicional_2',7,'p_condicional_2','sintatico.py',394),
  ('rest_if -> condicional_1 ELSE condicional_1','rest_if',3,'p_rest_if','sintatico.py',401),
  ('rest_if -> body ELSE body','rest_if',3,'p_rest_if','sintatico.py',402),
  ('rest_if -> condicional_1 ELSE body','rest_if',3,'p_rest_if','sintatico.py',403),
  ('rest_if -> body ELSE condicional_1','rest_if',3,'p_rest_if','sintatico.py',404),
  ('for_log -> decl_variavel PONTO_VIRG','for_log',2,'p_for_log','sintatico.py',416),
  ('for_log -> decl_variavel exp PONTO_VIRG','for_log',3,'p_for_log','sintatico.py',417),
  ('for_log -> decl_variavel exp PONTO_VIRG exp','for_log',4,'p_for_log','sintatico.py',418),
  ('for_log -> decl_variavel PONTO_VIRG exp','for_log',3,'p_for_log','sintatico.py',419),
  ('for_log -> exp PONTO_VIRG PONTO_VIRG exp','for_log',4,'p_for_log','sintatico.py',420),
  ('for_log -> exp PONTO_VIRG exp PONTO_VIRG exp','for_log',5,'p_for_log','sintatico.py',421),
  ('for_log -> exp PONTO_VIRG PONTO_VIRG','for_log',3,'p_for_log','sintatico.py',422),
  ('for_log -> exp PONTO_VIRG exp PONTO_VIRG','for_log',4,'p_for_log','sintatico.py',423),
  ('for_log -> PONTO_VIRG exp PONTO_VIRG exp','for_log',4,'p_for_log','sintatico.py',424),
  ('for_log -> PONTO_VIRG exp PONTO_VIRG','for_log',3,'p_for_log','sintatico.py',425),
  ('for_log -> PONTO_VIRG PONTO_VIRG exp','for_log',3,'p_for_log','sintatico.py',426),
  ('for_log -> PONTO_VIRG PONTO_VIRG','for_log',2,'p_for_log','sintatico.py',427),
  ('tipo -> INT','tipo',1,'p_tipo','sintatico.py',467),
  ('tipo -> BOOL','tipo',1,'p_tipo','sintatico.py',468),
  ('tipo -> ID','tipo',1,'p_tipo','sintatico.py',469),
  ('tipo -> STRING','tipo',1,'p_tipo','sintatico.py',470),
]
