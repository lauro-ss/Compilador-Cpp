
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = '2X_DOIS_PONTOS AND BOOL CHAVE_ABRE CHAVE_FECHA CLASS DIFERENTE DIV DOIS_PONTOS ELSE FALSE FOR ID IF IGUAL INT INT_V MAIOR_IGUAL MAIOR_Q MAIS_MAIS MENOR_IGUAL MENOR_Q MENOS_MENOS MODULO MULT NEW NOT OP_E OP_NOT OP_OU OP_OU_EX OR PARENT_ABRE PARENT_FECHA PONTO PONTO_VIRG PUBLIC RECEBER RETURN SETA SIZEOF SOMA STATIC STRING STRING_V SUB THIS TRUE TYPEDEF TYPEID USING VIRGULA VOID WHILE XORcpp : decl_classe\n         | decl_funcao\n         | decl_variavel\n         | typedef\n         | using\n         | decl_classe  cpp\n         | decl_funcao  cpp\n         | decl_variavel cpp\n         | typedef cpp\n         | using cppdecl_classe : CLASS ID body_class PONTO_VIRGbody_class : CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHA\n                  | CHAVE_ABRE CHAVE_FECHAcontent_class : decl_variavel\n                     | decl_funcao\n                     | STATIC decl_variavel\n                     | STATIC decl_funcao\n                     | decl_variavel content_class\n                     | decl_funcao content_class\n                     | STATIC decl_variavel content_class\n                     | STATIC decl_funcao content_classdecl_funcao : tipo ID PARENT_ABRE parametros PARENT_FECHA body\n                 | tipo ID PARENT_ABRE PARENT_FECHA body\n                 | tipo ID PARENT_ABRE VOID PARENT_FECHA body\n                 | VOID ID PARENT_ABRE parametros PARENT_FECHA body\n                 | VOID ID PARENT_ABRE PARENT_FECHA body\n                 | VOID ID PARENT_ABRE VOID PARENT_FECHA bodyparametros : tipo ID\n                | tipo ID VIRGULA parametrosdecl_variavel : tipo ID PONTO_VIRG \n                   | tipo ID RECEBER exp PONTO_VIRG\n                   | tipo ID decl_variavel_n PONTO_VIRG \n                   | tipo ID RECEBER exp decl_variavel_n PONTO_VIRGdecl_variavel_n : VIRGULA ID decl_variavel_n\n                     | VIRGULA ID RECEBER exp decl_variavel_n\n                     | VIRGULA ID RECEBER exp\n                     | VIRGULA ID \n                     typedef : TYPEDEF tipo ID PONTO_VIRG\n               | TYPEDEF tipo ID decl_typedef_n PONTO_VIRGdecl_typedef_n : VIRGULA ID decl_typedef_n\n                      | VIRGULA IDusing : USING ID 2X_DOIS_PONTOS ID PONTO_VIRG\n             | USING ID ID PONTO_VIRGbody : CHAVE_ABRE comandos CHAVE_FECHA\n            | CHAVE_ABRE CHAVE_FECHA comandos : comando \n               | comando comandoscomando : condicional_1\n               | condicional_2exp : exp RECEBER exp_1\n           | exp_1exp_1 : exp_1 OP_OU exp_2 \n           | exp_1 OR exp_2\n           | exp_2exp_2 : exp_2 OP_E exp_3\n           | exp_2 AND exp_3\n           | exp_3exp_3 : exp_3 OP_OU_EX exp_4\n           | exp_3 XOR exp_4\n           | exp_4exp_4 : exp_4 IGUAL exp_5\n           | exp_4 DIFERENTE exp_5\n           | exp_5exp_5 : exp_5 MENOR_Q exp_6\n           | exp_5 MAIOR_Q exp_6\n           | exp_5 MAIOR_IGUAL exp_6\n           | exp_5 MENOR_IGUAL exp_6\n           | exp_6exp_6 : exp_6 SOMA exp_7\n           | exp_6 SUB exp_7\n           | exp_7exp_7 : exp_7 MULT exp_8\n           | exp_7 DIV exp_8\n           | exp_7 MODULO exp_8\n           | exp_8exp_8 : OP_NOT exp_9\n           | NOT exp_9\n           | exp_9 MAIS_MAIS\n           | exp_9 MENOS_MENOS\n           | SIZEOF PARENT_ABRE exp_9 PARENT_FECHA\n           | NEW tipo PONTO_VIRG\n           | exp_9exp_9 : exp_9 PONTO exp_10\n             | exp_9 SETA exp_10\n             | exp_10exp_10 : ID\n           | INT_V\n           | TRUE\n           | FALSE\n           | chamada_funcao\n           | STRING_V\n           | THIS\n           | PARENT_ABRE exp PARENT_FECHAchamada_funcao : ID PARENT_ABRE parametros PARENT_FECHA\n                    | ID PARENT_ABRE PARENT_FECHA\n                    | TYPEID PARENT_ABRE exp PARENT_FECHAcondicional_1 : IF PARENT_ABRE exp PARENT_FECHA rest_if\n                     | exp PONTO_VIRG \n                     | decl_variavel\n                     | typedef\n                     | using\n                     | WHILE PARENT_ABRE exp PARENT_FECHA body\n                     | FOR PARENT_ABRE for_log PARENT_FECHA body\n                     | WHILE PARENT_ABRE exp PARENT_FECHA condicional_1\n                     | FOR PARENT_ABRE for_log PARENT_FECHA condicional_1\n                     | RETURN exp PONTO_VIRG\n                     | RETURN PONTO_VIRGcondicional_2 : IF PARENT_ABRE exp PARENT_FECHA body\n                     | IF PARENT_ABRE exp PARENT_FECHA comando\n                     | IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2\n                     | IF PARENT_ABRE exp PARENT_FECHA body ELSE condicional_2rest_if : condicional_1 ELSE condicional_1\n               | body ELSE body\n               | condicional_1 ELSE body\n               | body ELSE condicional_1for_log : decl_variavel PONTO_VIRG\n             | decl_variavel exp PONTO_VIRG\n             | decl_variavel exp PONTO_VIRG exp\n             | decl_variavel PONTO_VIRG exp\n             | PONTO_VIRG exp PONTO_VIRG exp\n             | PONTO_VIRG exp PONTO_VIRG\n             | PONTO_VIRG PONTO_VIRG exp\n             | PONTO_VIRG PONTO_VIRGtipo : INT \n          | BOOL \n          | ID\n          | STRING'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,6,29,37,68,73,76,81,86,119,120,122,129,131,145,149,174,175,184,],[7,7,7,7,7,7,-30,-11,-32,-38,-43,-23,-31,-26,-39,-42,-22,-45,-24,-33,-27,-25,-44,]),'VOID':([0,2,3,4,5,6,28,29,33,37,68,73,76,78,81,86,119,120,122,124,125,126,129,131,145,149,174,175,180,181,184,],[10,10,10,10,10,10,43,-30,70,-11,-32,-38,-43,10,-23,-31,-26,-39,-42,10,10,10,-22,-45,-24,-33,-27,-25,10,10,-44,]),'TYPEDEF':([0,2,3,4,5,6,29,37,68,73,76,81,82,86,119,120,122,129,131,132,133,134,137,138,139,145,149,174,175,184,187,191,204,205,206,207,212,213,214,215,216,217,219,220,225,226,231,232,233,234,235,236,239,243,244,245,246,],[11,11,11,11,11,11,-30,-11,-32,-38,-43,-23,11,-31,-26,-39,-42,-22,-45,11,-48,-49,-99,-100,-101,-24,-33,-27,-25,-44,-98,-107,-106,11,11,11,-97,-108,-109,-48,-102,-104,-103,-105,11,11,-113,-111,-115,-112,-110,-114,11,11,11,11,-48,]),'USING':([0,2,3,4,5,6,29,37,68,73,76,81,82,86,119,120,122,129,131,132,133,134,137,138,139,145,149,174,175,184,187,191,204,205,206,207,212,213,214,215,216,217,219,220,225,226,231,232,233,234,235,236,239,243,244,245,246,],[12,12,12,12,12,12,-30,-11,-32,-38,-43,-23,12,-31,-26,-39,-42,-22,-45,12,-48,-49,-99,-100,-101,-24,-33,-27,-25,-44,-98,-107,-106,12,12,12,-97,-108,-109,-48,-102,-104,-103,-105,12,12,-113,-111,-115,-112,-110,-114,12,12,12,12,-48,]),'INT':([0,2,3,4,5,6,11,28,29,33,37,59,68,73,76,78,81,82,84,86,119,120,122,124,125,126,128,129,131,132,133,134,137,138,139,145,149,174,175,180,181,184,187,189,191,204,205,206,207,212,213,214,215,216,217,219,220,225,226,231,232,233,234,235,236,239,243,244,245,246,],[13,13,13,13,13,13,13,13,-30,13,-11,13,-32,-38,-43,13,-23,13,13,-31,-26,-39,-42,13,13,13,13,-22,-45,13,-48,-49,-99,-100,-101,-24,-33,-27,-25,13,13,-44,-98,13,-107,-106,13,13,13,-97,-108,-109,-48,-102,-104,-103,-105,13,13,-113,-111,-115,-112,-110,-114,13,13,13,13,-48,]),'BOOL':([0,2,3,4,5,6,11,28,29,33,37,59,68,73,76,78,81,82,84,86,119,120,122,124,125,126,128,129,131,132,133,134,137,138,139,145,149,174,175,180,181,184,187,189,191,204,205,206,207,212,213,214,215,216,217,219,220,225,226,231,232,233,234,235,236,239,243,244,245,246,],[14,14,14,14,14,14,14,14,-30,14,-11,14,-32,-38,-43,14,-23,14,14,-31,-26,-39,-42,14,14,14,14,-22,-45,14,-48,-49,-99,-100,-101,-24,-33,-27,-25,14,14,-44,-98,14,-107,-106,14,14,14,-97,-108,-109,-48,-102,-104,-103,-105,14,14,-113,-111,-115,-112,-110,-114,14,14,14,14,-48,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,28,29,30,32,33,36,37,40,54,56,58,59,68,73,75,76,78,81,82,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,119,120,122,124,125,126,127,128,129,131,132,133,134,137,138,139,142,143,144,145,149,174,175,180,181,184,186,187,188,189,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,219,220,222,224,225,226,227,231,232,233,234,235,236,238,239,243,244,245,246,],[8,8,8,8,8,8,21,-126,22,23,8,25,-124,-125,-127,34,35,8,-30,44,69,8,77,-11,79,44,44,44,8,-32,-38,121,-43,8,-23,144,8,44,-31,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-26,-39,-42,8,8,8,182,8,-22,-45,144,-48,-49,-99,-100,-101,44,192,-126,-24,-33,-27,-25,8,8,-44,44,-98,44,8,-107,44,44,-106,144,144,144,44,44,-97,-108,-109,-48,-102,-104,-103,-105,44,44,144,144,44,-113,-111,-115,-112,-110,-114,44,144,144,144,144,-48,]),'STRING':([0,2,3,4,5,6,11,28,29,33,37,59,68,73,76,78,81,82,84,86,119,120,122,124,125,126,128,129,131,132,133,134,137,138,139,145,149,174,175,180,181,184,187,189,191,204,205,206,207,212,213,214,215,216,217,219,220,225,226,231,232,233,234,235,236,239,243,244,245,246,],[15,15,15,15,15,15,15,15,-30,15,-11,15,-32,-38,-43,15,-23,15,15,-31,-26,-39,-42,15,15,15,15,-22,-45,15,-48,-49,-99,-100,-101,-24,-33,-27,-25,15,15,-44,-98,15,-107,-106,15,15,15,-97,-108,-109,-48,-102,-104,-103,-105,15,15,-113,-111,-115,-112,-110,-114,15,15,15,15,-48,]),'$end':([1,2,3,4,5,6,16,17,18,19,20,29,37,68,73,76,81,86,119,120,122,129,131,145,149,174,175,184,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-30,-11,-32,-38,-43,-23,-31,-26,-39,-42,-22,-45,-24,-33,-27,-25,-44,]),'PONTO_VIRG':([8,13,14,15,22,26,29,31,34,35,39,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,68,69,74,77,86,87,105,106,107,110,113,115,121,136,142,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,176,177,182,189,190,192,193,194,195,196,202,203,209,211,],[-126,-124,-125,-127,29,37,-30,68,73,76,-13,-86,86,-51,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-32,-37,120,122,-31,149,-76,-78,-79,-77,171,-34,-41,187,191,-86,-95,-50,-33,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-36,-40,-12,29,203,204,29,-94,-80,-96,-35,208,210,222,224,]),'CHAVE_ABRE':([21,42,72,80,83,117,118,205,206,207,225,226,239,243,244,245,],[27,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'PARENT_ABRE':([22,23,29,30,44,54,56,57,58,67,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,135,137,138,139,140,141,142,144,149,182,184,186,187,188,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,218,219,220,222,224,225,226,227,230,231,232,233,234,235,236,238,239,243,244,245,246,],[28,33,-30,58,84,58,58,111,58,114,-32,-38,-43,58,58,-31,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-39,-42,-45,58,-48,-49,186,-99,-100,-101,188,189,58,84,-33,28,-44,58,-98,58,-107,58,58,-106,58,58,58,58,58,-97,-108,-109,-48,-102,-104,227,-103,-105,58,58,58,58,58,238,-113,-111,-115,-112,-110,-114,58,58,58,58,58,-48,]),'RECEBER':([22,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,69,105,106,107,110,112,136,144,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,182,190,192,193,194,195,199,200,209,211,221,223,228,229,237,240,],[30,-86,85,-51,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,116,-76,-78,-79,-77,85,85,-86,-95,-50,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,85,85,30,85,30,-94,-80,-96,85,85,85,85,85,85,85,85,85,85,]),'VIRGULA':([22,34,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,69,79,105,106,107,110,121,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,182,192,193,194,195,],[32,75,-86,32,-51,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,32,128,-76,-78,-79,-77,75,-95,-50,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,32,32,32,-94,-80,-96,]),'2X_DOIS_PONTOS':([25,],[36,]),'PUBLIC':([27,],[38,]),'CHAVE_FECHA':([27,29,68,73,76,81,82,86,119,120,122,123,124,125,129,130,131,132,133,134,137,138,139,145,149,174,175,178,179,180,181,184,185,187,191,197,198,204,212,213,214,215,216,217,219,220,231,232,233,234,235,236,246,],[39,-30,-32,-38,-43,-23,131,-31,-26,-39,-42,177,-14,-15,-22,184,-45,-46,-48,-49,-99,-100,-101,-24,-33,-27,-25,-18,-19,-16,-17,-44,-47,-98,-107,-20,-21,-106,-97,-108,-109,-48,-102,-104,-103,-105,-113,-111,-115,-112,-110,-114,-48,]),'PARENT_FECHA':([28,33,41,43,44,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,70,71,79,84,105,106,107,110,112,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,183,193,194,195,199,200,201,208,210,221,222,223,224,228,229,237,240,],[42,72,80,83,-86,-51,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,117,118,-28,147,-76,-78,-79,-77,170,193,-95,-50,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,194,-93,-81,195,-29,-94,-80,-96,205,206,207,-116,-123,-119,-117,-122,-121,-118,-120,239,243,]),'STATIC':([29,68,78,81,86,119,124,125,129,131,145,149,174,175,180,181,184,],[-30,-32,126,-23,-31,-26,126,126,-22,-45,-24,-33,-27,-25,126,126,-44,]),'IF':([29,68,73,76,82,86,120,122,131,132,133,134,137,138,139,149,184,187,191,204,205,206,207,212,213,214,215,216,217,219,220,225,226,231,232,233,234,235,236,239,243,244,245,246,],[-30,-32,-38,-43,135,-31,-39,-42,-45,135,-48,-49,-99,-100,-101,-33,-44,-98,-107,-106,135,218,218,-97,-108,-109,-48,-102,-104,-103,-105,230,230,-113,-111,-115,-112,-110,-114,218,135,218,218,-48,]),'WHILE':([29,68,73,76,82,86,120,122,131,132,133,134,137,138,139,149,184,187,191,204,205,206,207,212,213,214,215,216,217,219,220,225,226,231,232,233,234,235,236,239,243,244,245,246,],[-30,-32,-38,-43,140,-31,-39,-42,-45,140,-48,-49,-99,-100,-101,-33,-44,-98,-107,-106,140,140,140,-97,-108,-109,-48,-102,-104,-103,-105,140,140,-113,-111,-115,-112,-110,-114,140,140,140,140,-48,]),'FOR':([29,68,73,76,82,86,120,122,131,132,133,134,137,138,139,149,184,187,191,204,205,206,207,212,213,214,215,216,217,219,220,225,226,231,232,233,234,235,236,239,243,244,245,246,],[-30,-32,-38,-43,141,-31,-39,-42,-45,141,-48,-49,-99,-100,-101,-33,-44,-98,-107,-106,141,141,141,-97,-108,-109,-48,-102,-104,-103,-105,141,141,-113,-111,-115,-112,-110,-114,141,141,141,141,-48,]),'RETURN':([29,68,73,76,82,86,120,122,131,132,133,134,137,138,139,149,184,187,191,204,205,206,207,212,213,214,215,216,217,219,220,225,226,231,232,233,234,235,236,239,243,244,245,246,],[-30,-32,-38,-43,142,-31,-39,-42,-45,142,-48,-49,-99,-100,-101,-33,-44,-98,-107,-106,142,142,142,-97,-108,-109,-48,-102,-104,-103,-105,142,142,-113,-111,-115,-112,-110,-114,142,142,142,142,-48,]),'OP_NOT':([29,30,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,114,116,120,122,131,132,133,134,137,138,139,142,149,184,186,187,188,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,219,220,222,224,225,226,227,231,232,233,234,235,236,238,239,243,244,245,246,],[-30,54,54,-32,-38,-43,54,54,-31,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-39,-42,-45,54,-48,-49,-99,-100,-101,54,-33,-44,54,-98,54,-107,54,54,-106,54,54,54,54,54,-97,-108,-109,-48,-102,-104,-103,-105,54,54,54,54,54,-113,-111,-115,-112,-110,-114,54,54,54,54,54,-48,]),'NOT':([29,30,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,114,116,120,122,131,132,133,134,137,138,139,142,149,184,186,187,188,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,219,220,222,224,225,226,227,231,232,233,234,235,236,238,239,243,244,245,246,],[-30,56,56,-32,-38,-43,56,56,-31,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-39,-42,-45,56,-48,-49,-99,-100,-101,56,-33,-44,56,-98,56,-107,56,56,-106,56,56,56,56,56,-97,-108,-109,-48,-102,-104,-103,-105,56,56,56,56,56,-113,-111,-115,-112,-110,-114,56,56,56,56,56,-48,]),'SIZEOF':([29,30,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,114,116,120,122,131,132,133,134,137,138,139,142,149,184,186,187,188,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,219,220,222,224,225,226,227,231,232,233,234,235,236,238,239,243,244,245,246,],[-30,57,57,-32,-38,-43,57,57,-31,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-39,-42,-45,57,-48,-49,-99,-100,-101,57,-33,-44,57,-98,57,-107,57,57,-106,57,57,57,57,57,-97,-108,-109,-48,-102,-104,-103,-105,57,57,57,57,57,-113,-111,-115,-112,-110,-114,57,57,57,57,57,-48,]),'NEW':([29,30,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,114,116,120,122,131,132,133,134,137,138,139,142,149,184,186,187,188,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,219,220,222,224,225,226,227,231,232,233,234,235,236,238,239,243,244,245,246,],[-30,59,59,-32,-38,-43,59,59,-31,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-39,-42,-45,59,-48,-49,-99,-100,-101,59,-33,-44,59,-98,59,-107,59,59,-106,59,59,59,59,59,-97,-108,-109,-48,-102,-104,-103,-105,59,59,59,59,59,-113,-111,-115,-112,-110,-114,59,59,59,59,59,-48,]),'INT_V':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,142,149,184,186,187,188,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,219,220,222,224,225,226,227,231,232,233,234,235,236,238,239,243,244,245,246,],[-30,61,61,61,61,-32,-38,-43,61,61,-31,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-39,-42,-45,61,-48,-49,-99,-100,-101,61,-33,-44,61,-98,61,-107,61,61,-106,61,61,61,61,61,-97,-108,-109,-48,-102,-104,-103,-105,61,61,61,61,61,-113,-111,-115,-112,-110,-114,61,61,61,61,61,-48,]),'TRUE':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,142,149,184,186,187,188,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,219,220,222,224,225,226,227,231,232,233,234,235,236,238,239,243,244,245,246,],[-30,62,62,62,62,-32,-38,-43,62,62,-31,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-39,-42,-45,62,-48,-49,-99,-100,-101,62,-33,-44,62,-98,62,-107,62,62,-106,62,62,62,62,62,-97,-108,-109,-48,-102,-104,-103,-105,62,62,62,62,62,-113,-111,-115,-112,-110,-114,62,62,62,62,62,-48,]),'FALSE':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,142,149,184,186,187,188,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,219,220,222,224,225,226,227,231,232,233,234,235,236,238,239,243,244,245,246,],[-30,63,63,63,63,-32,-38,-43,63,63,-31,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-39,-42,-45,63,-48,-49,-99,-100,-101,63,-33,-44,63,-98,63,-107,63,63,-106,63,63,63,63,63,-97,-108,-109,-48,-102,-104,-103,-105,63,63,63,63,63,-113,-111,-115,-112,-110,-114,63,63,63,63,63,-48,]),'STRING_V':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,142,149,184,186,187,188,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,219,220,222,224,225,226,227,231,232,233,234,235,236,238,239,243,244,245,246,],[-30,65,65,65,65,-32,-38,-43,65,65,-31,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-39,-42,-45,65,-48,-49,-99,-100,-101,65,-33,-44,65,-98,65,-107,65,65,-106,65,65,65,65,65,-97,-108,-109,-48,-102,-104,-103,-105,65,65,65,65,65,-113,-111,-115,-112,-110,-114,65,65,65,65,65,-48,]),'THIS':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,142,149,184,186,187,188,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,219,220,222,224,225,226,227,231,232,233,234,235,236,238,239,243,244,245,246,],[-30,66,66,66,66,-32,-38,-43,66,66,-31,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-39,-42,-45,66,-48,-49,-99,-100,-101,66,-33,-44,66,-98,66,-107,66,66,-106,66,66,66,66,66,-97,-108,-109,-48,-102,-104,-103,-105,66,66,66,66,66,-113,-111,-115,-112,-110,-114,66,66,66,66,66,-48,]),'TYPEID':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,142,149,184,186,187,188,191,202,203,204,205,206,207,208,210,212,213,214,215,216,217,219,220,222,224,225,226,227,231,232,233,234,235,236,238,239,243,244,245,246,],[-30,67,67,67,67,-32,-38,-43,67,67,-31,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-39,-42,-45,67,-48,-49,-99,-100,-101,67,-33,-44,67,-98,67,-107,67,67,-106,67,67,67,67,67,-97,-108,-109,-48,-102,-104,-103,-105,67,67,67,67,67,-113,-111,-115,-112,-110,-114,67,67,67,67,67,-48,]),'ELSE':([29,68,73,76,86,120,122,131,137,138,139,149,184,187,191,204,212,213,215,216,217,219,220,231,233,234,236,241,242,246,],[-30,-32,-38,-43,-31,-39,-42,-45,-99,-100,-101,-33,-44,-98,-107,-106,-97,225,226,-102,-104,-103,-105,-113,-115,-112,-114,244,245,226,]),'DOIS_PONTOS':([38,],[78,]),'MAIS_MAIS':([44,55,60,61,62,63,64,65,66,144,147,167,168,170,193,195,],[-86,106,-85,-87,-88,-89,-90,-91,-92,-86,-95,-83,-84,-93,-94,-96,]),'MENOS_MENOS':([44,55,60,61,62,63,64,65,66,144,147,167,168,170,193,195,],[-86,107,-85,-87,-88,-89,-90,-91,-92,-86,-95,-83,-84,-93,-94,-96,]),'PONTO':([44,55,60,61,62,63,64,65,66,105,110,144,147,167,168,169,170,193,195,],[-86,108,-85,-87,-88,-89,-90,-91,-92,108,108,-86,-95,-83,-84,108,-93,-94,-96,]),'SETA':([44,55,60,61,62,63,64,65,66,105,110,144,147,167,168,169,170,193,195,],[-86,109,-85,-87,-88,-89,-90,-91,-92,109,109,-86,-95,-83,-84,109,-93,-94,-96,]),'MULT':([44,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,102,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,102,102,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'DIV':([44,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,103,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,103,103,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'MODULO':([44,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,104,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,104,104,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'SOMA':([44,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,100,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,100,100,100,100,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'SUB':([44,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,101,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,101,101,101,101,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'MENOR_Q':([44,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,96,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,96,96,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'MAIOR_Q':([44,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,97,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,97,97,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'MAIOR_IGUAL':([44,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,98,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,98,98,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'MENOR_IGUAL':([44,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,99,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,99,99,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'IGUAL':([44,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,94,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,94,94,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'DIFERENTE':([44,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,95,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,95,95,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'OP_OU_EX':([44,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,92,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,92,92,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'XOR':([44,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,93,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,93,93,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'OP_E':([44,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,90,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,90,90,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'AND':([44,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,91,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,91,91,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'OP_OU':([44,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,88,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,88,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),'OR':([44,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,144,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,193,194,195,],[-86,89,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-86,-95,89,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-81,-94,-80,-96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cpp':([0,2,3,4,5,6,],[1,16,17,18,19,20,]),'decl_classe':([0,2,3,4,5,6,],[2,2,2,2,2,2,]),'decl_funcao':([0,2,3,4,5,6,78,124,125,126,180,181,],[3,3,3,3,3,3,125,125,125,181,125,125,]),'decl_variavel':([0,2,3,4,5,6,78,82,124,125,126,132,180,181,189,205,206,207,225,226,239,243,244,245,],[4,4,4,4,4,4,124,137,124,124,180,137,124,124,202,137,137,137,137,137,137,137,137,137,]),'typedef':([0,2,3,4,5,6,82,132,205,206,207,225,226,239,243,244,245,],[5,5,5,5,5,5,138,138,138,138,138,138,138,138,138,138,138,]),'using':([0,2,3,4,5,6,82,132,205,206,207,225,226,239,243,244,245,],[6,6,6,6,6,6,139,139,139,139,139,139,139,139,139,139,139,]),'tipo':([0,2,3,4,5,6,11,28,33,59,78,82,84,124,125,126,128,132,180,181,189,205,206,207,225,226,239,243,244,245,],[9,9,9,9,9,9,24,40,40,113,127,143,40,127,127,127,40,143,127,127,143,143,143,143,143,143,143,143,143,143,]),'body_class':([21,],[26,]),'decl_variavel_n':([22,45,69,173,182,192,],[31,87,115,196,31,31,]),'parametros':([28,33,84,128,],[41,71,146,183,]),'exp':([30,58,82,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[45,112,136,172,173,136,190,199,200,209,211,136,136,136,221,223,228,229,136,136,237,240,136,136,136,136,]),'exp_1':([30,58,82,85,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[46,46,46,148,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'exp_2':([30,58,82,85,88,89,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[47,47,47,47,150,151,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'exp_3':([30,58,82,85,88,89,90,91,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[48,48,48,48,48,48,152,153,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'exp_4':([30,58,82,85,88,89,90,91,92,93,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[49,49,49,49,49,49,49,49,154,155,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'exp_5':([30,58,82,85,88,89,90,91,92,93,94,95,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[50,50,50,50,50,50,50,50,50,50,156,157,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'exp_6':([30,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[51,51,51,51,51,51,51,51,51,51,51,51,158,159,160,161,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'exp_7':([30,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,162,163,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'exp_8':([30,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,164,165,166,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'exp_9':([30,54,56,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[55,105,110,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,169,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'exp_10':([30,54,56,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,167,168,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'chamada_funcao':([30,54,56,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,132,142,186,188,202,203,205,206,207,208,210,222,224,225,226,227,238,239,243,244,245,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'decl_typedef_n':([34,121,],[74,176,]),'body':([42,72,80,83,117,118,205,206,207,225,226,239,243,244,245,],[81,119,129,145,174,175,213,216,219,231,236,242,213,236,231,]),'content_class':([78,124,125,180,181,],[123,178,179,197,198,]),'comandos':([82,132,],[130,185,]),'comando':([82,132,205,243,],[132,132,214,214,]),'condicional_1':([82,132,205,206,207,225,226,239,243,244,245,],[133,133,215,217,220,233,234,241,246,234,233,]),'condicional_2':([82,132,205,225,226,243,],[134,134,134,232,235,134,]),'for_log':([189,],[201,]),'rest_if':([205,239,243,],[212,212,212,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cpp","S'",1,None,None,None),
  ('cpp -> decl_classe','cpp',1,'p_cpp','sintatico.py',8),
  ('cpp -> decl_funcao','cpp',1,'p_cpp','sintatico.py',9),
  ('cpp -> decl_variavel','cpp',1,'p_cpp','sintatico.py',10),
  ('cpp -> typedef','cpp',1,'p_cpp','sintatico.py',11),
  ('cpp -> using','cpp',1,'p_cpp','sintatico.py',12),
  ('cpp -> decl_classe cpp','cpp',2,'p_cpp','sintatico.py',13),
  ('cpp -> decl_funcao cpp','cpp',2,'p_cpp','sintatico.py',14),
  ('cpp -> decl_variavel cpp','cpp',2,'p_cpp','sintatico.py',15),
  ('cpp -> typedef cpp','cpp',2,'p_cpp','sintatico.py',16),
  ('cpp -> using cpp','cpp',2,'p_cpp','sintatico.py',17),
  ('decl_classe -> CLASS ID body_class PONTO_VIRG','decl_classe',4,'p_decl_classe','sintatico.py',25),
  ('body_class -> CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHA','body_class',5,'p_body_class','sintatico.py',30),
  ('body_class -> CHAVE_ABRE CHAVE_FECHA','body_class',2,'p_body_class','sintatico.py',31),
  ('content_class -> decl_variavel','content_class',1,'p_content_class','sintatico.py',39),
  ('content_class -> decl_funcao','content_class',1,'p_content_class','sintatico.py',40),
  ('content_class -> STATIC decl_variavel','content_class',2,'p_content_class','sintatico.py',41),
  ('content_class -> STATIC decl_funcao','content_class',2,'p_content_class','sintatico.py',42),
  ('content_class -> decl_variavel content_class','content_class',2,'p_content_class','sintatico.py',43),
  ('content_class -> decl_funcao content_class','content_class',2,'p_content_class','sintatico.py',44),
  ('content_class -> STATIC decl_variavel content_class','content_class',3,'p_content_class','sintatico.py',45),
  ('content_class -> STATIC decl_funcao content_class','content_class',3,'p_content_class','sintatico.py',46),
  ('decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',58),
  ('decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body','decl_funcao',5,'p_decl_funcao','sintatico.py',59),
  ('decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',60),
  ('decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',61),
  ('decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body','decl_funcao',5,'p_decl_funcao','sintatico.py',62),
  ('decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',63),
  ('parametros -> tipo ID','parametros',2,'p_parametros','sintatico.py',71),
  ('parametros -> tipo ID VIRGULA parametros','parametros',4,'p_parametros','sintatico.py',72),
  ('decl_variavel -> tipo ID PONTO_VIRG','decl_variavel',3,'p_decl_variavel','sintatico.py',80),
  ('decl_variavel -> tipo ID RECEBER exp PONTO_VIRG','decl_variavel',5,'p_decl_variavel','sintatico.py',81),
  ('decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG','decl_variavel',4,'p_decl_variavel','sintatico.py',82),
  ('decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG','decl_variavel',6,'p_decl_variavel','sintatico.py',83),
  ('decl_variavel_n -> VIRGULA ID decl_variavel_n','decl_variavel_n',3,'p_decl_variavel_n','sintatico.py',95),
  ('decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n','decl_variavel_n',5,'p_decl_variavel_n','sintatico.py',96),
  ('decl_variavel_n -> VIRGULA ID RECEBER exp','decl_variavel_n',4,'p_decl_variavel_n','sintatico.py',97),
  ('decl_variavel_n -> VIRGULA ID','decl_variavel_n',2,'p_decl_variavel_n','sintatico.py',98),
  ('typedef -> TYPEDEF tipo ID PONTO_VIRG','typedef',4,'p_typedef','sintatico.py',110),
  ('typedef -> TYPEDEF tipo ID decl_typedef_n PONTO_VIRG','typedef',5,'p_typedef','sintatico.py',111),
  ('decl_typedef_n -> VIRGULA ID decl_typedef_n','decl_typedef_n',3,'p_decl_typedef_n','sintatico.py',114),
  ('decl_typedef_n -> VIRGULA ID','decl_typedef_n',2,'p_decl_typedef_n','sintatico.py',115),
  ('using -> USING ID 2X_DOIS_PONTOS ID PONTO_VIRG','using',5,'p_using','sintatico.py',118),
  ('using -> USING ID ID PONTO_VIRG','using',4,'p_using','sintatico.py',119),
  ('body -> CHAVE_ABRE comandos CHAVE_FECHA','body',3,'p_body','sintatico.py',122),
  ('body -> CHAVE_ABRE CHAVE_FECHA','body',2,'p_body','sintatico.py',123),
  ('comandos -> comando','comandos',1,'p_comandos','sintatico.py',129),
  ('comandos -> comando comandos','comandos',2,'p_comandos','sintatico.py',130),
  ('comando -> condicional_1','comando',1,'p_comando','sintatico.py',134),
  ('comando -> condicional_2','comando',1,'p_comando','sintatico.py',135),
  ('exp -> exp RECEBER exp_1','exp',3,'p_exp','sintatico.py',139),
  ('exp -> exp_1','exp',1,'p_exp','sintatico.py',140),
  ('exp_1 -> exp_1 OP_OU exp_2','exp_1',3,'p_exp_1','sintatico.py',148),
  ('exp_1 -> exp_1 OR exp_2','exp_1',3,'p_exp_1','sintatico.py',149),
  ('exp_1 -> exp_2','exp_1',1,'p_exp_1','sintatico.py',150),
  ('exp_2 -> exp_2 OP_E exp_3','exp_2',3,'p_exp_2','sintatico.py',158),
  ('exp_2 -> exp_2 AND exp_3','exp_2',3,'p_exp_2','sintatico.py',159),
  ('exp_2 -> exp_3','exp_2',1,'p_exp_2','sintatico.py',160),
  ('exp_3 -> exp_3 OP_OU_EX exp_4','exp_3',3,'p_exp_3','sintatico.py',168),
  ('exp_3 -> exp_3 XOR exp_4','exp_3',3,'p_exp_3','sintatico.py',169),
  ('exp_3 -> exp_4','exp_3',1,'p_exp_3','sintatico.py',170),
  ('exp_4 -> exp_4 IGUAL exp_5','exp_4',3,'p_exp_4','sintatico.py',178),
  ('exp_4 -> exp_4 DIFERENTE exp_5','exp_4',3,'p_exp_4','sintatico.py',179),
  ('exp_4 -> exp_5','exp_4',1,'p_exp_4','sintatico.py',180),
  ('exp_5 -> exp_5 MENOR_Q exp_6','exp_5',3,'p_exp_5','sintatico.py',188),
  ('exp_5 -> exp_5 MAIOR_Q exp_6','exp_5',3,'p_exp_5','sintatico.py',189),
  ('exp_5 -> exp_5 MAIOR_IGUAL exp_6','exp_5',3,'p_exp_5','sintatico.py',190),
  ('exp_5 -> exp_5 MENOR_IGUAL exp_6','exp_5',3,'p_exp_5','sintatico.py',191),
  ('exp_5 -> exp_6','exp_5',1,'p_exp_5','sintatico.py',192),
  ('exp_6 -> exp_6 SOMA exp_7','exp_6',3,'p_exp_6','sintatico.py',200),
  ('exp_6 -> exp_6 SUB exp_7','exp_6',3,'p_exp_6','sintatico.py',201),
  ('exp_6 -> exp_7','exp_6',1,'p_exp_6','sintatico.py',202),
  ('exp_7 -> exp_7 MULT exp_8','exp_7',3,'p_exp_7','sintatico.py',210),
  ('exp_7 -> exp_7 DIV exp_8','exp_7',3,'p_exp_7','sintatico.py',211),
  ('exp_7 -> exp_7 MODULO exp_8','exp_7',3,'p_exp_7','sintatico.py',212),
  ('exp_7 -> exp_8','exp_7',1,'p_exp_7','sintatico.py',213),
  ('exp_8 -> OP_NOT exp_9','exp_8',2,'p_exp_8','sintatico.py',221),
  ('exp_8 -> NOT exp_9','exp_8',2,'p_exp_8','sintatico.py',222),
  ('exp_8 -> exp_9 MAIS_MAIS','exp_8',2,'p_exp_8','sintatico.py',223),
  ('exp_8 -> exp_9 MENOS_MENOS','exp_8',2,'p_exp_8','sintatico.py',224),
  ('exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA','exp_8',4,'p_exp_8','sintatico.py',225),
  ('exp_8 -> NEW tipo PONTO_VIRG','exp_8',3,'p_exp_8','sintatico.py',226),
  ('exp_8 -> exp_9','exp_8',1,'p_exp_8','sintatico.py',227),
  ('exp_9 -> exp_9 PONTO exp_10','exp_9',3,'p_exp_9','sintatico.py',232),
  ('exp_9 -> exp_9 SETA exp_10','exp_9',3,'p_exp_9','sintatico.py',233),
  ('exp_9 -> exp_10','exp_9',1,'p_exp_9','sintatico.py',234),
  ('exp_10 -> ID','exp_10',1,'p_exp_10','sintatico.py',242),
  ('exp_10 -> INT_V','exp_10',1,'p_exp_10','sintatico.py',243),
  ('exp_10 -> TRUE','exp_10',1,'p_exp_10','sintatico.py',244),
  ('exp_10 -> FALSE','exp_10',1,'p_exp_10','sintatico.py',245),
  ('exp_10 -> chamada_funcao','exp_10',1,'p_exp_10','sintatico.py',246),
  ('exp_10 -> STRING_V','exp_10',1,'p_exp_10','sintatico.py',247),
  ('exp_10 -> THIS','exp_10',1,'p_exp_10','sintatico.py',248),
  ('exp_10 -> PARENT_ABRE exp PARENT_FECHA','exp_10',3,'p_exp_10','sintatico.py',249),
  ('chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA','chamada_funcao',4,'p_chamada_funcao','sintatico.py',254),
  ('chamada_funcao -> ID PARENT_ABRE PARENT_FECHA','chamada_funcao',3,'p_chamada_funcao','sintatico.py',255),
  ('chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA','chamada_funcao',4,'p_chamada_funcao','sintatico.py',256),
  ('condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if','condicional_1',5,'p_condicional_1','sintatico.py',259),
  ('condicional_1 -> exp PONTO_VIRG','condicional_1',2,'p_condicional_1','sintatico.py',260),
  ('condicional_1 -> decl_variavel','condicional_1',1,'p_condicional_1','sintatico.py',261),
  ('condicional_1 -> typedef','condicional_1',1,'p_condicional_1','sintatico.py',262),
  ('condicional_1 -> using','condicional_1',1,'p_condicional_1','sintatico.py',263),
  ('condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body','condicional_1',5,'p_condicional_1','sintatico.py',264),
  ('condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body','condicional_1',5,'p_condicional_1','sintatico.py',265),
  ('condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA condicional_1','condicional_1',5,'p_condicional_1','sintatico.py',266),
  ('condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA condicional_1','condicional_1',5,'p_condicional_1','sintatico.py',267),
  ('condicional_1 -> RETURN exp PONTO_VIRG','condicional_1',3,'p_condicional_1','sintatico.py',268),
  ('condicional_1 -> RETURN PONTO_VIRG','condicional_1',2,'p_condicional_1','sintatico.py',269),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body','condicional_2',5,'p_condicional_2','sintatico.py',272),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando','condicional_2',5,'p_condicional_2','sintatico.py',273),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2','condicional_2',7,'p_condicional_2','sintatico.py',274),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body ELSE condicional_2','condicional_2',7,'p_condicional_2','sintatico.py',275),
  ('rest_if -> condicional_1 ELSE condicional_1','rest_if',3,'p_rest_if','sintatico.py',278),
  ('rest_if -> body ELSE body','rest_if',3,'p_rest_if','sintatico.py',279),
  ('rest_if -> condicional_1 ELSE body','rest_if',3,'p_rest_if','sintatico.py',280),
  ('rest_if -> body ELSE condicional_1','rest_if',3,'p_rest_if','sintatico.py',281),
  ('for_log -> decl_variavel PONTO_VIRG','for_log',2,'p_for_log','sintatico.py',285),
  ('for_log -> decl_variavel exp PONTO_VIRG','for_log',3,'p_for_log','sintatico.py',286),
  ('for_log -> decl_variavel exp PONTO_VIRG exp','for_log',4,'p_for_log','sintatico.py',287),
  ('for_log -> decl_variavel PONTO_VIRG exp','for_log',3,'p_for_log','sintatico.py',288),
  ('for_log -> PONTO_VIRG exp PONTO_VIRG exp','for_log',4,'p_for_log','sintatico.py',289),
  ('for_log -> PONTO_VIRG exp PONTO_VIRG','for_log',3,'p_for_log','sintatico.py',290),
  ('for_log -> PONTO_VIRG PONTO_VIRG exp','for_log',3,'p_for_log','sintatico.py',291),
  ('for_log -> PONTO_VIRG PONTO_VIRG','for_log',2,'p_for_log','sintatico.py',292),
  ('tipo -> INT','tipo',1,'p_tipo','sintatico.py',296),
  ('tipo -> BOOL','tipo',1,'p_tipo','sintatico.py',297),
  ('tipo -> ID','tipo',1,'p_tipo','sintatico.py',298),
  ('tipo -> STRING','tipo',1,'p_tipo','sintatico.py',299),
]
