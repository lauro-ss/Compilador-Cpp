
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = '2X_DOIS_PONTOS AND BOOL CHAVE_ABRE CHAVE_FECHA CLASS DIFERENTE DIV DOIS_PONTOS ELSE FALSE FOR ID IF IGUAL INT INT_V MAIOR_IGUAL MAIOR_Q MAIS_MAIS MENOR_IGUAL MENOR_Q MENOS_MENOS MODULO MULT NEW NOT OP_E OP_NOT OP_OU OP_OU_EX OR PARENT_ABRE PARENT_FECHA PONTO PONTO_VIRG PUBLIC RECEBER RETURN SETA SIZEOF SOMA STATIC STRING STRING_V SUB THIS TRUE TYPEDEF TYPEID USING VIRGULA VOID WHILE XORcpp : decl_classe\n         | decl_funcao\n         | decl_variavel\n         | typedef\n         | using\n         | decl_classe  cpp\n         | decl_funcao  cpp\n         | decl_variavel cpp\n         | typedef cpp\n         | using cppdecl_classe : CLASS ID body_class PONTO_VIRGbody_class : CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHA\n                  | CHAVE_ABRE CHAVE_FECHAcontent_class : decl_variavel\n                     | decl_funcao\n                     | STATIC decl_variavel\n                     | STATIC decl_funcao\n                     | decl_variavel content_class\n                     | decl_funcao content_class\n                     | STATIC decl_variavel content_class\n                     | STATIC decl_funcao content_classdecl_funcao : tipo ID PARENT_ABRE parametros PARENT_FECHA body\n                 | tipo ID PARENT_ABRE PARENT_FECHA body\n                 | tipo ID PARENT_ABRE VOID PARENT_FECHA body\n                 | VOID ID PARENT_ABRE parametros PARENT_FECHA body\n                 | VOID ID PARENT_ABRE PARENT_FECHA body\n                 | VOID ID PARENT_ABRE VOID PARENT_FECHA bodyparametros : tipo ID\n                | tipo ID VIRGULA parametrosdecl_variavel : tipo ID PONTO_VIRG \n                   | tipo ID RECEBER exp PONTO_VIRG\n                   | tipo ID decl_variavel_n PONTO_VIRG \n                   | tipo ID RECEBER exp decl_variavel_n PONTO_VIRGdecl_variavel_n : VIRGULA ID decl_variavel_n\n                     | VIRGULA ID RECEBER exp decl_variavel_n\n                     | VIRGULA ID RECEBER exp\n                     | VIRGULA ID \n                     typedef : TYPEDEF tipo ID PONTO_VIRG\n               | TYPEDEF tipo ID decl_typedef_n PONTO_VIRGdecl_typedef_n : VIRGULA ID decl_typedef_n\n                      | VIRGULA IDusing : USING ID 2X_DOIS_PONTOS ID PONTO_VIRG\n             | USING ID ID PONTO_VIRGbody : CHAVE_ABRE comandos CHAVE_FECHA\n            | CHAVE_ABRE CHAVE_FECHA comandos : comando \n               | comando comandoscomando : condicional_1\n               | condicional_2exp : exp RECEBER exp_1\n           | exp_1exp_1 : exp_1 OP_OU exp_2 \n           | exp_1 OR exp_2\n           | exp_2exp_2 : exp_2 OP_E exp_3\n           | exp_2 AND exp_3\n           | exp_3exp_3 : exp_3 OP_OU_EX exp_4\n           | exp_3 XOR exp_4\n           | exp_4exp_4 : exp_4 IGUAL exp_5\n           | exp_4 DIFERENTE exp_5\n           | exp_5exp_5 : exp_5 MENOR_Q exp_6\n           | exp_5 MAIOR_Q exp_6\n           | exp_5 MAIOR_IGUAL exp_6\n           | exp_5 MENOR_IGUAL exp_6\n           | exp_6exp_6 : exp_6 SOMA exp_7\n           | exp_6 SUB exp_7\n           | exp_7exp_7 : exp_7 MULT exp_8\n           | exp_7 DIV exp_8\n           | exp_7 MODULO exp_8\n           | exp_8exp_8 : OP_NOT exp_9\n           | NOT exp_9\n           | exp_9 MAIS_MAIS\n           | exp_9 MENOS_MENOS\n           | SIZEOF PARENT_ABRE exp_9 PARENT_FECHA\n           | NEW tipo\n           | exp_9exp_9 : exp_9 PONTO exp_10\n             | exp_9 SETA exp_10\n             | exp_10exp_10 : ID\n           | INT_V\n           | TRUE\n           | FALSE\n           | chamada_funcao\n           | STRING_V\n           | THIS\n           | PARENT_ABRE exp PARENT_FECHAchamada_funcao : ID PARENT_ABRE parametros_chamada PARENT_FECHA\n                      | ID PARENT_ABRE PARENT_FECHA\n                      | TYPEID PARENT_ABRE exp PARENT_FECHAparametros_chamada : ID VIRGULA parametros_chamada\n                          | IDcondicional_1 : IF PARENT_ABRE exp PARENT_FECHA rest_if\n                     | exp PONTO_VIRG \n                     | decl_variavel\n                     | typedef\n                     | using\n                     | chamada_funcao\n                     | WHILE PARENT_ABRE exp PARENT_FECHA body\n                     | FOR PARENT_ABRE for_log PARENT_FECHA body\n                     | WHILE PARENT_ABRE exp PARENT_FECHA condicional_1\n                     | FOR PARENT_ABRE for_log PARENT_FECHA condicional_1\n                     | RETURN exp PONTO_VIRG\n                     | RETURN PONTO_VIRGcondicional_2 : IF PARENT_ABRE exp PARENT_FECHA body\n                     | IF PARENT_ABRE exp PARENT_FECHA comando\n                     | IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2\n                     | IF PARENT_ABRE exp PARENT_FECHA body ELSE condicional_2rest_if : condicional_1 ELSE condicional_1\n               | body ELSE body\n               | condicional_1 ELSE body\n               | body ELSE condicional_1for_log : decl_variavel PONTO_VIRG\n             | decl_variavel exp PONTO_VIRG\n             | decl_variavel exp PONTO_VIRG exp\n             | decl_variavel PONTO_VIRG exp\n             | PONTO_VIRG exp PONTO_VIRG exp\n             | PONTO_VIRG exp PONTO_VIRG\n             | PONTO_VIRG PONTO_VIRG exp\n             | PONTO_VIRG PONTO_VIRGtipo : INT \n          | BOOL \n          | ID\n          | STRING'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,6,29,37,68,73,76,81,86,119,120,122,129,131,146,151,175,176,185,],[7,7,7,7,7,7,-30,-11,-32,-38,-43,-23,-31,-26,-39,-42,-22,-45,-24,-33,-27,-25,-44,]),'VOID':([0,2,3,4,5,6,28,29,33,37,68,73,76,78,81,86,119,120,122,124,125,126,129,131,146,151,175,176,181,182,185,],[10,10,10,10,10,10,43,-30,70,-11,-32,-38,-43,10,-23,-31,-26,-39,-42,10,10,10,-22,-45,-24,-33,-27,-25,10,10,-44,]),'TYPEDEF':([0,2,3,4,5,6,29,37,68,73,76,81,82,86,119,120,122,129,131,132,133,134,137,138,139,140,146,149,151,175,176,185,188,192,195,197,206,208,209,210,215,216,217,218,219,220,222,223,228,229,234,235,236,237,238,239,242,246,247,248,249,],[11,11,11,11,11,11,-30,-11,-32,-38,-43,-23,11,-31,-26,-39,-42,-22,-45,11,-48,-49,-101,-102,-103,-104,-24,-95,-33,-27,-25,-44,-100,-110,-94,-96,-109,11,11,11,-99,-111,-112,-48,-105,-107,-106,-108,11,11,-116,-114,-118,-115,-113,-117,11,11,11,11,-48,]),'USING':([0,2,3,4,5,6,29,37,68,73,76,81,82,86,119,120,122,129,131,132,133,134,137,138,139,140,146,149,151,175,176,185,188,192,195,197,206,208,209,210,215,216,217,218,219,220,222,223,228,229,234,235,236,237,238,239,242,246,247,248,249,],[12,12,12,12,12,12,-30,-11,-32,-38,-43,-23,12,-31,-26,-39,-42,-22,-45,12,-48,-49,-101,-102,-103,-104,-24,-95,-33,-27,-25,-44,-100,-110,-94,-96,-109,12,12,12,-99,-111,-112,-48,-105,-107,-106,-108,12,12,-116,-114,-118,-115,-113,-117,12,12,12,12,-48,]),'INT':([0,2,3,4,5,6,11,28,29,33,37,59,68,73,76,78,81,82,86,119,120,122,124,125,126,128,129,131,132,133,134,137,138,139,140,146,149,151,175,176,181,182,185,188,190,192,195,197,206,208,209,210,215,216,217,218,219,220,222,223,228,229,234,235,236,237,238,239,242,246,247,248,249,],[13,13,13,13,13,13,13,13,-30,13,-11,13,-32,-38,-43,13,-23,13,-31,-26,-39,-42,13,13,13,13,-22,-45,13,-48,-49,-101,-102,-103,-104,-24,-95,-33,-27,-25,13,13,-44,-100,13,-110,-94,-96,-109,13,13,13,-99,-111,-112,-48,-105,-107,-106,-108,13,13,-116,-114,-118,-115,-113,-117,13,13,13,13,-48,]),'BOOL':([0,2,3,4,5,6,11,28,29,33,37,59,68,73,76,78,81,82,86,119,120,122,124,125,126,128,129,131,132,133,134,137,138,139,140,146,149,151,175,176,181,182,185,188,190,192,195,197,206,208,209,210,215,216,217,218,219,220,222,223,228,229,234,235,236,237,238,239,242,246,247,248,249,],[14,14,14,14,14,14,14,14,-30,14,-11,14,-32,-38,-43,14,-23,14,-31,-26,-39,-42,14,14,14,14,-22,-45,14,-48,-49,-101,-102,-103,-104,-24,-95,-33,-27,-25,14,14,-44,-100,14,-110,-94,-96,-109,14,14,14,-99,-111,-112,-48,-105,-107,-106,-108,14,14,-116,-114,-118,-115,-113,-117,14,14,14,14,-48,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,28,29,30,32,33,36,37,40,54,56,58,59,68,73,75,76,78,81,82,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,119,120,122,124,125,126,127,128,129,131,132,133,134,137,138,139,140,143,144,145,146,149,151,175,176,181,182,185,187,188,189,190,192,194,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,222,223,225,227,228,229,230,234,235,236,237,238,239,241,242,246,247,248,249,],[8,8,8,8,8,8,21,-129,22,23,8,25,-127,-128,-130,34,35,8,-30,44,69,8,77,-11,79,44,44,44,8,-32,-38,121,-43,8,-23,145,147,44,-31,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-26,-39,-42,8,8,8,183,8,-22,-45,145,-48,-49,-101,-102,-103,-104,44,193,-129,-24,-95,-33,-27,-25,8,8,-44,44,-100,44,8,-110,147,-94,-96,44,44,-109,145,145,145,44,44,-99,-111,-112,-48,-105,-107,-106,-108,44,44,145,145,44,-116,-114,-118,-115,-113,-117,44,145,145,145,145,-48,]),'STRING':([0,2,3,4,5,6,11,28,29,33,37,59,68,73,76,78,81,82,86,119,120,122,124,125,126,128,129,131,132,133,134,137,138,139,140,146,149,151,175,176,181,182,185,188,190,192,195,197,206,208,209,210,215,216,217,218,219,220,222,223,228,229,234,235,236,237,238,239,242,246,247,248,249,],[15,15,15,15,15,15,15,15,-30,15,-11,15,-32,-38,-43,15,-23,15,-31,-26,-39,-42,15,15,15,15,-22,-45,15,-48,-49,-101,-102,-103,-104,-24,-95,-33,-27,-25,15,15,-44,-100,15,-110,-94,-96,-109,15,15,15,-99,-111,-112,-48,-105,-107,-106,-108,15,15,-116,-114,-118,-115,-113,-117,15,15,15,15,-48,]),'$end':([1,2,3,4,5,6,16,17,18,19,20,29,37,68,73,76,81,86,119,120,122,129,131,146,151,175,176,185,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-30,-11,-32,-38,-43,-23,-31,-26,-39,-42,-22,-45,-24,-33,-27,-25,-44,]),'MULT':([8,13,14,15,44,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,102,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,102,102,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'DIV':([8,13,14,15,44,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,103,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,103,103,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'MODULO':([8,13,14,15,44,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,104,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,104,104,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'SOMA':([8,13,14,15,44,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,100,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,100,100,100,100,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'SUB':([8,13,14,15,44,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,101,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,101,101,101,101,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'MENOR_Q':([8,13,14,15,44,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,96,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,96,96,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'MAIOR_Q':([8,13,14,15,44,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,97,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,97,97,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'MAIOR_IGUAL':([8,13,14,15,44,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,98,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,98,98,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'MENOR_IGUAL':([8,13,14,15,44,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,99,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,99,99,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'IGUAL':([8,13,14,15,44,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,94,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,94,94,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'DIFERENTE':([8,13,14,15,44,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,95,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,95,95,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'OP_OU_EX':([8,13,14,15,44,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,92,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,92,92,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'XOR':([8,13,14,15,44,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,93,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,93,93,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'OP_E':([8,13,14,15,44,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,90,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,90,90,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'AND':([8,13,14,15,44,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,91,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,91,91,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'OP_OU':([8,13,14,15,44,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,88,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,88,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'OR':([8,13,14,15,44,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,105,106,107,110,113,140,145,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,195,196,197,],[-129,-127,-128,-130,-86,89,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-76,-78,-79,-77,-81,-90,-86,-95,89,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-94,-80,-96,]),'PONTO_VIRG':([8,13,14,15,22,26,29,31,34,35,39,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,68,69,74,77,86,87,105,106,107,110,113,115,121,136,140,143,145,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,174,177,178,183,190,191,193,195,196,197,198,204,205,212,214,],[-129,-127,-128,-130,29,37,-30,68,73,76,-13,-86,86,-51,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,-32,-37,120,122,-31,151,-76,-78,-79,-77,-81,-34,-41,188,-90,192,-86,-95,-50,-33,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,-36,-40,-12,29,205,206,29,-94,-80,-96,-35,211,213,225,227,]),'RECEBER':([8,13,14,15,22,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,69,105,106,107,110,112,113,136,140,145,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,183,191,193,195,196,197,201,202,212,214,224,226,231,232,240,243,],[-129,-127,-128,-130,30,-86,85,-51,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,116,-76,-78,-79,-77,85,-81,85,-90,-86,-95,-50,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,85,85,30,85,30,-94,-80,-96,85,85,85,85,85,85,85,85,85,85,]),'VIRGULA':([8,13,14,15,22,34,44,45,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,69,79,105,106,107,110,113,121,147,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,174,183,193,195,196,197,],[-129,-127,-128,-130,32,75,-86,32,-51,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,32,128,-76,-78,-79,-77,-81,75,194,-95,-50,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,-93,32,32,32,-94,-80,-96,]),'PARENT_FECHA':([8,13,14,15,28,33,41,43,44,46,47,48,49,50,51,52,53,55,60,61,62,63,64,65,66,70,71,79,84,105,106,107,110,112,113,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,184,195,196,197,201,202,203,207,211,213,224,225,226,227,231,232,240,243,],[-129,-127,-128,-130,42,72,80,83,-86,-51,-54,-57,-60,-63,-68,-71,-75,-82,-85,-87,-88,-89,-90,-91,-92,117,118,-28,149,-76,-78,-79,-77,172,-81,-98,195,-95,-50,-52,-53,-55,-56,-58,-59,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-83,-84,196,-93,197,-29,-94,-80,-96,208,209,210,-97,-119,-126,-122,-120,-125,-124,-121,-123,242,246,]),'CHAVE_ABRE':([21,42,72,80,83,117,118,208,209,210,228,229,242,246,247,248,],[27,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'PARENT_ABRE':([22,23,29,30,44,54,56,57,58,67,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,135,137,138,139,140,141,142,143,145,149,151,183,185,187,188,189,192,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,221,222,223,225,227,228,229,230,233,234,235,236,237,238,239,241,242,246,247,248,249,],[28,33,-30,58,84,58,58,111,58,114,-32,-38,-43,58,58,-31,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-39,-42,-45,58,-48,-49,187,-101,-102,-103,-104,189,190,58,84,-95,-33,28,-44,58,-100,58,-110,-94,-96,58,58,-109,58,58,58,58,58,-99,-111,-112,-48,-105,-107,230,-106,-108,58,58,58,58,58,241,-116,-114,-118,-115,-113,-117,58,58,58,58,58,-48,]),'2X_DOIS_PONTOS':([25,],[36,]),'PUBLIC':([27,],[38,]),'CHAVE_FECHA':([27,29,68,73,76,81,82,86,119,120,122,123,124,125,129,130,131,132,133,134,137,138,139,140,146,149,151,175,176,179,180,181,182,185,186,188,192,195,197,199,200,206,215,216,217,218,219,220,222,223,234,235,236,237,238,239,249,],[39,-30,-32,-38,-43,-23,131,-31,-26,-39,-42,178,-14,-15,-22,185,-45,-46,-48,-49,-101,-102,-103,-104,-24,-95,-33,-27,-25,-18,-19,-16,-17,-44,-47,-100,-110,-94,-96,-20,-21,-109,-99,-111,-112,-48,-105,-107,-106,-108,-116,-114,-118,-115,-113,-117,-48,]),'STATIC':([29,68,78,81,86,119,124,125,129,131,146,151,175,176,181,182,185,],[-30,-32,126,-23,-31,-26,126,126,-22,-45,-24,-33,-27,-25,126,126,-44,]),'IF':([29,68,73,76,82,86,120,122,131,132,133,134,137,138,139,140,149,151,185,188,192,195,197,206,208,209,210,215,216,217,218,219,220,222,223,228,229,234,235,236,237,238,239,242,246,247,248,249,],[-30,-32,-38,-43,135,-31,-39,-42,-45,135,-48,-49,-101,-102,-103,-104,-95,-33,-44,-100,-110,-94,-96,-109,135,221,221,-99,-111,-112,-48,-105,-107,-106,-108,233,233,-116,-114,-118,-115,-113,-117,221,135,221,221,-48,]),'WHILE':([29,68,73,76,82,86,120,122,131,132,133,134,137,138,139,140,149,151,185,188,192,195,197,206,208,209,210,215,216,217,218,219,220,222,223,228,229,234,235,236,237,238,239,242,246,247,248,249,],[-30,-32,-38,-43,141,-31,-39,-42,-45,141,-48,-49,-101,-102,-103,-104,-95,-33,-44,-100,-110,-94,-96,-109,141,141,141,-99,-111,-112,-48,-105,-107,-106,-108,141,141,-116,-114,-118,-115,-113,-117,141,141,141,141,-48,]),'FOR':([29,68,73,76,82,86,120,122,131,132,133,134,137,138,139,140,149,151,185,188,192,195,197,206,208,209,210,215,216,217,218,219,220,222,223,228,229,234,235,236,237,238,239,242,246,247,248,249,],[-30,-32,-38,-43,142,-31,-39,-42,-45,142,-48,-49,-101,-102,-103,-104,-95,-33,-44,-100,-110,-94,-96,-109,142,142,142,-99,-111,-112,-48,-105,-107,-106,-108,142,142,-116,-114,-118,-115,-113,-117,142,142,142,142,-48,]),'RETURN':([29,68,73,76,82,86,120,122,131,132,133,134,137,138,139,140,149,151,185,188,192,195,197,206,208,209,210,215,216,217,218,219,220,222,223,228,229,234,235,236,237,238,239,242,246,247,248,249,],[-30,-32,-38,-43,143,-31,-39,-42,-45,143,-48,-49,-101,-102,-103,-104,-95,-33,-44,-100,-110,-94,-96,-109,143,143,143,-99,-111,-112,-48,-105,-107,-106,-108,143,143,-116,-114,-118,-115,-113,-117,143,143,143,143,-48,]),'TYPEID':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,140,143,149,151,185,187,188,189,192,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,222,223,225,227,228,229,230,234,235,236,237,238,239,241,242,246,247,248,249,],[-30,67,67,67,67,-32,-38,-43,67,67,-31,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-39,-42,-45,67,-48,-49,-101,-102,-103,-104,67,-95,-33,-44,67,-100,67,-110,-94,-96,67,67,-109,67,67,67,67,67,-99,-111,-112,-48,-105,-107,-106,-108,67,67,67,67,67,-116,-114,-118,-115,-113,-117,67,67,67,67,67,-48,]),'OP_NOT':([29,30,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,114,116,120,122,131,132,133,134,137,138,139,140,143,149,151,185,187,188,189,192,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,222,223,225,227,228,229,230,234,235,236,237,238,239,241,242,246,247,248,249,],[-30,54,54,-32,-38,-43,54,54,-31,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-39,-42,-45,54,-48,-49,-101,-102,-103,-104,54,-95,-33,-44,54,-100,54,-110,-94,-96,54,54,-109,54,54,54,54,54,-99,-111,-112,-48,-105,-107,-106,-108,54,54,54,54,54,-116,-114,-118,-115,-113,-117,54,54,54,54,54,-48,]),'NOT':([29,30,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,114,116,120,122,131,132,133,134,137,138,139,140,143,149,151,185,187,188,189,192,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,222,223,225,227,228,229,230,234,235,236,237,238,239,241,242,246,247,248,249,],[-30,56,56,-32,-38,-43,56,56,-31,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-39,-42,-45,56,-48,-49,-101,-102,-103,-104,56,-95,-33,-44,56,-100,56,-110,-94,-96,56,56,-109,56,56,56,56,56,-99,-111,-112,-48,-105,-107,-106,-108,56,56,56,56,56,-116,-114,-118,-115,-113,-117,56,56,56,56,56,-48,]),'SIZEOF':([29,30,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,114,116,120,122,131,132,133,134,137,138,139,140,143,149,151,185,187,188,189,192,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,222,223,225,227,228,229,230,234,235,236,237,238,239,241,242,246,247,248,249,],[-30,57,57,-32,-38,-43,57,57,-31,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-39,-42,-45,57,-48,-49,-101,-102,-103,-104,57,-95,-33,-44,57,-100,57,-110,-94,-96,57,57,-109,57,57,57,57,57,-99,-111,-112,-48,-105,-107,-106,-108,57,57,57,57,57,-116,-114,-118,-115,-113,-117,57,57,57,57,57,-48,]),'NEW':([29,30,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,114,116,120,122,131,132,133,134,137,138,139,140,143,149,151,185,187,188,189,192,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,222,223,225,227,228,229,230,234,235,236,237,238,239,241,242,246,247,248,249,],[-30,59,59,-32,-38,-43,59,59,-31,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-39,-42,-45,59,-48,-49,-101,-102,-103,-104,59,-95,-33,-44,59,-100,59,-110,-94,-96,59,59,-109,59,59,59,59,59,-99,-111,-112,-48,-105,-107,-106,-108,59,59,59,59,59,-116,-114,-118,-115,-113,-117,59,59,59,59,59,-48,]),'INT_V':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,140,143,149,151,185,187,188,189,192,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,222,223,225,227,228,229,230,234,235,236,237,238,239,241,242,246,247,248,249,],[-30,61,61,61,61,-32,-38,-43,61,61,-31,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-39,-42,-45,61,-48,-49,-101,-102,-103,-104,61,-95,-33,-44,61,-100,61,-110,-94,-96,61,61,-109,61,61,61,61,61,-99,-111,-112,-48,-105,-107,-106,-108,61,61,61,61,61,-116,-114,-118,-115,-113,-117,61,61,61,61,61,-48,]),'TRUE':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,140,143,149,151,185,187,188,189,192,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,222,223,225,227,228,229,230,234,235,236,237,238,239,241,242,246,247,248,249,],[-30,62,62,62,62,-32,-38,-43,62,62,-31,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-39,-42,-45,62,-48,-49,-101,-102,-103,-104,62,-95,-33,-44,62,-100,62,-110,-94,-96,62,62,-109,62,62,62,62,62,-99,-111,-112,-48,-105,-107,-106,-108,62,62,62,62,62,-116,-114,-118,-115,-113,-117,62,62,62,62,62,-48,]),'FALSE':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,140,143,149,151,185,187,188,189,192,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,222,223,225,227,228,229,230,234,235,236,237,238,239,241,242,246,247,248,249,],[-30,63,63,63,63,-32,-38,-43,63,63,-31,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-39,-42,-45,63,-48,-49,-101,-102,-103,-104,63,-95,-33,-44,63,-100,63,-110,-94,-96,63,63,-109,63,63,63,63,63,-99,-111,-112,-48,-105,-107,-106,-108,63,63,63,63,63,-116,-114,-118,-115,-113,-117,63,63,63,63,63,-48,]),'STRING_V':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,140,143,149,151,185,187,188,189,192,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,222,223,225,227,228,229,230,234,235,236,237,238,239,241,242,246,247,248,249,],[-30,65,65,65,65,-32,-38,-43,65,65,-31,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-39,-42,-45,65,-48,-49,-101,-102,-103,-104,65,-95,-33,-44,65,-100,65,-110,-94,-96,65,65,-109,65,65,65,65,65,-99,-111,-112,-48,-105,-107,-106,-108,65,65,65,65,65,-116,-114,-118,-115,-113,-117,65,65,65,65,65,-48,]),'THIS':([29,30,54,56,58,68,73,76,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,120,122,131,132,133,134,137,138,139,140,143,149,151,185,187,188,189,192,195,197,204,205,206,208,209,210,211,213,215,216,217,218,219,220,222,223,225,227,228,229,230,234,235,236,237,238,239,241,242,246,247,248,249,],[-30,66,66,66,66,-32,-38,-43,66,66,-31,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-39,-42,-45,66,-48,-49,-101,-102,-103,-104,66,-95,-33,-44,66,-100,66,-110,-94,-96,66,66,-109,66,66,66,66,66,-99,-111,-112,-48,-105,-107,-106,-108,66,66,66,66,66,-116,-114,-118,-115,-113,-117,66,66,66,66,66,-48,]),'ELSE':([29,68,73,76,86,120,122,131,137,138,139,140,149,151,185,188,192,195,197,206,215,216,218,219,220,222,223,234,236,237,239,244,245,249,],[-30,-32,-38,-43,-31,-39,-42,-45,-101,-102,-103,-104,-95,-33,-44,-100,-110,-94,-96,-109,-99,228,229,-105,-107,-106,-108,-116,-118,-115,-117,247,248,229,]),'DOIS_PONTOS':([38,],[78,]),'MAIS_MAIS':([44,55,60,61,62,63,64,65,66,140,145,149,169,170,172,195,197,],[-86,106,-85,-87,-88,-89,-90,-91,-92,-90,-86,-95,-83,-84,-93,-94,-96,]),'MENOS_MENOS':([44,55,60,61,62,63,64,65,66,140,145,149,169,170,172,195,197,],[-86,107,-85,-87,-88,-89,-90,-91,-92,-90,-86,-95,-83,-84,-93,-94,-96,]),'PONTO':([44,55,60,61,62,63,64,65,66,105,110,140,145,149,169,170,171,172,195,197,],[-86,108,-85,-87,-88,-89,-90,-91,-92,108,108,-90,-86,-95,-83,-84,108,-93,-94,-96,]),'SETA':([44,55,60,61,62,63,64,65,66,105,110,140,145,149,169,170,171,172,195,197,],[-86,109,-85,-87,-88,-89,-90,-91,-92,109,109,-90,-86,-95,-83,-84,109,-93,-94,-96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cpp':([0,2,3,4,5,6,],[1,16,17,18,19,20,]),'decl_classe':([0,2,3,4,5,6,],[2,2,2,2,2,2,]),'decl_funcao':([0,2,3,4,5,6,78,124,125,126,181,182,],[3,3,3,3,3,3,125,125,125,182,125,125,]),'decl_variavel':([0,2,3,4,5,6,78,82,124,125,126,132,181,182,190,208,209,210,228,229,242,246,247,248,],[4,4,4,4,4,4,124,137,124,124,181,137,124,124,204,137,137,137,137,137,137,137,137,137,]),'typedef':([0,2,3,4,5,6,82,132,208,209,210,228,229,242,246,247,248,],[5,5,5,5,5,5,138,138,138,138,138,138,138,138,138,138,138,]),'using':([0,2,3,4,5,6,82,132,208,209,210,228,229,242,246,247,248,],[6,6,6,6,6,6,139,139,139,139,139,139,139,139,139,139,139,]),'tipo':([0,2,3,4,5,6,11,28,33,59,78,82,124,125,126,128,132,181,182,190,208,209,210,228,229,242,246,247,248,],[9,9,9,9,9,9,24,40,40,113,127,144,127,127,127,40,144,127,127,144,144,144,144,144,144,144,144,144,144,]),'body_class':([21,],[26,]),'decl_variavel_n':([22,45,69,174,183,193,],[31,87,115,198,31,31,]),'parametros':([28,33,128,],[41,71,184,]),'exp':([30,58,82,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[45,112,136,173,174,136,191,201,202,212,214,136,136,136,224,226,231,232,136,136,240,243,136,136,136,136,]),'exp_1':([30,58,82,85,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[46,46,46,150,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'exp_2':([30,58,82,85,88,89,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[47,47,47,47,152,153,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'exp_3':([30,58,82,85,88,89,90,91,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[48,48,48,48,48,48,154,155,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'exp_4':([30,58,82,85,88,89,90,91,92,93,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[49,49,49,49,49,49,49,49,156,157,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'exp_5':([30,58,82,85,88,89,90,91,92,93,94,95,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[50,50,50,50,50,50,50,50,50,50,158,159,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'exp_6':([30,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[51,51,51,51,51,51,51,51,51,51,51,51,160,161,162,163,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'exp_7':([30,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,164,165,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'exp_8':([30,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,166,167,168,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'exp_9':([30,54,56,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[55,105,110,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,171,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'exp_10':([30,54,56,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,169,170,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'chamada_funcao':([30,54,56,58,82,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,111,114,116,132,143,187,189,204,205,208,209,210,211,213,225,227,228,229,230,241,242,246,247,248,],[64,64,64,64,140,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,140,64,64,64,64,64,140,140,140,64,64,64,64,140,140,64,64,140,140,140,140,]),'decl_typedef_n':([34,121,],[74,177,]),'body':([42,72,80,83,117,118,208,209,210,228,229,242,246,247,248,],[81,119,129,146,175,176,216,219,222,234,239,245,216,239,234,]),'content_class':([78,124,125,181,182,],[123,179,180,199,200,]),'comandos':([82,132,],[130,186,]),'comando':([82,132,208,246,],[132,132,217,217,]),'condicional_1':([82,132,208,209,210,228,229,242,246,247,248,],[133,133,218,220,223,236,237,244,249,237,236,]),'condicional_2':([82,132,208,228,229,246,],[134,134,134,235,238,134,]),'parametros_chamada':([84,194,],[148,207,]),'for_log':([190,],[203,]),'rest_if':([208,242,246,],[215,215,215,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cpp","S'",1,None,None,None),
  ('cpp -> decl_classe','cpp',1,'p_cpp','sintatico.py',8),
  ('cpp -> decl_funcao','cpp',1,'p_cpp','sintatico.py',9),
  ('cpp -> decl_variavel','cpp',1,'p_cpp','sintatico.py',10),
  ('cpp -> typedef','cpp',1,'p_cpp','sintatico.py',11),
  ('cpp -> using','cpp',1,'p_cpp','sintatico.py',12),
  ('cpp -> decl_classe cpp','cpp',2,'p_cpp','sintatico.py',13),
  ('cpp -> decl_funcao cpp','cpp',2,'p_cpp','sintatico.py',14),
  ('cpp -> decl_variavel cpp','cpp',2,'p_cpp','sintatico.py',15),
  ('cpp -> typedef cpp','cpp',2,'p_cpp','sintatico.py',16),
  ('cpp -> using cpp','cpp',2,'p_cpp','sintatico.py',17),
  ('decl_classe -> CLASS ID body_class PONTO_VIRG','decl_classe',4,'p_decl_classe','sintatico.py',25),
  ('body_class -> CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHA','body_class',5,'p_body_class','sintatico.py',30),
  ('body_class -> CHAVE_ABRE CHAVE_FECHA','body_class',2,'p_body_class','sintatico.py',31),
  ('content_class -> decl_variavel','content_class',1,'p_content_class','sintatico.py',39),
  ('content_class -> decl_funcao','content_class',1,'p_content_class','sintatico.py',40),
  ('content_class -> STATIC decl_variavel','content_class',2,'p_content_class','sintatico.py',41),
  ('content_class -> STATIC decl_funcao','content_class',2,'p_content_class','sintatico.py',42),
  ('content_class -> decl_variavel content_class','content_class',2,'p_content_class','sintatico.py',43),
  ('content_class -> decl_funcao content_class','content_class',2,'p_content_class','sintatico.py',44),
  ('content_class -> STATIC decl_variavel content_class','content_class',3,'p_content_class','sintatico.py',45),
  ('content_class -> STATIC decl_funcao content_class','content_class',3,'p_content_class','sintatico.py',46),
  ('decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',58),
  ('decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body','decl_funcao',5,'p_decl_funcao','sintatico.py',59),
  ('decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',60),
  ('decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',61),
  ('decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body','decl_funcao',5,'p_decl_funcao','sintatico.py',62),
  ('decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body','decl_funcao',6,'p_decl_funcao','sintatico.py',63),
  ('parametros -> tipo ID','parametros',2,'p_parametros','sintatico.py',71),
  ('parametros -> tipo ID VIRGULA parametros','parametros',4,'p_parametros','sintatico.py',72),
  ('decl_variavel -> tipo ID PONTO_VIRG','decl_variavel',3,'p_decl_variavel','sintatico.py',80),
  ('decl_variavel -> tipo ID RECEBER exp PONTO_VIRG','decl_variavel',5,'p_decl_variavel','sintatico.py',81),
  ('decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG','decl_variavel',4,'p_decl_variavel','sintatico.py',82),
  ('decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG','decl_variavel',6,'p_decl_variavel','sintatico.py',83),
  ('decl_variavel_n -> VIRGULA ID decl_variavel_n','decl_variavel_n',3,'p_decl_variavel_n','sintatico.py',95),
  ('decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n','decl_variavel_n',5,'p_decl_variavel_n','sintatico.py',96),
  ('decl_variavel_n -> VIRGULA ID RECEBER exp','decl_variavel_n',4,'p_decl_variavel_n','sintatico.py',97),
  ('decl_variavel_n -> VIRGULA ID','decl_variavel_n',2,'p_decl_variavel_n','sintatico.py',98),
  ('typedef -> TYPEDEF tipo ID PONTO_VIRG','typedef',4,'p_typedef','sintatico.py',110),
  ('typedef -> TYPEDEF tipo ID decl_typedef_n PONTO_VIRG','typedef',5,'p_typedef','sintatico.py',111),
  ('decl_typedef_n -> VIRGULA ID decl_typedef_n','decl_typedef_n',3,'p_decl_typedef_n','sintatico.py',118),
  ('decl_typedef_n -> VIRGULA ID','decl_typedef_n',2,'p_decl_typedef_n','sintatico.py',119),
  ('using -> USING ID 2X_DOIS_PONTOS ID PONTO_VIRG','using',5,'p_using','sintatico.py',126),
  ('using -> USING ID ID PONTO_VIRG','using',4,'p_using','sintatico.py',127),
  ('body -> CHAVE_ABRE comandos CHAVE_FECHA','body',3,'p_body','sintatico.py',134),
  ('body -> CHAVE_ABRE CHAVE_FECHA','body',2,'p_body','sintatico.py',135),
  ('comandos -> comando','comandos',1,'p_comandos','sintatico.py',141),
  ('comandos -> comando comandos','comandos',2,'p_comandos','sintatico.py',142),
  ('comando -> condicional_1','comando',1,'p_comando','sintatico.py',146),
  ('comando -> condicional_2','comando',1,'p_comando','sintatico.py',147),
  ('exp -> exp RECEBER exp_1','exp',3,'p_exp','sintatico.py',151),
  ('exp -> exp_1','exp',1,'p_exp','sintatico.py',152),
  ('exp_1 -> exp_1 OP_OU exp_2','exp_1',3,'p_exp_1','sintatico.py',160),
  ('exp_1 -> exp_1 OR exp_2','exp_1',3,'p_exp_1','sintatico.py',161),
  ('exp_1 -> exp_2','exp_1',1,'p_exp_1','sintatico.py',162),
  ('exp_2 -> exp_2 OP_E exp_3','exp_2',3,'p_exp_2','sintatico.py',172),
  ('exp_2 -> exp_2 AND exp_3','exp_2',3,'p_exp_2','sintatico.py',173),
  ('exp_2 -> exp_3','exp_2',1,'p_exp_2','sintatico.py',174),
  ('exp_3 -> exp_3 OP_OU_EX exp_4','exp_3',3,'p_exp_3','sintatico.py',184),
  ('exp_3 -> exp_3 XOR exp_4','exp_3',3,'p_exp_3','sintatico.py',185),
  ('exp_3 -> exp_4','exp_3',1,'p_exp_3','sintatico.py',186),
  ('exp_4 -> exp_4 IGUAL exp_5','exp_4',3,'p_exp_4','sintatico.py',196),
  ('exp_4 -> exp_4 DIFERENTE exp_5','exp_4',3,'p_exp_4','sintatico.py',197),
  ('exp_4 -> exp_5','exp_4',1,'p_exp_4','sintatico.py',198),
  ('exp_5 -> exp_5 MENOR_Q exp_6','exp_5',3,'p_exp_5','sintatico.py',208),
  ('exp_5 -> exp_5 MAIOR_Q exp_6','exp_5',3,'p_exp_5','sintatico.py',209),
  ('exp_5 -> exp_5 MAIOR_IGUAL exp_6','exp_5',3,'p_exp_5','sintatico.py',210),
  ('exp_5 -> exp_5 MENOR_IGUAL exp_6','exp_5',3,'p_exp_5','sintatico.py',211),
  ('exp_5 -> exp_6','exp_5',1,'p_exp_5','sintatico.py',212),
  ('exp_6 -> exp_6 SOMA exp_7','exp_6',3,'p_exp_6','sintatico.py',226),
  ('exp_6 -> exp_6 SUB exp_7','exp_6',3,'p_exp_6','sintatico.py',227),
  ('exp_6 -> exp_7','exp_6',1,'p_exp_6','sintatico.py',228),
  ('exp_7 -> exp_7 MULT exp_8','exp_7',3,'p_exp_7','sintatico.py',238),
  ('exp_7 -> exp_7 DIV exp_8','exp_7',3,'p_exp_7','sintatico.py',239),
  ('exp_7 -> exp_7 MODULO exp_8','exp_7',3,'p_exp_7','sintatico.py',240),
  ('exp_7 -> exp_8','exp_7',1,'p_exp_7','sintatico.py',241),
  ('exp_8 -> OP_NOT exp_9','exp_8',2,'p_exp_8','sintatico.py',253),
  ('exp_8 -> NOT exp_9','exp_8',2,'p_exp_8','sintatico.py',254),
  ('exp_8 -> exp_9 MAIS_MAIS','exp_8',2,'p_exp_8','sintatico.py',255),
  ('exp_8 -> exp_9 MENOS_MENOS','exp_8',2,'p_exp_8','sintatico.py',256),
  ('exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA','exp_8',4,'p_exp_8','sintatico.py',257),
  ('exp_8 -> NEW tipo','exp_8',2,'p_exp_8','sintatico.py',258),
  ('exp_8 -> exp_9','exp_8',1,'p_exp_8','sintatico.py',259),
  ('exp_9 -> exp_9 PONTO exp_10','exp_9',3,'p_exp_9','sintatico.py',282),
  ('exp_9 -> exp_9 SETA exp_10','exp_9',3,'p_exp_9','sintatico.py',283),
  ('exp_9 -> exp_10','exp_9',1,'p_exp_9','sintatico.py',284),
  ('exp_10 -> ID','exp_10',1,'p_exp_10','sintatico.py',294),
  ('exp_10 -> INT_V','exp_10',1,'p_exp_10','sintatico.py',295),
  ('exp_10 -> TRUE','exp_10',1,'p_exp_10','sintatico.py',296),
  ('exp_10 -> FALSE','exp_10',1,'p_exp_10','sintatico.py',297),
  ('exp_10 -> chamada_funcao','exp_10',1,'p_exp_10','sintatico.py',298),
  ('exp_10 -> STRING_V','exp_10',1,'p_exp_10','sintatico.py',299),
  ('exp_10 -> THIS','exp_10',1,'p_exp_10','sintatico.py',300),
  ('exp_10 -> PARENT_ABRE exp PARENT_FECHA','exp_10',3,'p_exp_10','sintatico.py',301),
  ('chamada_funcao -> ID PARENT_ABRE parametros_chamada PARENT_FECHA','chamada_funcao',4,'p_chamada_funcao','sintatico.py',309),
  ('chamada_funcao -> ID PARENT_ABRE PARENT_FECHA','chamada_funcao',3,'p_chamada_funcao','sintatico.py',310),
  ('chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA','chamada_funcao',4,'p_chamada_funcao','sintatico.py',311),
  ('parametros_chamada -> ID VIRGULA parametros_chamada','parametros_chamada',3,'p_parametros_chamada','sintatico.py',314),
  ('parametros_chamada -> ID','parametros_chamada',1,'p_parametros_chamada','sintatico.py',315),
  ('condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if','condicional_1',5,'p_condicional_1','sintatico.py',318),
  ('condicional_1 -> exp PONTO_VIRG','condicional_1',2,'p_condicional_1','sintatico.py',319),
  ('condicional_1 -> decl_variavel','condicional_1',1,'p_condicional_1','sintatico.py',320),
  ('condicional_1 -> typedef','condicional_1',1,'p_condicional_1','sintatico.py',321),
  ('condicional_1 -> using','condicional_1',1,'p_condicional_1','sintatico.py',322),
  ('condicional_1 -> chamada_funcao','condicional_1',1,'p_condicional_1','sintatico.py',323),
  ('condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body','condicional_1',5,'p_condicional_1','sintatico.py',324),
  ('condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body','condicional_1',5,'p_condicional_1','sintatico.py',325),
  ('condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA condicional_1','condicional_1',5,'p_condicional_1','sintatico.py',326),
  ('condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA condicional_1','condicional_1',5,'p_condicional_1','sintatico.py',327),
  ('condicional_1 -> RETURN exp PONTO_VIRG','condicional_1',3,'p_condicional_1','sintatico.py',328),
  ('condicional_1 -> RETURN PONTO_VIRG','condicional_1',2,'p_condicional_1','sintatico.py',329),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body','condicional_2',5,'p_condicional_2','sintatico.py',332),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando','condicional_2',5,'p_condicional_2','sintatico.py',333),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2','condicional_2',7,'p_condicional_2','sintatico.py',334),
  ('condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body ELSE condicional_2','condicional_2',7,'p_condicional_2','sintatico.py',335),
  ('rest_if -> condicional_1 ELSE condicional_1','rest_if',3,'p_rest_if','sintatico.py',338),
  ('rest_if -> body ELSE body','rest_if',3,'p_rest_if','sintatico.py',339),
  ('rest_if -> condicional_1 ELSE body','rest_if',3,'p_rest_if','sintatico.py',340),
  ('rest_if -> body ELSE condicional_1','rest_if',3,'p_rest_if','sintatico.py',341),
  ('for_log -> decl_variavel PONTO_VIRG','for_log',2,'p_for_log','sintatico.py',345),
  ('for_log -> decl_variavel exp PONTO_VIRG','for_log',3,'p_for_log','sintatico.py',346),
  ('for_log -> decl_variavel exp PONTO_VIRG exp','for_log',4,'p_for_log','sintatico.py',347),
  ('for_log -> decl_variavel PONTO_VIRG exp','for_log',3,'p_for_log','sintatico.py',348),
  ('for_log -> PONTO_VIRG exp PONTO_VIRG exp','for_log',4,'p_for_log','sintatico.py',349),
  ('for_log -> PONTO_VIRG exp PONTO_VIRG','for_log',3,'p_for_log','sintatico.py',350),
  ('for_log -> PONTO_VIRG PONTO_VIRG exp','for_log',3,'p_for_log','sintatico.py',351),
  ('for_log -> PONTO_VIRG PONTO_VIRG','for_log',2,'p_for_log','sintatico.py',352),
  ('tipo -> INT','tipo',1,'p_tipo','sintatico.py',356),
  ('tipo -> BOOL','tipo',1,'p_tipo','sintatico.py',357),
  ('tipo -> ID','tipo',1,'p_tipo','sintatico.py',358),
  ('tipo -> STRING','tipo',1,'p_tipo','sintatico.py',359),
]
