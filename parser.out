Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLCHETE_ABRE
    COLCHETE_FECHA
    COMENTARIO
    ENDERECO
    NAMESPACE
    NEW
    PONTO
    SETA
    STATIC
    STRUCT
    THIS
    TRY
    USING

Grammar

Rule 0     S' -> cpp
Rule 1     cpp -> decl_classe
Rule 2     cpp -> decl_funcao
Rule 3     cpp -> decl_variavel
Rule 4     cpp -> decl_classe cpp
Rule 5     cpp -> decl_funcao cpp
Rule 6     cpp -> decl_variavel cpp
Rule 7     decl_classe -> CLASS ID body_class PONTO_VIRG
Rule 8     body_class -> CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHA
Rule 9     content_class -> decl_variavel content_class
Rule 10    content_class -> decl_funcao content_class
Rule 11    content_class -> decl_variavel
Rule 12    content_class -> decl_funcao
Rule 13    decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body
Rule 14    decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body
Rule 15    decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body
Rule 16    decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body
Rule 17    decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body
Rule 18    decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body
Rule 19    parametros -> tipo ID
Rule 20    parametros -> tipo ID VIRGULA parametros
Rule 21    decl_variavel -> tipo ID PONTO_VIRG
Rule 22    decl_variavel -> tipo ID RECEBER exp PONTO_VIRG
Rule 23    decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG
Rule 24    decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
Rule 25    decl_variavel -> TYPEDEF tipo ID PONTO_VIRG
Rule 26    decl_variavel -> TYPEDEF tipo ID decl_variavel_n
Rule 27    decl_variavel_n -> VIRGULA ID decl_variavel_n
Rule 28    decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n
Rule 29    decl_variavel_n -> VIRGULA ID
Rule 30    body -> CHAVE_ABRE comandos CHAVE_FECHA
Rule 31    body -> CHAVE_ABRE CHAVE_FECHA
Rule 32    comandos -> comando
Rule 33    comandos -> comando comandos
Rule 34    comando -> condicional_1
Rule 35    comando -> condicional_2
Rule 36    exp -> exp RECEBER exp_1
Rule 37    exp -> exp_1
Rule 38    exp_1 -> exp_1 OP_OU exp_2
Rule 39    exp_1 -> exp_1 OR exp_2
Rule 40    exp_1 -> exp_2
Rule 41    exp_2 -> exp_2 OP_E exp_3
Rule 42    exp_2 -> exp_2 AND exp_3
Rule 43    exp_2 -> exp_3
Rule 44    exp_3 -> exp_3 OP_OU_EX exp_4
Rule 45    exp_3 -> exp_3 XOR exp_4
Rule 46    exp_3 -> exp_4
Rule 47    exp_4 -> exp_4 IGUAL exp_5
Rule 48    exp_4 -> exp_4 DIFERENTE exp_5
Rule 49    exp_4 -> exp_5
Rule 50    exp_5 -> exp_5 MENOR_Q exp_6
Rule 51    exp_5 -> exp_5 MAIOR_Q exp_6
Rule 52    exp_5 -> exp_5 MAIOR_IGUAL exp_6
Rule 53    exp_5 -> exp_5 MENOR_IGUAL exp_6
Rule 54    exp_5 -> exp_6
Rule 55    exp_6 -> exp_6 SOMA exp_7
Rule 56    exp_6 -> exp_6 SUB exp_7
Rule 57    exp_6 -> exp_7
Rule 58    exp_7 -> exp_7 MULT exp_8
Rule 59    exp_7 -> exp_7 DIV exp_8
Rule 60    exp_7 -> exp_7 MODULO exp_8
Rule 61    exp_7 -> exp_8
Rule 62    exp_8 -> OP_NOT exp_9
Rule 63    exp_8 -> NOT exp_9
Rule 64    exp_8 -> exp_9 MAIS_MAIS
Rule 65    exp_8 -> exp_9 MENOS_MENOS
Rule 66    exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
Rule 67    exp_8 -> exp_9
Rule 68    exp_9 -> ID
Rule 69    exp_9 -> INT_V
Rule 70    exp_9 -> TRUE
Rule 71    exp_9 -> FALSE
Rule 72    exp_9 -> chamada_funcao
Rule 73    exp_9 -> STRING_V
Rule 74    exp_9 -> PARENT_ABRE exp PARENT_FECHA
Rule 75    chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA
Rule 76    chamada_funcao -> ID PARENT_ABRE PARENT_FECHA
Rule 77    chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA
Rule 78    condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if
Rule 79    condicional_1 -> exp PONTO_VIRG
Rule 80    condicional_1 -> decl_variavel
Rule 81    condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body
Rule 82    condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body
Rule 83    condicional_1 -> RETURN exp PONTO_VIRG
Rule 84    condicional_1 -> RETURN PONTO_VIRG
Rule 85    condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body
Rule 86    condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando
Rule 87    condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2
Rule 88    rest_if -> condicional_1 ELSE condicional_1
Rule 89    rest_if -> body ELSE body
Rule 90    rest_if -> condicional_1 ELSE body
Rule 91    rest_if -> body ELSE condicional_1
Rule 92    for_log -> decl_variavel PONTO_VIRG
Rule 93    for_log -> decl_variavel exp PONTO_VIRG
Rule 94    for_log -> decl_variavel exp PONTO_VIRG exp
Rule 95    for_log -> decl_variavel PONTO_VIRG exp
Rule 96    for_log -> PONTO_VIRG exp PONTO_VIRG exp
Rule 97    for_log -> PONTO_VIRG exp PONTO_VIRG
Rule 98    for_log -> PONTO_VIRG PONTO_VIRG exp
Rule 99    for_log -> PONTO_VIRG PONTO_VIRG
Rule 100   tipo -> INT
Rule 101   tipo -> BOOL
Rule 102   tipo -> ID
Rule 103   tipo -> STRING

Terminals, with rules where they appear

AND                  : 42
BOOL                 : 101
CHAVE_ABRE           : 8 30 31
CHAVE_FECHA          : 8 30 31
CLASS                : 7
COLCHETE_ABRE        : 
COLCHETE_FECHA       : 
COMENTARIO           : 
DIFERENTE            : 48
DIV                  : 59
DOIS_PONTOS          : 8
ELSE                 : 87 88 89 90 91
ENDERECO             : 
FALSE                : 71
FOR                  : 82
ID                   : 7 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 68 75 76 102
IF                   : 78 85 86 87
IGUAL                : 47
INT                  : 100
INT_V                : 69
MAIOR_IGUAL          : 52
MAIOR_Q              : 51
MAIS_MAIS            : 64
MENOR_IGUAL          : 53
MENOR_Q              : 50
MENOS_MENOS          : 65
MODULO               : 60
MULT                 : 58
NAMESPACE            : 
NEW                  : 
NOT                  : 63
OP_E                 : 41
OP_NOT               : 62
OP_OU                : 38
OP_OU_EX             : 44
OR                   : 39
PARENT_ABRE          : 13 14 15 16 17 18 66 74 75 76 77 78 81 82 85 86 87
PARENT_FECHA         : 13 14 15 16 17 18 66 74 75 76 77 78 81 82 85 86 87
PONTO                : 
PONTO_VIRG           : 7 21 22 23 24 25 79 83 84 92 93 94 95 96 96 97 97 98 98 99 99
PUBLIC               : 8
RECEBER              : 22 24 28 36
RETURN               : 83 84
SETA                 : 
SIZEOF               : 66
SOMA                 : 55
STATIC               : 
STRING               : 103
STRING_V             : 73
STRUCT               : 
SUB                  : 56
THIS                 : 
TRUE                 : 70
TRY                  : 
TYPEDEF              : 25 26
TYPEID               : 77
USING                : 
VIRGULA              : 20 27 28 29
VOID                 : 15 16 17 18 18
WHILE                : 81
XOR                  : 45
error                : 

Nonterminals, with rules where they appear

body                 : 13 14 15 16 17 18 81 82 85 89 89 90 91
body_class           : 7
chamada_funcao       : 72
comando              : 32 33 86
comandos             : 30 33
condicional_1        : 34 87 88 88 90 91
condicional_2        : 35 87
content_class        : 8 9 10
cpp                  : 4 5 6 0
decl_classe          : 1 4
decl_funcao          : 2 5 10 12
decl_variavel        : 3 6 9 11 80 92 93 94 95
decl_variavel_n      : 23 24 26 27 28
exp                  : 22 24 28 36 74 77 78 79 81 83 85 86 87 93 94 94 95 96 96 97 98
exp_1                : 36 37 38 39
exp_2                : 38 39 40 41 42
exp_3                : 41 42 43 44 45
exp_4                : 44 45 46 47 48
exp_5                : 47 48 49 50 51 52 53
exp_6                : 50 51 52 53 54 55 56
exp_7                : 55 56 57 58 59 60
exp_8                : 58 59 60 61
exp_9                : 62 63 64 65 66 67
for_log              : 82
parametros           : 13 16 20 75
rest_if              : 78
tipo                 : 13 14 15 19 20 21 22 23 24 25 26

Parsing method: LALR

state 0

    (0) S' -> . cpp
    (1) cpp -> . decl_classe
    (2) cpp -> . decl_funcao
    (3) cpp -> . decl_variavel
    (4) cpp -> . decl_classe cpp
    (5) cpp -> . decl_funcao cpp
    (6) cpp -> . decl_variavel cpp
    (7) decl_classe -> . CLASS ID body_class PONTO_VIRG
    (13) decl_funcao -> . tipo ID PARENT_ABRE parametros PARENT_FECHA body
    (14) decl_funcao -> . tipo ID PARENT_ABRE PARENT_FECHA body
    (15) decl_funcao -> . tipo ID PARENT_ABRE VOID PARENT_FECHA body
    (16) decl_funcao -> . VOID ID PARENT_ABRE parametros PARENT_FECHA body
    (17) decl_funcao -> . VOID ID PARENT_ABRE PARENT_FECHA body
    (18) decl_funcao -> . VOID ID PARENT_ABRE VOID PARENT_FECHA body
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    CLASS           shift and go to state 5
    VOID            shift and go to state 8
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    cpp                            shift and go to state 1
    decl_classe                    shift and go to state 2
    decl_funcao                    shift and go to state 3
    decl_variavel                  shift and go to state 4
    tipo                           shift and go to state 7

state 1

    (0) S' -> cpp .



state 2

    (1) cpp -> decl_classe .
    (4) cpp -> decl_classe . cpp
    (1) cpp -> . decl_classe
    (2) cpp -> . decl_funcao
    (3) cpp -> . decl_variavel
    (4) cpp -> . decl_classe cpp
    (5) cpp -> . decl_funcao cpp
    (6) cpp -> . decl_variavel cpp
    (7) decl_classe -> . CLASS ID body_class PONTO_VIRG
    (13) decl_funcao -> . tipo ID PARENT_ABRE parametros PARENT_FECHA body
    (14) decl_funcao -> . tipo ID PARENT_ABRE PARENT_FECHA body
    (15) decl_funcao -> . tipo ID PARENT_ABRE VOID PARENT_FECHA body
    (16) decl_funcao -> . VOID ID PARENT_ABRE parametros PARENT_FECHA body
    (17) decl_funcao -> . VOID ID PARENT_ABRE PARENT_FECHA body
    (18) decl_funcao -> . VOID ID PARENT_ABRE VOID PARENT_FECHA body
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    $end            reduce using rule 1 (cpp -> decl_classe .)
    CLASS           shift and go to state 5
    VOID            shift and go to state 8
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    decl_classe                    shift and go to state 2
    cpp                            shift and go to state 13
    decl_funcao                    shift and go to state 3
    decl_variavel                  shift and go to state 4
    tipo                           shift and go to state 7

state 3

    (2) cpp -> decl_funcao .
    (5) cpp -> decl_funcao . cpp
    (1) cpp -> . decl_classe
    (2) cpp -> . decl_funcao
    (3) cpp -> . decl_variavel
    (4) cpp -> . decl_classe cpp
    (5) cpp -> . decl_funcao cpp
    (6) cpp -> . decl_variavel cpp
    (7) decl_classe -> . CLASS ID body_class PONTO_VIRG
    (13) decl_funcao -> . tipo ID PARENT_ABRE parametros PARENT_FECHA body
    (14) decl_funcao -> . tipo ID PARENT_ABRE PARENT_FECHA body
    (15) decl_funcao -> . tipo ID PARENT_ABRE VOID PARENT_FECHA body
    (16) decl_funcao -> . VOID ID PARENT_ABRE parametros PARENT_FECHA body
    (17) decl_funcao -> . VOID ID PARENT_ABRE PARENT_FECHA body
    (18) decl_funcao -> . VOID ID PARENT_ABRE VOID PARENT_FECHA body
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    $end            reduce using rule 2 (cpp -> decl_funcao .)
    CLASS           shift and go to state 5
    VOID            shift and go to state 8
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    decl_funcao                    shift and go to state 3
    cpp                            shift and go to state 14
    decl_classe                    shift and go to state 2
    decl_variavel                  shift and go to state 4
    tipo                           shift and go to state 7

state 4

    (3) cpp -> decl_variavel .
    (6) cpp -> decl_variavel . cpp
    (1) cpp -> . decl_classe
    (2) cpp -> . decl_funcao
    (3) cpp -> . decl_variavel
    (4) cpp -> . decl_classe cpp
    (5) cpp -> . decl_funcao cpp
    (6) cpp -> . decl_variavel cpp
    (7) decl_classe -> . CLASS ID body_class PONTO_VIRG
    (13) decl_funcao -> . tipo ID PARENT_ABRE parametros PARENT_FECHA body
    (14) decl_funcao -> . tipo ID PARENT_ABRE PARENT_FECHA body
    (15) decl_funcao -> . tipo ID PARENT_ABRE VOID PARENT_FECHA body
    (16) decl_funcao -> . VOID ID PARENT_ABRE parametros PARENT_FECHA body
    (17) decl_funcao -> . VOID ID PARENT_ABRE PARENT_FECHA body
    (18) decl_funcao -> . VOID ID PARENT_ABRE VOID PARENT_FECHA body
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    $end            reduce using rule 3 (cpp -> decl_variavel .)
    CLASS           shift and go to state 5
    VOID            shift and go to state 8
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    decl_variavel                  shift and go to state 4
    cpp                            shift and go to state 15
    decl_classe                    shift and go to state 2
    decl_funcao                    shift and go to state 3
    tipo                           shift and go to state 7

state 5

    (7) decl_classe -> CLASS . ID body_class PONTO_VIRG

    ID              shift and go to state 16


state 6

    (102) tipo -> ID .

    ID              reduce using rule 102 (tipo -> ID .)


state 7

    (13) decl_funcao -> tipo . ID PARENT_ABRE parametros PARENT_FECHA body
    (14) decl_funcao -> tipo . ID PARENT_ABRE PARENT_FECHA body
    (15) decl_funcao -> tipo . ID PARENT_ABRE VOID PARENT_FECHA body
    (21) decl_variavel -> tipo . ID PONTO_VIRG
    (22) decl_variavel -> tipo . ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> tipo . ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> tipo . ID RECEBER exp decl_variavel_n PONTO_VIRG

    ID              shift and go to state 17


state 8

    (16) decl_funcao -> VOID . ID PARENT_ABRE parametros PARENT_FECHA body
    (17) decl_funcao -> VOID . ID PARENT_ABRE PARENT_FECHA body
    (18) decl_funcao -> VOID . ID PARENT_ABRE VOID PARENT_FECHA body

    ID              shift and go to state 18


state 9

    (25) decl_variavel -> TYPEDEF . tipo ID PONTO_VIRG
    (26) decl_variavel -> TYPEDEF . tipo ID decl_variavel_n
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    tipo                           shift and go to state 19

state 10

    (100) tipo -> INT .

    ID              reduce using rule 100 (tipo -> INT .)


state 11

    (101) tipo -> BOOL .

    ID              reduce using rule 101 (tipo -> BOOL .)


state 12

    (103) tipo -> STRING .

    ID              reduce using rule 103 (tipo -> STRING .)


state 13

    (4) cpp -> decl_classe cpp .

    $end            reduce using rule 4 (cpp -> decl_classe cpp .)


state 14

    (5) cpp -> decl_funcao cpp .

    $end            reduce using rule 5 (cpp -> decl_funcao cpp .)


state 15

    (6) cpp -> decl_variavel cpp .

    $end            reduce using rule 6 (cpp -> decl_variavel cpp .)


state 16

    (7) decl_classe -> CLASS ID . body_class PONTO_VIRG
    (8) body_class -> . CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHA

    CHAVE_ABRE      shift and go to state 21

    body_class                     shift and go to state 20

state 17

    (13) decl_funcao -> tipo ID . PARENT_ABRE parametros PARENT_FECHA body
    (14) decl_funcao -> tipo ID . PARENT_ABRE PARENT_FECHA body
    (15) decl_funcao -> tipo ID . PARENT_ABRE VOID PARENT_FECHA body
    (21) decl_variavel -> tipo ID . PONTO_VIRG
    (22) decl_variavel -> tipo ID . RECEBER exp PONTO_VIRG
    (23) decl_variavel -> tipo ID . decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> tipo ID . RECEBER exp decl_variavel_n PONTO_VIRG
    (27) decl_variavel_n -> . VIRGULA ID decl_variavel_n
    (28) decl_variavel_n -> . VIRGULA ID RECEBER exp decl_variavel_n
    (29) decl_variavel_n -> . VIRGULA ID

    PARENT_ABRE     shift and go to state 22
    PONTO_VIRG      shift and go to state 23
    RECEBER         shift and go to state 24
    VIRGULA         shift and go to state 26

    decl_variavel_n                shift and go to state 25

state 18

    (16) decl_funcao -> VOID ID . PARENT_ABRE parametros PARENT_FECHA body
    (17) decl_funcao -> VOID ID . PARENT_ABRE PARENT_FECHA body
    (18) decl_funcao -> VOID ID . PARENT_ABRE VOID PARENT_FECHA body

    PARENT_ABRE     shift and go to state 27


state 19

    (25) decl_variavel -> TYPEDEF tipo . ID PONTO_VIRG
    (26) decl_variavel -> TYPEDEF tipo . ID decl_variavel_n

    ID              shift and go to state 28


state 20

    (7) decl_classe -> CLASS ID body_class . PONTO_VIRG

    PONTO_VIRG      shift and go to state 29


state 21

    (8) body_class -> CHAVE_ABRE . PUBLIC DOIS_PONTOS content_class CHAVE_FECHA

    PUBLIC          shift and go to state 30


state 22

    (13) decl_funcao -> tipo ID PARENT_ABRE . parametros PARENT_FECHA body
    (14) decl_funcao -> tipo ID PARENT_ABRE . PARENT_FECHA body
    (15) decl_funcao -> tipo ID PARENT_ABRE . VOID PARENT_FECHA body
    (19) parametros -> . tipo ID
    (20) parametros -> . tipo ID VIRGULA parametros
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    PARENT_FECHA    shift and go to state 33
    VOID            shift and go to state 34
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    tipo                           shift and go to state 31
    parametros                     shift and go to state 32

state 23

    (21) decl_variavel -> tipo ID PONTO_VIRG .

    CLASS           reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    VOID            reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    TYPEDEF         reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    INT             reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    BOOL            reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    ID              reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    STRING          reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    $end            reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    CHAVE_FECHA     reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    IF              reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    WHILE           reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    FOR             reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    RETURN          reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    OP_NOT          reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    NOT             reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    SIZEOF          reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    INT_V           reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    TRUE            reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    FALSE           reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    STRING_V        reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    PARENT_ABRE     reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    TYPEID          reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    PONTO_VIRG      reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)
    ELSE            reduce using rule 21 (decl_variavel -> tipo ID PONTO_VIRG .)


state 24

    (22) decl_variavel -> tipo ID RECEBER . exp PONTO_VIRG
    (24) decl_variavel -> tipo ID RECEBER . exp decl_variavel_n PONTO_VIRG
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 36
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 25

    (23) decl_variavel -> tipo ID decl_variavel_n . PONTO_VIRG

    PONTO_VIRG      shift and go to state 56


state 26

    (27) decl_variavel_n -> VIRGULA . ID decl_variavel_n
    (28) decl_variavel_n -> VIRGULA . ID RECEBER exp decl_variavel_n
    (29) decl_variavel_n -> VIRGULA . ID

    ID              shift and go to state 57


state 27

    (16) decl_funcao -> VOID ID PARENT_ABRE . parametros PARENT_FECHA body
    (17) decl_funcao -> VOID ID PARENT_ABRE . PARENT_FECHA body
    (18) decl_funcao -> VOID ID PARENT_ABRE . VOID PARENT_FECHA body
    (19) parametros -> . tipo ID
    (20) parametros -> . tipo ID VIRGULA parametros
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    PARENT_FECHA    shift and go to state 60
    VOID            shift and go to state 58
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    parametros                     shift and go to state 59
    tipo                           shift and go to state 31

state 28

    (25) decl_variavel -> TYPEDEF tipo ID . PONTO_VIRG
    (26) decl_variavel -> TYPEDEF tipo ID . decl_variavel_n
    (27) decl_variavel_n -> . VIRGULA ID decl_variavel_n
    (28) decl_variavel_n -> . VIRGULA ID RECEBER exp decl_variavel_n
    (29) decl_variavel_n -> . VIRGULA ID

    PONTO_VIRG      shift and go to state 61
    VIRGULA         shift and go to state 26

    decl_variavel_n                shift and go to state 62

state 29

    (7) decl_classe -> CLASS ID body_class PONTO_VIRG .

    CLASS           reduce using rule 7 (decl_classe -> CLASS ID body_class PONTO_VIRG .)
    VOID            reduce using rule 7 (decl_classe -> CLASS ID body_class PONTO_VIRG .)
    TYPEDEF         reduce using rule 7 (decl_classe -> CLASS ID body_class PONTO_VIRG .)
    INT             reduce using rule 7 (decl_classe -> CLASS ID body_class PONTO_VIRG .)
    BOOL            reduce using rule 7 (decl_classe -> CLASS ID body_class PONTO_VIRG .)
    ID              reduce using rule 7 (decl_classe -> CLASS ID body_class PONTO_VIRG .)
    STRING          reduce using rule 7 (decl_classe -> CLASS ID body_class PONTO_VIRG .)
    $end            reduce using rule 7 (decl_classe -> CLASS ID body_class PONTO_VIRG .)


state 30

    (8) body_class -> CHAVE_ABRE PUBLIC . DOIS_PONTOS content_class CHAVE_FECHA

    DOIS_PONTOS     shift and go to state 63


state 31

    (19) parametros -> tipo . ID
    (20) parametros -> tipo . ID VIRGULA parametros

    ID              shift and go to state 64


state 32

    (13) decl_funcao -> tipo ID PARENT_ABRE parametros . PARENT_FECHA body

    PARENT_FECHA    shift and go to state 65


state 33

    (14) decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA . body
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA

    CHAVE_ABRE      shift and go to state 67

    body                           shift and go to state 66

state 34

    (15) decl_funcao -> tipo ID PARENT_ABRE VOID . PARENT_FECHA body

    PARENT_FECHA    shift and go to state 68


state 35

    (68) exp_9 -> ID .
    (75) chamada_funcao -> ID . PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> ID . PARENT_ABRE PARENT_FECHA

    MAIS_MAIS       reduce using rule 68 (exp_9 -> ID .)
    MENOS_MENOS     reduce using rule 68 (exp_9 -> ID .)
    MULT            reduce using rule 68 (exp_9 -> ID .)
    DIV             reduce using rule 68 (exp_9 -> ID .)
    MODULO          reduce using rule 68 (exp_9 -> ID .)
    SOMA            reduce using rule 68 (exp_9 -> ID .)
    SUB             reduce using rule 68 (exp_9 -> ID .)
    MENOR_Q         reduce using rule 68 (exp_9 -> ID .)
    MAIOR_Q         reduce using rule 68 (exp_9 -> ID .)
    MAIOR_IGUAL     reduce using rule 68 (exp_9 -> ID .)
    MENOR_IGUAL     reduce using rule 68 (exp_9 -> ID .)
    IGUAL           reduce using rule 68 (exp_9 -> ID .)
    DIFERENTE       reduce using rule 68 (exp_9 -> ID .)
    OP_OU_EX        reduce using rule 68 (exp_9 -> ID .)
    XOR             reduce using rule 68 (exp_9 -> ID .)
    OP_E            reduce using rule 68 (exp_9 -> ID .)
    AND             reduce using rule 68 (exp_9 -> ID .)
    OP_OU           reduce using rule 68 (exp_9 -> ID .)
    OR              reduce using rule 68 (exp_9 -> ID .)
    PONTO_VIRG      reduce using rule 68 (exp_9 -> ID .)
    RECEBER         reduce using rule 68 (exp_9 -> ID .)
    VIRGULA         reduce using rule 68 (exp_9 -> ID .)
    PARENT_FECHA    reduce using rule 68 (exp_9 -> ID .)
    PARENT_ABRE     shift and go to state 69


state 36

    (22) decl_variavel -> tipo ID RECEBER exp . PONTO_VIRG
    (24) decl_variavel -> tipo ID RECEBER exp . decl_variavel_n PONTO_VIRG
    (36) exp -> exp . RECEBER exp_1
    (27) decl_variavel_n -> . VIRGULA ID decl_variavel_n
    (28) decl_variavel_n -> . VIRGULA ID RECEBER exp decl_variavel_n
    (29) decl_variavel_n -> . VIRGULA ID

    PONTO_VIRG      shift and go to state 71
    RECEBER         shift and go to state 70
    VIRGULA         shift and go to state 26

    decl_variavel_n                shift and go to state 72

state 37

    (37) exp -> exp_1 .
    (38) exp_1 -> exp_1 . OP_OU exp_2
    (39) exp_1 -> exp_1 . OR exp_2

    PONTO_VIRG      reduce using rule 37 (exp -> exp_1 .)
    RECEBER         reduce using rule 37 (exp -> exp_1 .)
    VIRGULA         reduce using rule 37 (exp -> exp_1 .)
    PARENT_FECHA    reduce using rule 37 (exp -> exp_1 .)
    OP_OU           shift and go to state 73
    OR              shift and go to state 74


state 38

    (40) exp_1 -> exp_2 .
    (41) exp_2 -> exp_2 . OP_E exp_3
    (42) exp_2 -> exp_2 . AND exp_3

    OP_OU           reduce using rule 40 (exp_1 -> exp_2 .)
    OR              reduce using rule 40 (exp_1 -> exp_2 .)
    PONTO_VIRG      reduce using rule 40 (exp_1 -> exp_2 .)
    RECEBER         reduce using rule 40 (exp_1 -> exp_2 .)
    VIRGULA         reduce using rule 40 (exp_1 -> exp_2 .)
    PARENT_FECHA    reduce using rule 40 (exp_1 -> exp_2 .)
    OP_E            shift and go to state 75
    AND             shift and go to state 76


state 39

    (43) exp_2 -> exp_3 .
    (44) exp_3 -> exp_3 . OP_OU_EX exp_4
    (45) exp_3 -> exp_3 . XOR exp_4

    OP_E            reduce using rule 43 (exp_2 -> exp_3 .)
    AND             reduce using rule 43 (exp_2 -> exp_3 .)
    OP_OU           reduce using rule 43 (exp_2 -> exp_3 .)
    OR              reduce using rule 43 (exp_2 -> exp_3 .)
    PONTO_VIRG      reduce using rule 43 (exp_2 -> exp_3 .)
    RECEBER         reduce using rule 43 (exp_2 -> exp_3 .)
    VIRGULA         reduce using rule 43 (exp_2 -> exp_3 .)
    PARENT_FECHA    reduce using rule 43 (exp_2 -> exp_3 .)
    OP_OU_EX        shift and go to state 77
    XOR             shift and go to state 78


state 40

    (46) exp_3 -> exp_4 .
    (47) exp_4 -> exp_4 . IGUAL exp_5
    (48) exp_4 -> exp_4 . DIFERENTE exp_5

    OP_OU_EX        reduce using rule 46 (exp_3 -> exp_4 .)
    XOR             reduce using rule 46 (exp_3 -> exp_4 .)
    OP_E            reduce using rule 46 (exp_3 -> exp_4 .)
    AND             reduce using rule 46 (exp_3 -> exp_4 .)
    OP_OU           reduce using rule 46 (exp_3 -> exp_4 .)
    OR              reduce using rule 46 (exp_3 -> exp_4 .)
    PONTO_VIRG      reduce using rule 46 (exp_3 -> exp_4 .)
    RECEBER         reduce using rule 46 (exp_3 -> exp_4 .)
    VIRGULA         reduce using rule 46 (exp_3 -> exp_4 .)
    PARENT_FECHA    reduce using rule 46 (exp_3 -> exp_4 .)
    IGUAL           shift and go to state 79
    DIFERENTE       shift and go to state 80


state 41

    (49) exp_4 -> exp_5 .
    (50) exp_5 -> exp_5 . MENOR_Q exp_6
    (51) exp_5 -> exp_5 . MAIOR_Q exp_6
    (52) exp_5 -> exp_5 . MAIOR_IGUAL exp_6
    (53) exp_5 -> exp_5 . MENOR_IGUAL exp_6

    IGUAL           reduce using rule 49 (exp_4 -> exp_5 .)
    DIFERENTE       reduce using rule 49 (exp_4 -> exp_5 .)
    OP_OU_EX        reduce using rule 49 (exp_4 -> exp_5 .)
    XOR             reduce using rule 49 (exp_4 -> exp_5 .)
    OP_E            reduce using rule 49 (exp_4 -> exp_5 .)
    AND             reduce using rule 49 (exp_4 -> exp_5 .)
    OP_OU           reduce using rule 49 (exp_4 -> exp_5 .)
    OR              reduce using rule 49 (exp_4 -> exp_5 .)
    PONTO_VIRG      reduce using rule 49 (exp_4 -> exp_5 .)
    RECEBER         reduce using rule 49 (exp_4 -> exp_5 .)
    VIRGULA         reduce using rule 49 (exp_4 -> exp_5 .)
    PARENT_FECHA    reduce using rule 49 (exp_4 -> exp_5 .)
    MENOR_Q         shift and go to state 81
    MAIOR_Q         shift and go to state 82
    MAIOR_IGUAL     shift and go to state 83
    MENOR_IGUAL     shift and go to state 84


state 42

    (54) exp_5 -> exp_6 .
    (55) exp_6 -> exp_6 . SOMA exp_7
    (56) exp_6 -> exp_6 . SUB exp_7

    MENOR_Q         reduce using rule 54 (exp_5 -> exp_6 .)
    MAIOR_Q         reduce using rule 54 (exp_5 -> exp_6 .)
    MAIOR_IGUAL     reduce using rule 54 (exp_5 -> exp_6 .)
    MENOR_IGUAL     reduce using rule 54 (exp_5 -> exp_6 .)
    IGUAL           reduce using rule 54 (exp_5 -> exp_6 .)
    DIFERENTE       reduce using rule 54 (exp_5 -> exp_6 .)
    OP_OU_EX        reduce using rule 54 (exp_5 -> exp_6 .)
    XOR             reduce using rule 54 (exp_5 -> exp_6 .)
    OP_E            reduce using rule 54 (exp_5 -> exp_6 .)
    AND             reduce using rule 54 (exp_5 -> exp_6 .)
    OP_OU           reduce using rule 54 (exp_5 -> exp_6 .)
    OR              reduce using rule 54 (exp_5 -> exp_6 .)
    PONTO_VIRG      reduce using rule 54 (exp_5 -> exp_6 .)
    RECEBER         reduce using rule 54 (exp_5 -> exp_6 .)
    VIRGULA         reduce using rule 54 (exp_5 -> exp_6 .)
    PARENT_FECHA    reduce using rule 54 (exp_5 -> exp_6 .)
    SOMA            shift and go to state 85
    SUB             shift and go to state 86


state 43

    (57) exp_6 -> exp_7 .
    (58) exp_7 -> exp_7 . MULT exp_8
    (59) exp_7 -> exp_7 . DIV exp_8
    (60) exp_7 -> exp_7 . MODULO exp_8

    SOMA            reduce using rule 57 (exp_6 -> exp_7 .)
    SUB             reduce using rule 57 (exp_6 -> exp_7 .)
    MENOR_Q         reduce using rule 57 (exp_6 -> exp_7 .)
    MAIOR_Q         reduce using rule 57 (exp_6 -> exp_7 .)
    MAIOR_IGUAL     reduce using rule 57 (exp_6 -> exp_7 .)
    MENOR_IGUAL     reduce using rule 57 (exp_6 -> exp_7 .)
    IGUAL           reduce using rule 57 (exp_6 -> exp_7 .)
    DIFERENTE       reduce using rule 57 (exp_6 -> exp_7 .)
    OP_OU_EX        reduce using rule 57 (exp_6 -> exp_7 .)
    XOR             reduce using rule 57 (exp_6 -> exp_7 .)
    OP_E            reduce using rule 57 (exp_6 -> exp_7 .)
    AND             reduce using rule 57 (exp_6 -> exp_7 .)
    OP_OU           reduce using rule 57 (exp_6 -> exp_7 .)
    OR              reduce using rule 57 (exp_6 -> exp_7 .)
    PONTO_VIRG      reduce using rule 57 (exp_6 -> exp_7 .)
    RECEBER         reduce using rule 57 (exp_6 -> exp_7 .)
    VIRGULA         reduce using rule 57 (exp_6 -> exp_7 .)
    PARENT_FECHA    reduce using rule 57 (exp_6 -> exp_7 .)
    MULT            shift and go to state 87
    DIV             shift and go to state 88
    MODULO          shift and go to state 89


state 44

    (61) exp_7 -> exp_8 .

    MULT            reduce using rule 61 (exp_7 -> exp_8 .)
    DIV             reduce using rule 61 (exp_7 -> exp_8 .)
    MODULO          reduce using rule 61 (exp_7 -> exp_8 .)
    SOMA            reduce using rule 61 (exp_7 -> exp_8 .)
    SUB             reduce using rule 61 (exp_7 -> exp_8 .)
    MENOR_Q         reduce using rule 61 (exp_7 -> exp_8 .)
    MAIOR_Q         reduce using rule 61 (exp_7 -> exp_8 .)
    MAIOR_IGUAL     reduce using rule 61 (exp_7 -> exp_8 .)
    MENOR_IGUAL     reduce using rule 61 (exp_7 -> exp_8 .)
    IGUAL           reduce using rule 61 (exp_7 -> exp_8 .)
    DIFERENTE       reduce using rule 61 (exp_7 -> exp_8 .)
    OP_OU_EX        reduce using rule 61 (exp_7 -> exp_8 .)
    XOR             reduce using rule 61 (exp_7 -> exp_8 .)
    OP_E            reduce using rule 61 (exp_7 -> exp_8 .)
    AND             reduce using rule 61 (exp_7 -> exp_8 .)
    OP_OU           reduce using rule 61 (exp_7 -> exp_8 .)
    OR              reduce using rule 61 (exp_7 -> exp_8 .)
    PONTO_VIRG      reduce using rule 61 (exp_7 -> exp_8 .)
    RECEBER         reduce using rule 61 (exp_7 -> exp_8 .)
    VIRGULA         reduce using rule 61 (exp_7 -> exp_8 .)
    PARENT_FECHA    reduce using rule 61 (exp_7 -> exp_8 .)


state 45

    (62) exp_8 -> OP_NOT . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_9                          shift and go to state 90
    chamada_funcao                 shift and go to state 53

state 46

    (64) exp_8 -> exp_9 . MAIS_MAIS
    (65) exp_8 -> exp_9 . MENOS_MENOS
    (67) exp_8 -> exp_9 .

    MAIS_MAIS       shift and go to state 91
    MENOS_MENOS     shift and go to state 92
    MULT            reduce using rule 67 (exp_8 -> exp_9 .)
    DIV             reduce using rule 67 (exp_8 -> exp_9 .)
    MODULO          reduce using rule 67 (exp_8 -> exp_9 .)
    SOMA            reduce using rule 67 (exp_8 -> exp_9 .)
    SUB             reduce using rule 67 (exp_8 -> exp_9 .)
    MENOR_Q         reduce using rule 67 (exp_8 -> exp_9 .)
    MAIOR_Q         reduce using rule 67 (exp_8 -> exp_9 .)
    MAIOR_IGUAL     reduce using rule 67 (exp_8 -> exp_9 .)
    MENOR_IGUAL     reduce using rule 67 (exp_8 -> exp_9 .)
    IGUAL           reduce using rule 67 (exp_8 -> exp_9 .)
    DIFERENTE       reduce using rule 67 (exp_8 -> exp_9 .)
    OP_OU_EX        reduce using rule 67 (exp_8 -> exp_9 .)
    XOR             reduce using rule 67 (exp_8 -> exp_9 .)
    OP_E            reduce using rule 67 (exp_8 -> exp_9 .)
    AND             reduce using rule 67 (exp_8 -> exp_9 .)
    OP_OU           reduce using rule 67 (exp_8 -> exp_9 .)
    OR              reduce using rule 67 (exp_8 -> exp_9 .)
    PONTO_VIRG      reduce using rule 67 (exp_8 -> exp_9 .)
    RECEBER         reduce using rule 67 (exp_8 -> exp_9 .)
    VIRGULA         reduce using rule 67 (exp_8 -> exp_9 .)
    PARENT_FECHA    reduce using rule 67 (exp_8 -> exp_9 .)


state 47

    (63) exp_8 -> NOT . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_9                          shift and go to state 93
    chamada_funcao                 shift and go to state 53

state 48

    (66) exp_8 -> SIZEOF . PARENT_ABRE exp_9 PARENT_FECHA

    PARENT_ABRE     shift and go to state 94


state 49

    (74) exp_9 -> PARENT_ABRE . exp PARENT_FECHA
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 95
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 50

    (69) exp_9 -> INT_V .

    MAIS_MAIS       reduce using rule 69 (exp_9 -> INT_V .)
    MENOS_MENOS     reduce using rule 69 (exp_9 -> INT_V .)
    MULT            reduce using rule 69 (exp_9 -> INT_V .)
    DIV             reduce using rule 69 (exp_9 -> INT_V .)
    MODULO          reduce using rule 69 (exp_9 -> INT_V .)
    SOMA            reduce using rule 69 (exp_9 -> INT_V .)
    SUB             reduce using rule 69 (exp_9 -> INT_V .)
    MENOR_Q         reduce using rule 69 (exp_9 -> INT_V .)
    MAIOR_Q         reduce using rule 69 (exp_9 -> INT_V .)
    MAIOR_IGUAL     reduce using rule 69 (exp_9 -> INT_V .)
    MENOR_IGUAL     reduce using rule 69 (exp_9 -> INT_V .)
    IGUAL           reduce using rule 69 (exp_9 -> INT_V .)
    DIFERENTE       reduce using rule 69 (exp_9 -> INT_V .)
    OP_OU_EX        reduce using rule 69 (exp_9 -> INT_V .)
    XOR             reduce using rule 69 (exp_9 -> INT_V .)
    OP_E            reduce using rule 69 (exp_9 -> INT_V .)
    AND             reduce using rule 69 (exp_9 -> INT_V .)
    OP_OU           reduce using rule 69 (exp_9 -> INT_V .)
    OR              reduce using rule 69 (exp_9 -> INT_V .)
    PONTO_VIRG      reduce using rule 69 (exp_9 -> INT_V .)
    RECEBER         reduce using rule 69 (exp_9 -> INT_V .)
    VIRGULA         reduce using rule 69 (exp_9 -> INT_V .)
    PARENT_FECHA    reduce using rule 69 (exp_9 -> INT_V .)


state 51

    (70) exp_9 -> TRUE .

    MAIS_MAIS       reduce using rule 70 (exp_9 -> TRUE .)
    MENOS_MENOS     reduce using rule 70 (exp_9 -> TRUE .)
    MULT            reduce using rule 70 (exp_9 -> TRUE .)
    DIV             reduce using rule 70 (exp_9 -> TRUE .)
    MODULO          reduce using rule 70 (exp_9 -> TRUE .)
    SOMA            reduce using rule 70 (exp_9 -> TRUE .)
    SUB             reduce using rule 70 (exp_9 -> TRUE .)
    MENOR_Q         reduce using rule 70 (exp_9 -> TRUE .)
    MAIOR_Q         reduce using rule 70 (exp_9 -> TRUE .)
    MAIOR_IGUAL     reduce using rule 70 (exp_9 -> TRUE .)
    MENOR_IGUAL     reduce using rule 70 (exp_9 -> TRUE .)
    IGUAL           reduce using rule 70 (exp_9 -> TRUE .)
    DIFERENTE       reduce using rule 70 (exp_9 -> TRUE .)
    OP_OU_EX        reduce using rule 70 (exp_9 -> TRUE .)
    XOR             reduce using rule 70 (exp_9 -> TRUE .)
    OP_E            reduce using rule 70 (exp_9 -> TRUE .)
    AND             reduce using rule 70 (exp_9 -> TRUE .)
    OP_OU           reduce using rule 70 (exp_9 -> TRUE .)
    OR              reduce using rule 70 (exp_9 -> TRUE .)
    PONTO_VIRG      reduce using rule 70 (exp_9 -> TRUE .)
    RECEBER         reduce using rule 70 (exp_9 -> TRUE .)
    VIRGULA         reduce using rule 70 (exp_9 -> TRUE .)
    PARENT_FECHA    reduce using rule 70 (exp_9 -> TRUE .)


state 52

    (71) exp_9 -> FALSE .

    MAIS_MAIS       reduce using rule 71 (exp_9 -> FALSE .)
    MENOS_MENOS     reduce using rule 71 (exp_9 -> FALSE .)
    MULT            reduce using rule 71 (exp_9 -> FALSE .)
    DIV             reduce using rule 71 (exp_9 -> FALSE .)
    MODULO          reduce using rule 71 (exp_9 -> FALSE .)
    SOMA            reduce using rule 71 (exp_9 -> FALSE .)
    SUB             reduce using rule 71 (exp_9 -> FALSE .)
    MENOR_Q         reduce using rule 71 (exp_9 -> FALSE .)
    MAIOR_Q         reduce using rule 71 (exp_9 -> FALSE .)
    MAIOR_IGUAL     reduce using rule 71 (exp_9 -> FALSE .)
    MENOR_IGUAL     reduce using rule 71 (exp_9 -> FALSE .)
    IGUAL           reduce using rule 71 (exp_9 -> FALSE .)
    DIFERENTE       reduce using rule 71 (exp_9 -> FALSE .)
    OP_OU_EX        reduce using rule 71 (exp_9 -> FALSE .)
    XOR             reduce using rule 71 (exp_9 -> FALSE .)
    OP_E            reduce using rule 71 (exp_9 -> FALSE .)
    AND             reduce using rule 71 (exp_9 -> FALSE .)
    OP_OU           reduce using rule 71 (exp_9 -> FALSE .)
    OR              reduce using rule 71 (exp_9 -> FALSE .)
    PONTO_VIRG      reduce using rule 71 (exp_9 -> FALSE .)
    RECEBER         reduce using rule 71 (exp_9 -> FALSE .)
    VIRGULA         reduce using rule 71 (exp_9 -> FALSE .)
    PARENT_FECHA    reduce using rule 71 (exp_9 -> FALSE .)


state 53

    (72) exp_9 -> chamada_funcao .

    MAIS_MAIS       reduce using rule 72 (exp_9 -> chamada_funcao .)
    MENOS_MENOS     reduce using rule 72 (exp_9 -> chamada_funcao .)
    MULT            reduce using rule 72 (exp_9 -> chamada_funcao .)
    DIV             reduce using rule 72 (exp_9 -> chamada_funcao .)
    MODULO          reduce using rule 72 (exp_9 -> chamada_funcao .)
    SOMA            reduce using rule 72 (exp_9 -> chamada_funcao .)
    SUB             reduce using rule 72 (exp_9 -> chamada_funcao .)
    MENOR_Q         reduce using rule 72 (exp_9 -> chamada_funcao .)
    MAIOR_Q         reduce using rule 72 (exp_9 -> chamada_funcao .)
    MAIOR_IGUAL     reduce using rule 72 (exp_9 -> chamada_funcao .)
    MENOR_IGUAL     reduce using rule 72 (exp_9 -> chamada_funcao .)
    IGUAL           reduce using rule 72 (exp_9 -> chamada_funcao .)
    DIFERENTE       reduce using rule 72 (exp_9 -> chamada_funcao .)
    OP_OU_EX        reduce using rule 72 (exp_9 -> chamada_funcao .)
    XOR             reduce using rule 72 (exp_9 -> chamada_funcao .)
    OP_E            reduce using rule 72 (exp_9 -> chamada_funcao .)
    AND             reduce using rule 72 (exp_9 -> chamada_funcao .)
    OP_OU           reduce using rule 72 (exp_9 -> chamada_funcao .)
    OR              reduce using rule 72 (exp_9 -> chamada_funcao .)
    PONTO_VIRG      reduce using rule 72 (exp_9 -> chamada_funcao .)
    RECEBER         reduce using rule 72 (exp_9 -> chamada_funcao .)
    VIRGULA         reduce using rule 72 (exp_9 -> chamada_funcao .)
    PARENT_FECHA    reduce using rule 72 (exp_9 -> chamada_funcao .)


state 54

    (73) exp_9 -> STRING_V .

    MAIS_MAIS       reduce using rule 73 (exp_9 -> STRING_V .)
    MENOS_MENOS     reduce using rule 73 (exp_9 -> STRING_V .)
    MULT            reduce using rule 73 (exp_9 -> STRING_V .)
    DIV             reduce using rule 73 (exp_9 -> STRING_V .)
    MODULO          reduce using rule 73 (exp_9 -> STRING_V .)
    SOMA            reduce using rule 73 (exp_9 -> STRING_V .)
    SUB             reduce using rule 73 (exp_9 -> STRING_V .)
    MENOR_Q         reduce using rule 73 (exp_9 -> STRING_V .)
    MAIOR_Q         reduce using rule 73 (exp_9 -> STRING_V .)
    MAIOR_IGUAL     reduce using rule 73 (exp_9 -> STRING_V .)
    MENOR_IGUAL     reduce using rule 73 (exp_9 -> STRING_V .)
    IGUAL           reduce using rule 73 (exp_9 -> STRING_V .)
    DIFERENTE       reduce using rule 73 (exp_9 -> STRING_V .)
    OP_OU_EX        reduce using rule 73 (exp_9 -> STRING_V .)
    XOR             reduce using rule 73 (exp_9 -> STRING_V .)
    OP_E            reduce using rule 73 (exp_9 -> STRING_V .)
    AND             reduce using rule 73 (exp_9 -> STRING_V .)
    OP_OU           reduce using rule 73 (exp_9 -> STRING_V .)
    OR              reduce using rule 73 (exp_9 -> STRING_V .)
    PONTO_VIRG      reduce using rule 73 (exp_9 -> STRING_V .)
    RECEBER         reduce using rule 73 (exp_9 -> STRING_V .)
    VIRGULA         reduce using rule 73 (exp_9 -> STRING_V .)
    PARENT_FECHA    reduce using rule 73 (exp_9 -> STRING_V .)


state 55

    (77) chamada_funcao -> TYPEID . PARENT_ABRE exp PARENT_FECHA

    PARENT_ABRE     shift and go to state 96


state 56

    (23) decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .

    CLASS           reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    VOID            reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    TYPEDEF         reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    INT             reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    BOOL            reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    ID              reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    STRING          reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    $end            reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    CHAVE_FECHA     reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    IF              reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    WHILE           reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    FOR             reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    RETURN          reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    OP_NOT          reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    NOT             reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    SIZEOF          reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    INT_V           reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    TRUE            reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    FALSE           reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    STRING_V        reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    PARENT_ABRE     reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    TYPEID          reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    PONTO_VIRG      reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)
    ELSE            reduce using rule 23 (decl_variavel -> tipo ID decl_variavel_n PONTO_VIRG .)


state 57

    (27) decl_variavel_n -> VIRGULA ID . decl_variavel_n
    (28) decl_variavel_n -> VIRGULA ID . RECEBER exp decl_variavel_n
    (29) decl_variavel_n -> VIRGULA ID .
    (27) decl_variavel_n -> . VIRGULA ID decl_variavel_n
    (28) decl_variavel_n -> . VIRGULA ID RECEBER exp decl_variavel_n
    (29) decl_variavel_n -> . VIRGULA ID

    RECEBER         shift and go to state 98
    PONTO_VIRG      reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    CLASS           reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    VOID            reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    TYPEDEF         reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    INT             reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    BOOL            reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    ID              reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    STRING          reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    $end            reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    CHAVE_FECHA     reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    IF              reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    WHILE           reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    FOR             reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    RETURN          reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    OP_NOT          reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    NOT             reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    SIZEOF          reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    INT_V           reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    TRUE            reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    FALSE           reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    STRING_V        reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    PARENT_ABRE     reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    TYPEID          reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    ELSE            reduce using rule 29 (decl_variavel_n -> VIRGULA ID .)
    VIRGULA         shift and go to state 26

    decl_variavel_n                shift and go to state 97

state 58

    (18) decl_funcao -> VOID ID PARENT_ABRE VOID . PARENT_FECHA body

    PARENT_FECHA    shift and go to state 99


state 59

    (16) decl_funcao -> VOID ID PARENT_ABRE parametros . PARENT_FECHA body

    PARENT_FECHA    shift and go to state 100


state 60

    (17) decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA . body
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA

    CHAVE_ABRE      shift and go to state 67

    body                           shift and go to state 101

state 61

    (25) decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .

    CLASS           reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    VOID            reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    TYPEDEF         reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    INT             reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    BOOL            reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    ID              reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    STRING          reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    $end            reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    CHAVE_FECHA     reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    IF              reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    WHILE           reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    FOR             reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    RETURN          reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    OP_NOT          reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    NOT             reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    SIZEOF          reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    INT_V           reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    TRUE            reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    FALSE           reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    STRING_V        reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    PARENT_ABRE     reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    TYPEID          reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    PONTO_VIRG      reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)
    ELSE            reduce using rule 25 (decl_variavel -> TYPEDEF tipo ID PONTO_VIRG .)


state 62

    (26) decl_variavel -> TYPEDEF tipo ID decl_variavel_n .

    CLASS           reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    VOID            reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    TYPEDEF         reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    INT             reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    BOOL            reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    ID              reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    STRING          reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    $end            reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    CHAVE_FECHA     reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    IF              reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    WHILE           reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    FOR             reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    RETURN          reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    OP_NOT          reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    NOT             reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    SIZEOF          reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    INT_V           reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    TRUE            reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    FALSE           reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    STRING_V        reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    PARENT_ABRE     reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    TYPEID          reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    PONTO_VIRG      reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)
    ELSE            reduce using rule 26 (decl_variavel -> TYPEDEF tipo ID decl_variavel_n .)


state 63

    (8) body_class -> CHAVE_ABRE PUBLIC DOIS_PONTOS . content_class CHAVE_FECHA
    (9) content_class -> . decl_variavel content_class
    (10) content_class -> . decl_funcao content_class
    (11) content_class -> . decl_variavel
    (12) content_class -> . decl_funcao
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (13) decl_funcao -> . tipo ID PARENT_ABRE parametros PARENT_FECHA body
    (14) decl_funcao -> . tipo ID PARENT_ABRE PARENT_FECHA body
    (15) decl_funcao -> . tipo ID PARENT_ABRE VOID PARENT_FECHA body
    (16) decl_funcao -> . VOID ID PARENT_ABRE parametros PARENT_FECHA body
    (17) decl_funcao -> . VOID ID PARENT_ABRE PARENT_FECHA body
    (18) decl_funcao -> . VOID ID PARENT_ABRE VOID PARENT_FECHA body
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    TYPEDEF         shift and go to state 9
    VOID            shift and go to state 8
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    content_class                  shift and go to state 102
    decl_variavel                  shift and go to state 103
    decl_funcao                    shift and go to state 104
    tipo                           shift and go to state 105

state 64

    (19) parametros -> tipo ID .
    (20) parametros -> tipo ID . VIRGULA parametros

    PARENT_FECHA    reduce using rule 19 (parametros -> tipo ID .)
    VIRGULA         shift and go to state 106


state 65

    (13) decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA . body
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA

    CHAVE_ABRE      shift and go to state 67

    body                           shift and go to state 107

state 66

    (14) decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body .

    CLASS           reduce using rule 14 (decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body .)
    VOID            reduce using rule 14 (decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body .)
    TYPEDEF         reduce using rule 14 (decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body .)
    INT             reduce using rule 14 (decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body .)
    BOOL            reduce using rule 14 (decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body .)
    ID              reduce using rule 14 (decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body .)
    STRING          reduce using rule 14 (decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body .)
    $end            reduce using rule 14 (decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body .)
    CHAVE_FECHA     reduce using rule 14 (decl_funcao -> tipo ID PARENT_ABRE PARENT_FECHA body .)


state 67

    (30) body -> CHAVE_ABRE . comandos CHAVE_FECHA
    (31) body -> CHAVE_ABRE . CHAVE_FECHA
    (32) comandos -> . comando
    (33) comandos -> . comando comandos
    (34) comando -> . condicional_1
    (35) comando -> . condicional_2
    (78) condicional_1 -> . IF PARENT_ABRE exp PARENT_FECHA rest_if
    (79) condicional_1 -> . exp PONTO_VIRG
    (80) condicional_1 -> . decl_variavel
    (81) condicional_1 -> . WHILE PARENT_ABRE exp PARENT_FECHA body
    (82) condicional_1 -> . FOR PARENT_ABRE for_log PARENT_FECHA body
    (83) condicional_1 -> . RETURN exp PONTO_VIRG
    (84) condicional_1 -> . RETURN PONTO_VIRG
    (85) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA body
    (86) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA comando
    (87) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    CHAVE_FECHA     shift and go to state 109
    IF              shift and go to state 113
    WHILE           shift and go to state 116
    FOR             shift and go to state 117
    RETURN          shift and go to state 118
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 120
    STRING          shift and go to state 12
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    comandos                       shift and go to state 108
    comando                        shift and go to state 110
    condicional_1                  shift and go to state 111
    condicional_2                  shift and go to state 112
    exp                            shift and go to state 114
    decl_variavel                  shift and go to state 115
    exp_1                          shift and go to state 37
    tipo                           shift and go to state 119
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 68

    (15) decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA . body
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA

    CHAVE_ABRE      shift and go to state 67

    body                           shift and go to state 121

state 69

    (75) chamada_funcao -> ID PARENT_ABRE . parametros PARENT_FECHA
    (76) chamada_funcao -> ID PARENT_ABRE . PARENT_FECHA
    (19) parametros -> . tipo ID
    (20) parametros -> . tipo ID VIRGULA parametros
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    PARENT_FECHA    shift and go to state 123
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    parametros                     shift and go to state 122
    tipo                           shift and go to state 31

state 70

    (36) exp -> exp RECEBER . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_1                          shift and go to state 124
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 71

    (22) decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .

    CLASS           reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    VOID            reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    TYPEDEF         reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    INT             reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    BOOL            reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    ID              reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    STRING          reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    $end            reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    CHAVE_FECHA     reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    IF              reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    WHILE           reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    FOR             reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    RETURN          reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    OP_NOT          reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    NOT             reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    SIZEOF          reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    INT_V           reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    TRUE            reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    FALSE           reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    STRING_V        reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    PARENT_ABRE     reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    TYPEID          reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    PONTO_VIRG      reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)
    ELSE            reduce using rule 22 (decl_variavel -> tipo ID RECEBER exp PONTO_VIRG .)


state 72

    (24) decl_variavel -> tipo ID RECEBER exp decl_variavel_n . PONTO_VIRG

    PONTO_VIRG      shift and go to state 125


state 73

    (38) exp_1 -> exp_1 OP_OU . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_2                          shift and go to state 126
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 74

    (39) exp_1 -> exp_1 OR . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_2                          shift and go to state 127
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 75

    (41) exp_2 -> exp_2 OP_E . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_3                          shift and go to state 128
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 76

    (42) exp_2 -> exp_2 AND . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_3                          shift and go to state 129
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 77

    (44) exp_3 -> exp_3 OP_OU_EX . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_4                          shift and go to state 130
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 78

    (45) exp_3 -> exp_3 XOR . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_4                          shift and go to state 131
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 79

    (47) exp_4 -> exp_4 IGUAL . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_5                          shift and go to state 132
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 80

    (48) exp_4 -> exp_4 DIFERENTE . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_5                          shift and go to state 133
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 81

    (50) exp_5 -> exp_5 MENOR_Q . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_6                          shift and go to state 134
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 82

    (51) exp_5 -> exp_5 MAIOR_Q . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_6                          shift and go to state 135
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 83

    (52) exp_5 -> exp_5 MAIOR_IGUAL . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_6                          shift and go to state 136
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 84

    (53) exp_5 -> exp_5 MENOR_IGUAL . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_6                          shift and go to state 137
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 85

    (55) exp_6 -> exp_6 SOMA . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_7                          shift and go to state 138
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 86

    (56) exp_6 -> exp_6 SUB . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_7                          shift and go to state 139
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 87

    (58) exp_7 -> exp_7 MULT . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_8                          shift and go to state 140
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 88

    (59) exp_7 -> exp_7 DIV . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_8                          shift and go to state 141
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 89

    (60) exp_7 -> exp_7 MODULO . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_8                          shift and go to state 142
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 90

    (62) exp_8 -> OP_NOT exp_9 .

    MULT            reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    DIV             reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    MODULO          reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    SOMA            reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    SUB             reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    MENOR_Q         reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    MAIOR_Q         reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    MAIOR_IGUAL     reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    MENOR_IGUAL     reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    IGUAL           reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    DIFERENTE       reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    OP_OU_EX        reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    XOR             reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    OP_E            reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    AND             reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    OP_OU           reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    OR              reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    PONTO_VIRG      reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    RECEBER         reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    VIRGULA         reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)
    PARENT_FECHA    reduce using rule 62 (exp_8 -> OP_NOT exp_9 .)


state 91

    (64) exp_8 -> exp_9 MAIS_MAIS .

    MULT            reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    DIV             reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    MODULO          reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    SOMA            reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    SUB             reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    MENOR_Q         reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    MAIOR_Q         reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    MAIOR_IGUAL     reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    MENOR_IGUAL     reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    IGUAL           reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    DIFERENTE       reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    OP_OU_EX        reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    XOR             reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    OP_E            reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    AND             reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    OP_OU           reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    OR              reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    PONTO_VIRG      reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    RECEBER         reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    VIRGULA         reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)
    PARENT_FECHA    reduce using rule 64 (exp_8 -> exp_9 MAIS_MAIS .)


state 92

    (65) exp_8 -> exp_9 MENOS_MENOS .

    MULT            reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    DIV             reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    MODULO          reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    SOMA            reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    SUB             reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    MENOR_Q         reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    MAIOR_Q         reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    MAIOR_IGUAL     reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    MENOR_IGUAL     reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    IGUAL           reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    DIFERENTE       reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    OP_OU_EX        reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    XOR             reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    OP_E            reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    AND             reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    OP_OU           reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    OR              reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    PONTO_VIRG      reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    RECEBER         reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    VIRGULA         reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)
    PARENT_FECHA    reduce using rule 65 (exp_8 -> exp_9 MENOS_MENOS .)


state 93

    (63) exp_8 -> NOT exp_9 .

    MULT            reduce using rule 63 (exp_8 -> NOT exp_9 .)
    DIV             reduce using rule 63 (exp_8 -> NOT exp_9 .)
    MODULO          reduce using rule 63 (exp_8 -> NOT exp_9 .)
    SOMA            reduce using rule 63 (exp_8 -> NOT exp_9 .)
    SUB             reduce using rule 63 (exp_8 -> NOT exp_9 .)
    MENOR_Q         reduce using rule 63 (exp_8 -> NOT exp_9 .)
    MAIOR_Q         reduce using rule 63 (exp_8 -> NOT exp_9 .)
    MAIOR_IGUAL     reduce using rule 63 (exp_8 -> NOT exp_9 .)
    MENOR_IGUAL     reduce using rule 63 (exp_8 -> NOT exp_9 .)
    IGUAL           reduce using rule 63 (exp_8 -> NOT exp_9 .)
    DIFERENTE       reduce using rule 63 (exp_8 -> NOT exp_9 .)
    OP_OU_EX        reduce using rule 63 (exp_8 -> NOT exp_9 .)
    XOR             reduce using rule 63 (exp_8 -> NOT exp_9 .)
    OP_E            reduce using rule 63 (exp_8 -> NOT exp_9 .)
    AND             reduce using rule 63 (exp_8 -> NOT exp_9 .)
    OP_OU           reduce using rule 63 (exp_8 -> NOT exp_9 .)
    OR              reduce using rule 63 (exp_8 -> NOT exp_9 .)
    PONTO_VIRG      reduce using rule 63 (exp_8 -> NOT exp_9 .)
    RECEBER         reduce using rule 63 (exp_8 -> NOT exp_9 .)
    VIRGULA         reduce using rule 63 (exp_8 -> NOT exp_9 .)
    PARENT_FECHA    reduce using rule 63 (exp_8 -> NOT exp_9 .)


state 94

    (66) exp_8 -> SIZEOF PARENT_ABRE . exp_9 PARENT_FECHA
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp_9                          shift and go to state 143
    chamada_funcao                 shift and go to state 53

state 95

    (74) exp_9 -> PARENT_ABRE exp . PARENT_FECHA
    (36) exp -> exp . RECEBER exp_1

    PARENT_FECHA    shift and go to state 144
    RECEBER         shift and go to state 70


state 96

    (77) chamada_funcao -> TYPEID PARENT_ABRE . exp PARENT_FECHA
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 145
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 97

    (27) decl_variavel_n -> VIRGULA ID decl_variavel_n .

    PONTO_VIRG      reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    CLASS           reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    VOID            reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    TYPEDEF         reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    INT             reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    BOOL            reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    ID              reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    STRING          reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    $end            reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    CHAVE_FECHA     reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    IF              reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    WHILE           reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    FOR             reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    RETURN          reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    OP_NOT          reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    NOT             reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    SIZEOF          reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    INT_V           reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    TRUE            reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    FALSE           reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    STRING_V        reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    PARENT_ABRE     reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    TYPEID          reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)
    ELSE            reduce using rule 27 (decl_variavel_n -> VIRGULA ID decl_variavel_n .)


state 98

    (28) decl_variavel_n -> VIRGULA ID RECEBER . exp decl_variavel_n
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 146
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 99

    (18) decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA . body
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA

    CHAVE_ABRE      shift and go to state 67

    body                           shift and go to state 147

state 100

    (16) decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA . body
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA

    CHAVE_ABRE      shift and go to state 67

    body                           shift and go to state 148

state 101

    (17) decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body .

    CLASS           reduce using rule 17 (decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body .)
    VOID            reduce using rule 17 (decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body .)
    TYPEDEF         reduce using rule 17 (decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body .)
    INT             reduce using rule 17 (decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body .)
    BOOL            reduce using rule 17 (decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body .)
    ID              reduce using rule 17 (decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body .)
    STRING          reduce using rule 17 (decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body .)
    $end            reduce using rule 17 (decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body .)
    CHAVE_FECHA     reduce using rule 17 (decl_funcao -> VOID ID PARENT_ABRE PARENT_FECHA body .)


state 102

    (8) body_class -> CHAVE_ABRE PUBLIC DOIS_PONTOS content_class . CHAVE_FECHA

    CHAVE_FECHA     shift and go to state 149


state 103

    (9) content_class -> decl_variavel . content_class
    (11) content_class -> decl_variavel .
    (9) content_class -> . decl_variavel content_class
    (10) content_class -> . decl_funcao content_class
    (11) content_class -> . decl_variavel
    (12) content_class -> . decl_funcao
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (13) decl_funcao -> . tipo ID PARENT_ABRE parametros PARENT_FECHA body
    (14) decl_funcao -> . tipo ID PARENT_ABRE PARENT_FECHA body
    (15) decl_funcao -> . tipo ID PARENT_ABRE VOID PARENT_FECHA body
    (16) decl_funcao -> . VOID ID PARENT_ABRE parametros PARENT_FECHA body
    (17) decl_funcao -> . VOID ID PARENT_ABRE PARENT_FECHA body
    (18) decl_funcao -> . VOID ID PARENT_ABRE VOID PARENT_FECHA body
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    CHAVE_FECHA     reduce using rule 11 (content_class -> decl_variavel .)
    TYPEDEF         shift and go to state 9
    VOID            shift and go to state 8
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    decl_variavel                  shift and go to state 103
    content_class                  shift and go to state 150
    decl_funcao                    shift and go to state 104
    tipo                           shift and go to state 105

state 104

    (10) content_class -> decl_funcao . content_class
    (12) content_class -> decl_funcao .
    (9) content_class -> . decl_variavel content_class
    (10) content_class -> . decl_funcao content_class
    (11) content_class -> . decl_variavel
    (12) content_class -> . decl_funcao
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (13) decl_funcao -> . tipo ID PARENT_ABRE parametros PARENT_FECHA body
    (14) decl_funcao -> . tipo ID PARENT_ABRE PARENT_FECHA body
    (15) decl_funcao -> . tipo ID PARENT_ABRE VOID PARENT_FECHA body
    (16) decl_funcao -> . VOID ID PARENT_ABRE parametros PARENT_FECHA body
    (17) decl_funcao -> . VOID ID PARENT_ABRE PARENT_FECHA body
    (18) decl_funcao -> . VOID ID PARENT_ABRE VOID PARENT_FECHA body
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    CHAVE_FECHA     reduce using rule 12 (content_class -> decl_funcao .)
    TYPEDEF         shift and go to state 9
    VOID            shift and go to state 8
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    decl_funcao                    shift and go to state 104
    content_class                  shift and go to state 151
    decl_variavel                  shift and go to state 103
    tipo                           shift and go to state 105

state 105

    (21) decl_variavel -> tipo . ID PONTO_VIRG
    (22) decl_variavel -> tipo . ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> tipo . ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> tipo . ID RECEBER exp decl_variavel_n PONTO_VIRG
    (13) decl_funcao -> tipo . ID PARENT_ABRE parametros PARENT_FECHA body
    (14) decl_funcao -> tipo . ID PARENT_ABRE PARENT_FECHA body
    (15) decl_funcao -> tipo . ID PARENT_ABRE VOID PARENT_FECHA body

    ID              shift and go to state 152


state 106

    (20) parametros -> tipo ID VIRGULA . parametros
    (19) parametros -> . tipo ID
    (20) parametros -> . tipo ID VIRGULA parametros
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    tipo                           shift and go to state 31
    parametros                     shift and go to state 153

state 107

    (13) decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body .

    CLASS           reduce using rule 13 (decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body .)
    VOID            reduce using rule 13 (decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body .)
    TYPEDEF         reduce using rule 13 (decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body .)
    INT             reduce using rule 13 (decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body .)
    BOOL            reduce using rule 13 (decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body .)
    ID              reduce using rule 13 (decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body .)
    STRING          reduce using rule 13 (decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body .)
    $end            reduce using rule 13 (decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body .)
    CHAVE_FECHA     reduce using rule 13 (decl_funcao -> tipo ID PARENT_ABRE parametros PARENT_FECHA body .)


state 108

    (30) body -> CHAVE_ABRE comandos . CHAVE_FECHA

    CHAVE_FECHA     shift and go to state 154


state 109

    (31) body -> CHAVE_ABRE CHAVE_FECHA .

    CLASS           reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    VOID            reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    TYPEDEF         reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    INT             reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    BOOL            reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    ID              reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    STRING          reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    $end            reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    CHAVE_FECHA     reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    ELSE            reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    IF              reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    WHILE           reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    FOR             reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    RETURN          reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    OP_NOT          reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    NOT             reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    SIZEOF          reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    INT_V           reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    TRUE            reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    FALSE           reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    STRING_V        reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    PARENT_ABRE     reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)
    TYPEID          reduce using rule 31 (body -> CHAVE_ABRE CHAVE_FECHA .)


state 110

    (32) comandos -> comando .
    (33) comandos -> comando . comandos
    (32) comandos -> . comando
    (33) comandos -> . comando comandos
    (34) comando -> . condicional_1
    (35) comando -> . condicional_2
    (78) condicional_1 -> . IF PARENT_ABRE exp PARENT_FECHA rest_if
    (79) condicional_1 -> . exp PONTO_VIRG
    (80) condicional_1 -> . decl_variavel
    (81) condicional_1 -> . WHILE PARENT_ABRE exp PARENT_FECHA body
    (82) condicional_1 -> . FOR PARENT_ABRE for_log PARENT_FECHA body
    (83) condicional_1 -> . RETURN exp PONTO_VIRG
    (84) condicional_1 -> . RETURN PONTO_VIRG
    (85) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA body
    (86) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA comando
    (87) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    CHAVE_FECHA     reduce using rule 32 (comandos -> comando .)
    IF              shift and go to state 113
    WHILE           shift and go to state 116
    FOR             shift and go to state 117
    RETURN          shift and go to state 118
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 120
    STRING          shift and go to state 12
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    comando                        shift and go to state 110
    comandos                       shift and go to state 155
    condicional_1                  shift and go to state 111
    condicional_2                  shift and go to state 112
    exp                            shift and go to state 114
    decl_variavel                  shift and go to state 115
    exp_1                          shift and go to state 37
    tipo                           shift and go to state 119
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 111

    (34) comando -> condicional_1 .

    IF              reduce using rule 34 (comando -> condicional_1 .)
    WHILE           reduce using rule 34 (comando -> condicional_1 .)
    FOR             reduce using rule 34 (comando -> condicional_1 .)
    RETURN          reduce using rule 34 (comando -> condicional_1 .)
    TYPEDEF         reduce using rule 34 (comando -> condicional_1 .)
    INT             reduce using rule 34 (comando -> condicional_1 .)
    BOOL            reduce using rule 34 (comando -> condicional_1 .)
    ID              reduce using rule 34 (comando -> condicional_1 .)
    STRING          reduce using rule 34 (comando -> condicional_1 .)
    OP_NOT          reduce using rule 34 (comando -> condicional_1 .)
    NOT             reduce using rule 34 (comando -> condicional_1 .)
    SIZEOF          reduce using rule 34 (comando -> condicional_1 .)
    INT_V           reduce using rule 34 (comando -> condicional_1 .)
    TRUE            reduce using rule 34 (comando -> condicional_1 .)
    FALSE           reduce using rule 34 (comando -> condicional_1 .)
    STRING_V        reduce using rule 34 (comando -> condicional_1 .)
    PARENT_ABRE     reduce using rule 34 (comando -> condicional_1 .)
    TYPEID          reduce using rule 34 (comando -> condicional_1 .)
    CHAVE_FECHA     reduce using rule 34 (comando -> condicional_1 .)


state 112

    (35) comando -> condicional_2 .

    IF              reduce using rule 35 (comando -> condicional_2 .)
    WHILE           reduce using rule 35 (comando -> condicional_2 .)
    FOR             reduce using rule 35 (comando -> condicional_2 .)
    RETURN          reduce using rule 35 (comando -> condicional_2 .)
    TYPEDEF         reduce using rule 35 (comando -> condicional_2 .)
    INT             reduce using rule 35 (comando -> condicional_2 .)
    BOOL            reduce using rule 35 (comando -> condicional_2 .)
    ID              reduce using rule 35 (comando -> condicional_2 .)
    STRING          reduce using rule 35 (comando -> condicional_2 .)
    OP_NOT          reduce using rule 35 (comando -> condicional_2 .)
    NOT             reduce using rule 35 (comando -> condicional_2 .)
    SIZEOF          reduce using rule 35 (comando -> condicional_2 .)
    INT_V           reduce using rule 35 (comando -> condicional_2 .)
    TRUE            reduce using rule 35 (comando -> condicional_2 .)
    FALSE           reduce using rule 35 (comando -> condicional_2 .)
    STRING_V        reduce using rule 35 (comando -> condicional_2 .)
    PARENT_ABRE     reduce using rule 35 (comando -> condicional_2 .)
    TYPEID          reduce using rule 35 (comando -> condicional_2 .)
    CHAVE_FECHA     reduce using rule 35 (comando -> condicional_2 .)


state 113

    (78) condicional_1 -> IF . PARENT_ABRE exp PARENT_FECHA rest_if
    (85) condicional_2 -> IF . PARENT_ABRE exp PARENT_FECHA body
    (86) condicional_2 -> IF . PARENT_ABRE exp PARENT_FECHA comando
    (87) condicional_2 -> IF . PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2

    PARENT_ABRE     shift and go to state 156


state 114

    (79) condicional_1 -> exp . PONTO_VIRG
    (36) exp -> exp . RECEBER exp_1

    PONTO_VIRG      shift and go to state 157
    RECEBER         shift and go to state 70


state 115

    (80) condicional_1 -> decl_variavel .

    IF              reduce using rule 80 (condicional_1 -> decl_variavel .)
    WHILE           reduce using rule 80 (condicional_1 -> decl_variavel .)
    FOR             reduce using rule 80 (condicional_1 -> decl_variavel .)
    RETURN          reduce using rule 80 (condicional_1 -> decl_variavel .)
    TYPEDEF         reduce using rule 80 (condicional_1 -> decl_variavel .)
    INT             reduce using rule 80 (condicional_1 -> decl_variavel .)
    BOOL            reduce using rule 80 (condicional_1 -> decl_variavel .)
    ID              reduce using rule 80 (condicional_1 -> decl_variavel .)
    STRING          reduce using rule 80 (condicional_1 -> decl_variavel .)
    OP_NOT          reduce using rule 80 (condicional_1 -> decl_variavel .)
    NOT             reduce using rule 80 (condicional_1 -> decl_variavel .)
    SIZEOF          reduce using rule 80 (condicional_1 -> decl_variavel .)
    INT_V           reduce using rule 80 (condicional_1 -> decl_variavel .)
    TRUE            reduce using rule 80 (condicional_1 -> decl_variavel .)
    FALSE           reduce using rule 80 (condicional_1 -> decl_variavel .)
    STRING_V        reduce using rule 80 (condicional_1 -> decl_variavel .)
    PARENT_ABRE     reduce using rule 80 (condicional_1 -> decl_variavel .)
    TYPEID          reduce using rule 80 (condicional_1 -> decl_variavel .)
    CHAVE_FECHA     reduce using rule 80 (condicional_1 -> decl_variavel .)
    ELSE            reduce using rule 80 (condicional_1 -> decl_variavel .)


state 116

    (81) condicional_1 -> WHILE . PARENT_ABRE exp PARENT_FECHA body

    PARENT_ABRE     shift and go to state 158


state 117

    (82) condicional_1 -> FOR . PARENT_ABRE for_log PARENT_FECHA body

    PARENT_ABRE     shift and go to state 159


state 118

    (83) condicional_1 -> RETURN . exp PONTO_VIRG
    (84) condicional_1 -> RETURN . PONTO_VIRG
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    PONTO_VIRG      shift and go to state 161
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 160
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 119

    (21) decl_variavel -> tipo . ID PONTO_VIRG
    (22) decl_variavel -> tipo . ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> tipo . ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> tipo . ID RECEBER exp decl_variavel_n PONTO_VIRG

    ID              shift and go to state 162


state 120

    (102) tipo -> ID .
    (68) exp_9 -> ID .
    (75) chamada_funcao -> ID . PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> ID . PARENT_ABRE PARENT_FECHA

    ID              reduce using rule 102 (tipo -> ID .)
    MAIS_MAIS       reduce using rule 68 (exp_9 -> ID .)
    MENOS_MENOS     reduce using rule 68 (exp_9 -> ID .)
    MULT            reduce using rule 68 (exp_9 -> ID .)
    DIV             reduce using rule 68 (exp_9 -> ID .)
    MODULO          reduce using rule 68 (exp_9 -> ID .)
    SOMA            reduce using rule 68 (exp_9 -> ID .)
    SUB             reduce using rule 68 (exp_9 -> ID .)
    MENOR_Q         reduce using rule 68 (exp_9 -> ID .)
    MAIOR_Q         reduce using rule 68 (exp_9 -> ID .)
    MAIOR_IGUAL     reduce using rule 68 (exp_9 -> ID .)
    MENOR_IGUAL     reduce using rule 68 (exp_9 -> ID .)
    IGUAL           reduce using rule 68 (exp_9 -> ID .)
    DIFERENTE       reduce using rule 68 (exp_9 -> ID .)
    OP_OU_EX        reduce using rule 68 (exp_9 -> ID .)
    XOR             reduce using rule 68 (exp_9 -> ID .)
    OP_E            reduce using rule 68 (exp_9 -> ID .)
    AND             reduce using rule 68 (exp_9 -> ID .)
    OP_OU           reduce using rule 68 (exp_9 -> ID .)
    OR              reduce using rule 68 (exp_9 -> ID .)
    PONTO_VIRG      reduce using rule 68 (exp_9 -> ID .)
    RECEBER         reduce using rule 68 (exp_9 -> ID .)
    PARENT_ABRE     shift and go to state 69


state 121

    (15) decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body .

    CLASS           reduce using rule 15 (decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body .)
    VOID            reduce using rule 15 (decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body .)
    TYPEDEF         reduce using rule 15 (decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body .)
    INT             reduce using rule 15 (decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body .)
    BOOL            reduce using rule 15 (decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body .)
    ID              reduce using rule 15 (decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body .)
    STRING          reduce using rule 15 (decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body .)
    $end            reduce using rule 15 (decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body .)
    CHAVE_FECHA     reduce using rule 15 (decl_funcao -> tipo ID PARENT_ABRE VOID PARENT_FECHA body .)


state 122

    (75) chamada_funcao -> ID PARENT_ABRE parametros . PARENT_FECHA

    PARENT_FECHA    shift and go to state 163


state 123

    (76) chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .

    MAIS_MAIS       reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    MENOS_MENOS     reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    MULT            reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    DIV             reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    MODULO          reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    SOMA            reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    SUB             reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    MENOR_Q         reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    MAIOR_Q         reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    MAIOR_IGUAL     reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    MENOR_IGUAL     reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    IGUAL           reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    DIFERENTE       reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    OP_OU_EX        reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    XOR             reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    OP_E            reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    AND             reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    OP_OU           reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    OR              reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    PONTO_VIRG      reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    RECEBER         reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    VIRGULA         reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)
    PARENT_FECHA    reduce using rule 76 (chamada_funcao -> ID PARENT_ABRE PARENT_FECHA .)


state 124

    (36) exp -> exp RECEBER exp_1 .
    (38) exp_1 -> exp_1 . OP_OU exp_2
    (39) exp_1 -> exp_1 . OR exp_2

    PONTO_VIRG      reduce using rule 36 (exp -> exp RECEBER exp_1 .)
    RECEBER         reduce using rule 36 (exp -> exp RECEBER exp_1 .)
    VIRGULA         reduce using rule 36 (exp -> exp RECEBER exp_1 .)
    PARENT_FECHA    reduce using rule 36 (exp -> exp RECEBER exp_1 .)
    OP_OU           shift and go to state 73
    OR              shift and go to state 74


state 125

    (24) decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .

    CLASS           reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    VOID            reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    TYPEDEF         reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    INT             reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    BOOL            reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    ID              reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    STRING          reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    $end            reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    CHAVE_FECHA     reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    IF              reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    WHILE           reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    FOR             reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    RETURN          reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    OP_NOT          reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    NOT             reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    SIZEOF          reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    INT_V           reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    TRUE            reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    FALSE           reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    STRING_V        reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    PARENT_ABRE     reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    TYPEID          reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    PONTO_VIRG      reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)
    ELSE            reduce using rule 24 (decl_variavel -> tipo ID RECEBER exp decl_variavel_n PONTO_VIRG .)


state 126

    (38) exp_1 -> exp_1 OP_OU exp_2 .
    (41) exp_2 -> exp_2 . OP_E exp_3
    (42) exp_2 -> exp_2 . AND exp_3

    OP_OU           reduce using rule 38 (exp_1 -> exp_1 OP_OU exp_2 .)
    OR              reduce using rule 38 (exp_1 -> exp_1 OP_OU exp_2 .)
    PONTO_VIRG      reduce using rule 38 (exp_1 -> exp_1 OP_OU exp_2 .)
    RECEBER         reduce using rule 38 (exp_1 -> exp_1 OP_OU exp_2 .)
    VIRGULA         reduce using rule 38 (exp_1 -> exp_1 OP_OU exp_2 .)
    PARENT_FECHA    reduce using rule 38 (exp_1 -> exp_1 OP_OU exp_2 .)
    OP_E            shift and go to state 75
    AND             shift and go to state 76


state 127

    (39) exp_1 -> exp_1 OR exp_2 .
    (41) exp_2 -> exp_2 . OP_E exp_3
    (42) exp_2 -> exp_2 . AND exp_3

    OP_OU           reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    OR              reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    PONTO_VIRG      reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    RECEBER         reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    VIRGULA         reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    PARENT_FECHA    reduce using rule 39 (exp_1 -> exp_1 OR exp_2 .)
    OP_E            shift and go to state 75
    AND             shift and go to state 76


state 128

    (41) exp_2 -> exp_2 OP_E exp_3 .
    (44) exp_3 -> exp_3 . OP_OU_EX exp_4
    (45) exp_3 -> exp_3 . XOR exp_4

    OP_E            reduce using rule 41 (exp_2 -> exp_2 OP_E exp_3 .)
    AND             reduce using rule 41 (exp_2 -> exp_2 OP_E exp_3 .)
    OP_OU           reduce using rule 41 (exp_2 -> exp_2 OP_E exp_3 .)
    OR              reduce using rule 41 (exp_2 -> exp_2 OP_E exp_3 .)
    PONTO_VIRG      reduce using rule 41 (exp_2 -> exp_2 OP_E exp_3 .)
    RECEBER         reduce using rule 41 (exp_2 -> exp_2 OP_E exp_3 .)
    VIRGULA         reduce using rule 41 (exp_2 -> exp_2 OP_E exp_3 .)
    PARENT_FECHA    reduce using rule 41 (exp_2 -> exp_2 OP_E exp_3 .)
    OP_OU_EX        shift and go to state 77
    XOR             shift and go to state 78


state 129

    (42) exp_2 -> exp_2 AND exp_3 .
    (44) exp_3 -> exp_3 . OP_OU_EX exp_4
    (45) exp_3 -> exp_3 . XOR exp_4

    OP_E            reduce using rule 42 (exp_2 -> exp_2 AND exp_3 .)
    AND             reduce using rule 42 (exp_2 -> exp_2 AND exp_3 .)
    OP_OU           reduce using rule 42 (exp_2 -> exp_2 AND exp_3 .)
    OR              reduce using rule 42 (exp_2 -> exp_2 AND exp_3 .)
    PONTO_VIRG      reduce using rule 42 (exp_2 -> exp_2 AND exp_3 .)
    RECEBER         reduce using rule 42 (exp_2 -> exp_2 AND exp_3 .)
    VIRGULA         reduce using rule 42 (exp_2 -> exp_2 AND exp_3 .)
    PARENT_FECHA    reduce using rule 42 (exp_2 -> exp_2 AND exp_3 .)
    OP_OU_EX        shift and go to state 77
    XOR             shift and go to state 78


state 130

    (44) exp_3 -> exp_3 OP_OU_EX exp_4 .
    (47) exp_4 -> exp_4 . IGUAL exp_5
    (48) exp_4 -> exp_4 . DIFERENTE exp_5

    OP_OU_EX        reduce using rule 44 (exp_3 -> exp_3 OP_OU_EX exp_4 .)
    XOR             reduce using rule 44 (exp_3 -> exp_3 OP_OU_EX exp_4 .)
    OP_E            reduce using rule 44 (exp_3 -> exp_3 OP_OU_EX exp_4 .)
    AND             reduce using rule 44 (exp_3 -> exp_3 OP_OU_EX exp_4 .)
    OP_OU           reduce using rule 44 (exp_3 -> exp_3 OP_OU_EX exp_4 .)
    OR              reduce using rule 44 (exp_3 -> exp_3 OP_OU_EX exp_4 .)
    PONTO_VIRG      reduce using rule 44 (exp_3 -> exp_3 OP_OU_EX exp_4 .)
    RECEBER         reduce using rule 44 (exp_3 -> exp_3 OP_OU_EX exp_4 .)
    VIRGULA         reduce using rule 44 (exp_3 -> exp_3 OP_OU_EX exp_4 .)
    PARENT_FECHA    reduce using rule 44 (exp_3 -> exp_3 OP_OU_EX exp_4 .)
    IGUAL           shift and go to state 79
    DIFERENTE       shift and go to state 80


state 131

    (45) exp_3 -> exp_3 XOR exp_4 .
    (47) exp_4 -> exp_4 . IGUAL exp_5
    (48) exp_4 -> exp_4 . DIFERENTE exp_5

    OP_OU_EX        reduce using rule 45 (exp_3 -> exp_3 XOR exp_4 .)
    XOR             reduce using rule 45 (exp_3 -> exp_3 XOR exp_4 .)
    OP_E            reduce using rule 45 (exp_3 -> exp_3 XOR exp_4 .)
    AND             reduce using rule 45 (exp_3 -> exp_3 XOR exp_4 .)
    OP_OU           reduce using rule 45 (exp_3 -> exp_3 XOR exp_4 .)
    OR              reduce using rule 45 (exp_3 -> exp_3 XOR exp_4 .)
    PONTO_VIRG      reduce using rule 45 (exp_3 -> exp_3 XOR exp_4 .)
    RECEBER         reduce using rule 45 (exp_3 -> exp_3 XOR exp_4 .)
    VIRGULA         reduce using rule 45 (exp_3 -> exp_3 XOR exp_4 .)
    PARENT_FECHA    reduce using rule 45 (exp_3 -> exp_3 XOR exp_4 .)
    IGUAL           shift and go to state 79
    DIFERENTE       shift and go to state 80


state 132

    (47) exp_4 -> exp_4 IGUAL exp_5 .
    (50) exp_5 -> exp_5 . MENOR_Q exp_6
    (51) exp_5 -> exp_5 . MAIOR_Q exp_6
    (52) exp_5 -> exp_5 . MAIOR_IGUAL exp_6
    (53) exp_5 -> exp_5 . MENOR_IGUAL exp_6

    IGUAL           reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    DIFERENTE       reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    OP_OU_EX        reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    XOR             reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    OP_E            reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    AND             reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    OP_OU           reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    OR              reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    PONTO_VIRG      reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    RECEBER         reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    VIRGULA         reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    PARENT_FECHA    reduce using rule 47 (exp_4 -> exp_4 IGUAL exp_5 .)
    MENOR_Q         shift and go to state 81
    MAIOR_Q         shift and go to state 82
    MAIOR_IGUAL     shift and go to state 83
    MENOR_IGUAL     shift and go to state 84


state 133

    (48) exp_4 -> exp_4 DIFERENTE exp_5 .
    (50) exp_5 -> exp_5 . MENOR_Q exp_6
    (51) exp_5 -> exp_5 . MAIOR_Q exp_6
    (52) exp_5 -> exp_5 . MAIOR_IGUAL exp_6
    (53) exp_5 -> exp_5 . MENOR_IGUAL exp_6

    IGUAL           reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    DIFERENTE       reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    OP_OU_EX        reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    XOR             reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    OP_E            reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    AND             reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    OP_OU           reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    OR              reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    PONTO_VIRG      reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    RECEBER         reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    VIRGULA         reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    PARENT_FECHA    reduce using rule 48 (exp_4 -> exp_4 DIFERENTE exp_5 .)
    MENOR_Q         shift and go to state 81
    MAIOR_Q         shift and go to state 82
    MAIOR_IGUAL     shift and go to state 83
    MENOR_IGUAL     shift and go to state 84


state 134

    (50) exp_5 -> exp_5 MENOR_Q exp_6 .
    (55) exp_6 -> exp_6 . SOMA exp_7
    (56) exp_6 -> exp_6 . SUB exp_7

    MENOR_Q         reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    MAIOR_Q         reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    MAIOR_IGUAL     reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    MENOR_IGUAL     reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    IGUAL           reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    DIFERENTE       reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    OP_OU_EX        reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    XOR             reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    OP_E            reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    AND             reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    OP_OU           reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    OR              reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    PONTO_VIRG      reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    RECEBER         reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    VIRGULA         reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    PARENT_FECHA    reduce using rule 50 (exp_5 -> exp_5 MENOR_Q exp_6 .)
    SOMA            shift and go to state 85
    SUB             shift and go to state 86


state 135

    (51) exp_5 -> exp_5 MAIOR_Q exp_6 .
    (55) exp_6 -> exp_6 . SOMA exp_7
    (56) exp_6 -> exp_6 . SUB exp_7

    MENOR_Q         reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    MAIOR_Q         reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    MAIOR_IGUAL     reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    MENOR_IGUAL     reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    IGUAL           reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    DIFERENTE       reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    OP_OU_EX        reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    XOR             reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    OP_E            reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    AND             reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    OP_OU           reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    OR              reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    PONTO_VIRG      reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    RECEBER         reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    VIRGULA         reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    PARENT_FECHA    reduce using rule 51 (exp_5 -> exp_5 MAIOR_Q exp_6 .)
    SOMA            shift and go to state 85
    SUB             shift and go to state 86


state 136

    (52) exp_5 -> exp_5 MAIOR_IGUAL exp_6 .
    (55) exp_6 -> exp_6 . SOMA exp_7
    (56) exp_6 -> exp_6 . SUB exp_7

    MENOR_Q         reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    MAIOR_Q         reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    MAIOR_IGUAL     reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    MENOR_IGUAL     reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    IGUAL           reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    DIFERENTE       reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    OP_OU_EX        reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    XOR             reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    OP_E            reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    AND             reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    OP_OU           reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    OR              reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    PONTO_VIRG      reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    RECEBER         reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    VIRGULA         reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    PARENT_FECHA    reduce using rule 52 (exp_5 -> exp_5 MAIOR_IGUAL exp_6 .)
    SOMA            shift and go to state 85
    SUB             shift and go to state 86


state 137

    (53) exp_5 -> exp_5 MENOR_IGUAL exp_6 .
    (55) exp_6 -> exp_6 . SOMA exp_7
    (56) exp_6 -> exp_6 . SUB exp_7

    MENOR_Q         reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    MAIOR_Q         reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    MAIOR_IGUAL     reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    MENOR_IGUAL     reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    IGUAL           reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    DIFERENTE       reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    OP_OU_EX        reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    XOR             reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    OP_E            reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    AND             reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    OP_OU           reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    OR              reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    PONTO_VIRG      reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    RECEBER         reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    VIRGULA         reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    PARENT_FECHA    reduce using rule 53 (exp_5 -> exp_5 MENOR_IGUAL exp_6 .)
    SOMA            shift and go to state 85
    SUB             shift and go to state 86


state 138

    (55) exp_6 -> exp_6 SOMA exp_7 .
    (58) exp_7 -> exp_7 . MULT exp_8
    (59) exp_7 -> exp_7 . DIV exp_8
    (60) exp_7 -> exp_7 . MODULO exp_8

    SOMA            reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    SUB             reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    MENOR_Q         reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    MAIOR_Q         reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    MAIOR_IGUAL     reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    MENOR_IGUAL     reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    IGUAL           reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    DIFERENTE       reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    OP_OU_EX        reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    XOR             reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    OP_E            reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    AND             reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    OP_OU           reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    OR              reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    PONTO_VIRG      reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    RECEBER         reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    VIRGULA         reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    PARENT_FECHA    reduce using rule 55 (exp_6 -> exp_6 SOMA exp_7 .)
    MULT            shift and go to state 87
    DIV             shift and go to state 88
    MODULO          shift and go to state 89


state 139

    (56) exp_6 -> exp_6 SUB exp_7 .
    (58) exp_7 -> exp_7 . MULT exp_8
    (59) exp_7 -> exp_7 . DIV exp_8
    (60) exp_7 -> exp_7 . MODULO exp_8

    SOMA            reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    SUB             reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    MENOR_Q         reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    MAIOR_Q         reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    MAIOR_IGUAL     reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    MENOR_IGUAL     reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    IGUAL           reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    DIFERENTE       reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    OP_OU_EX        reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    XOR             reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    OP_E            reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    AND             reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    OP_OU           reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    OR              reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    PONTO_VIRG      reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    RECEBER         reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    VIRGULA         reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    PARENT_FECHA    reduce using rule 56 (exp_6 -> exp_6 SUB exp_7 .)
    MULT            shift and go to state 87
    DIV             shift and go to state 88
    MODULO          shift and go to state 89


state 140

    (58) exp_7 -> exp_7 MULT exp_8 .

    MULT            reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    DIV             reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    MODULO          reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    SOMA            reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    SUB             reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    MENOR_Q         reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    MAIOR_Q         reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    MAIOR_IGUAL     reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    MENOR_IGUAL     reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    IGUAL           reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    DIFERENTE       reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    OP_OU_EX        reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    XOR             reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    OP_E            reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    AND             reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    OP_OU           reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    OR              reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    PONTO_VIRG      reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    RECEBER         reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    VIRGULA         reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)
    PARENT_FECHA    reduce using rule 58 (exp_7 -> exp_7 MULT exp_8 .)


state 141

    (59) exp_7 -> exp_7 DIV exp_8 .

    MULT            reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    DIV             reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    MODULO          reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    SOMA            reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    SUB             reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    MENOR_Q         reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    MAIOR_Q         reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    MAIOR_IGUAL     reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    MENOR_IGUAL     reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    IGUAL           reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    DIFERENTE       reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    OP_OU_EX        reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    XOR             reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    OP_E            reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    AND             reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    OP_OU           reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    OR              reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    PONTO_VIRG      reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    RECEBER         reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    VIRGULA         reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)
    PARENT_FECHA    reduce using rule 59 (exp_7 -> exp_7 DIV exp_8 .)


state 142

    (60) exp_7 -> exp_7 MODULO exp_8 .

    MULT            reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    DIV             reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    MODULO          reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    SOMA            reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    SUB             reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    MENOR_Q         reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    MAIOR_Q         reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    MAIOR_IGUAL     reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    MENOR_IGUAL     reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    IGUAL           reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    DIFERENTE       reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    OP_OU_EX        reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    XOR             reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    OP_E            reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    AND             reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    OP_OU           reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    OR              reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    PONTO_VIRG      reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    RECEBER         reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    VIRGULA         reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)
    PARENT_FECHA    reduce using rule 60 (exp_7 -> exp_7 MODULO exp_8 .)


state 143

    (66) exp_8 -> SIZEOF PARENT_ABRE exp_9 . PARENT_FECHA

    PARENT_FECHA    shift and go to state 164


state 144

    (74) exp_9 -> PARENT_ABRE exp PARENT_FECHA .

    MAIS_MAIS       reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    MENOS_MENOS     reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    MULT            reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    DIV             reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    MODULO          reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    SOMA            reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    SUB             reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    MENOR_Q         reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    MAIOR_Q         reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    MAIOR_IGUAL     reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    MENOR_IGUAL     reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    IGUAL           reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    DIFERENTE       reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    OP_OU_EX        reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    XOR             reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    OP_E            reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    AND             reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    OP_OU           reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    OR              reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    PONTO_VIRG      reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    RECEBER         reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    VIRGULA         reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)
    PARENT_FECHA    reduce using rule 74 (exp_9 -> PARENT_ABRE exp PARENT_FECHA .)


state 145

    (77) chamada_funcao -> TYPEID PARENT_ABRE exp . PARENT_FECHA
    (36) exp -> exp . RECEBER exp_1

    PARENT_FECHA    shift and go to state 165
    RECEBER         shift and go to state 70


state 146

    (28) decl_variavel_n -> VIRGULA ID RECEBER exp . decl_variavel_n
    (36) exp -> exp . RECEBER exp_1
    (27) decl_variavel_n -> . VIRGULA ID decl_variavel_n
    (28) decl_variavel_n -> . VIRGULA ID RECEBER exp decl_variavel_n
    (29) decl_variavel_n -> . VIRGULA ID

    RECEBER         shift and go to state 70
    VIRGULA         shift and go to state 26

    decl_variavel_n                shift and go to state 166

state 147

    (18) decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body .

    CLASS           reduce using rule 18 (decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body .)
    VOID            reduce using rule 18 (decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body .)
    TYPEDEF         reduce using rule 18 (decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body .)
    INT             reduce using rule 18 (decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body .)
    BOOL            reduce using rule 18 (decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body .)
    ID              reduce using rule 18 (decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body .)
    STRING          reduce using rule 18 (decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body .)
    $end            reduce using rule 18 (decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body .)
    CHAVE_FECHA     reduce using rule 18 (decl_funcao -> VOID ID PARENT_ABRE VOID PARENT_FECHA body .)


state 148

    (16) decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body .

    CLASS           reduce using rule 16 (decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body .)
    VOID            reduce using rule 16 (decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body .)
    TYPEDEF         reduce using rule 16 (decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body .)
    INT             reduce using rule 16 (decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body .)
    BOOL            reduce using rule 16 (decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body .)
    ID              reduce using rule 16 (decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body .)
    STRING          reduce using rule 16 (decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body .)
    $end            reduce using rule 16 (decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body .)
    CHAVE_FECHA     reduce using rule 16 (decl_funcao -> VOID ID PARENT_ABRE parametros PARENT_FECHA body .)


state 149

    (8) body_class -> CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHA .

    PONTO_VIRG      reduce using rule 8 (body_class -> CHAVE_ABRE PUBLIC DOIS_PONTOS content_class CHAVE_FECHA .)


state 150

    (9) content_class -> decl_variavel content_class .

    CHAVE_FECHA     reduce using rule 9 (content_class -> decl_variavel content_class .)


state 151

    (10) content_class -> decl_funcao content_class .

    CHAVE_FECHA     reduce using rule 10 (content_class -> decl_funcao content_class .)


state 152

    (21) decl_variavel -> tipo ID . PONTO_VIRG
    (22) decl_variavel -> tipo ID . RECEBER exp PONTO_VIRG
    (23) decl_variavel -> tipo ID . decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> tipo ID . RECEBER exp decl_variavel_n PONTO_VIRG
    (13) decl_funcao -> tipo ID . PARENT_ABRE parametros PARENT_FECHA body
    (14) decl_funcao -> tipo ID . PARENT_ABRE PARENT_FECHA body
    (15) decl_funcao -> tipo ID . PARENT_ABRE VOID PARENT_FECHA body
    (27) decl_variavel_n -> . VIRGULA ID decl_variavel_n
    (28) decl_variavel_n -> . VIRGULA ID RECEBER exp decl_variavel_n
    (29) decl_variavel_n -> . VIRGULA ID

    PONTO_VIRG      shift and go to state 23
    RECEBER         shift and go to state 24
    PARENT_ABRE     shift and go to state 22
    VIRGULA         shift and go to state 26

    decl_variavel_n                shift and go to state 25

state 153

    (20) parametros -> tipo ID VIRGULA parametros .

    PARENT_FECHA    reduce using rule 20 (parametros -> tipo ID VIRGULA parametros .)


state 154

    (30) body -> CHAVE_ABRE comandos CHAVE_FECHA .

    CLASS           reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    VOID            reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    TYPEDEF         reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    INT             reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    BOOL            reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    ID              reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    STRING          reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    $end            reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    CHAVE_FECHA     reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    ELSE            reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    IF              reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    WHILE           reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    FOR             reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    RETURN          reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    OP_NOT          reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    NOT             reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    SIZEOF          reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    INT_V           reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    TRUE            reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    FALSE           reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    STRING_V        reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    PARENT_ABRE     reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)
    TYPEID          reduce using rule 30 (body -> CHAVE_ABRE comandos CHAVE_FECHA .)


state 155

    (33) comandos -> comando comandos .

    CHAVE_FECHA     reduce using rule 33 (comandos -> comando comandos .)


state 156

    (78) condicional_1 -> IF PARENT_ABRE . exp PARENT_FECHA rest_if
    (85) condicional_2 -> IF PARENT_ABRE . exp PARENT_FECHA body
    (86) condicional_2 -> IF PARENT_ABRE . exp PARENT_FECHA comando
    (87) condicional_2 -> IF PARENT_ABRE . exp PARENT_FECHA condicional_1 ELSE condicional_2
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 167
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 157

    (79) condicional_1 -> exp PONTO_VIRG .

    IF              reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    WHILE           reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    FOR             reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    RETURN          reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    TYPEDEF         reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    INT             reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    BOOL            reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    ID              reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    STRING          reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    OP_NOT          reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    NOT             reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    SIZEOF          reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    INT_V           reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    TRUE            reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    FALSE           reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    STRING_V        reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    PARENT_ABRE     reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    TYPEID          reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    CHAVE_FECHA     reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)
    ELSE            reduce using rule 79 (condicional_1 -> exp PONTO_VIRG .)


state 158

    (81) condicional_1 -> WHILE PARENT_ABRE . exp PARENT_FECHA body
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 168
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 159

    (82) condicional_1 -> FOR PARENT_ABRE . for_log PARENT_FECHA body
    (92) for_log -> . decl_variavel PONTO_VIRG
    (93) for_log -> . decl_variavel exp PONTO_VIRG
    (94) for_log -> . decl_variavel exp PONTO_VIRG exp
    (95) for_log -> . decl_variavel PONTO_VIRG exp
    (96) for_log -> . PONTO_VIRG exp PONTO_VIRG exp
    (97) for_log -> . PONTO_VIRG exp PONTO_VIRG
    (98) for_log -> . PONTO_VIRG PONTO_VIRG exp
    (99) for_log -> . PONTO_VIRG PONTO_VIRG
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING

    PONTO_VIRG      shift and go to state 171
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 6
    STRING          shift and go to state 12

    for_log                        shift and go to state 169
    decl_variavel                  shift and go to state 170
    tipo                           shift and go to state 119

state 160

    (83) condicional_1 -> RETURN exp . PONTO_VIRG
    (36) exp -> exp . RECEBER exp_1

    PONTO_VIRG      shift and go to state 172
    RECEBER         shift and go to state 70


state 161

    (84) condicional_1 -> RETURN PONTO_VIRG .

    IF              reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    WHILE           reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    FOR             reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    RETURN          reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    TYPEDEF         reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    INT             reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    BOOL            reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    ID              reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    STRING          reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    OP_NOT          reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    NOT             reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    SIZEOF          reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    INT_V           reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    TRUE            reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    FALSE           reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    STRING_V        reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    PARENT_ABRE     reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    TYPEID          reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    CHAVE_FECHA     reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)
    ELSE            reduce using rule 84 (condicional_1 -> RETURN PONTO_VIRG .)


state 162

    (21) decl_variavel -> tipo ID . PONTO_VIRG
    (22) decl_variavel -> tipo ID . RECEBER exp PONTO_VIRG
    (23) decl_variavel -> tipo ID . decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> tipo ID . RECEBER exp decl_variavel_n PONTO_VIRG
    (27) decl_variavel_n -> . VIRGULA ID decl_variavel_n
    (28) decl_variavel_n -> . VIRGULA ID RECEBER exp decl_variavel_n
    (29) decl_variavel_n -> . VIRGULA ID

    PONTO_VIRG      shift and go to state 23
    RECEBER         shift and go to state 24
    VIRGULA         shift and go to state 26

    decl_variavel_n                shift and go to state 25

state 163

    (75) chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .

    MAIS_MAIS       reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    MENOS_MENOS     reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    MULT            reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    DIV             reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    MODULO          reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    SOMA            reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    SUB             reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    MENOR_Q         reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    MAIOR_Q         reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    MAIOR_IGUAL     reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    MENOR_IGUAL     reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    IGUAL           reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    DIFERENTE       reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    OP_OU_EX        reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    XOR             reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    OP_E            reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    AND             reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    OP_OU           reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    OR              reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    PONTO_VIRG      reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    RECEBER         reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    VIRGULA         reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)
    PARENT_FECHA    reduce using rule 75 (chamada_funcao -> ID PARENT_ABRE parametros PARENT_FECHA .)


state 164

    (66) exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .

    MULT            reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    DIV             reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    MODULO          reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    SOMA            reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    SUB             reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    MENOR_Q         reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    MAIOR_Q         reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    MAIOR_IGUAL     reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    MENOR_IGUAL     reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    IGUAL           reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    DIFERENTE       reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    OP_OU_EX        reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    XOR             reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    OP_E            reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    AND             reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    OP_OU           reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    OR              reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    PONTO_VIRG      reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    RECEBER         reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    VIRGULA         reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)
    PARENT_FECHA    reduce using rule 66 (exp_8 -> SIZEOF PARENT_ABRE exp_9 PARENT_FECHA .)


state 165

    (77) chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .

    MAIS_MAIS       reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    MENOS_MENOS     reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    MULT            reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    DIV             reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    MODULO          reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    SOMA            reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    SUB             reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    MENOR_Q         reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    MAIOR_Q         reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    MAIOR_IGUAL     reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    MENOR_IGUAL     reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    IGUAL           reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    DIFERENTE       reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    OP_OU_EX        reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    XOR             reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    OP_E            reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    AND             reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    OP_OU           reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    OR              reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    PONTO_VIRG      reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    RECEBER         reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    VIRGULA         reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)
    PARENT_FECHA    reduce using rule 77 (chamada_funcao -> TYPEID PARENT_ABRE exp PARENT_FECHA .)


state 166

    (28) decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .

    PONTO_VIRG      reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    CLASS           reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    VOID            reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    TYPEDEF         reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    INT             reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    BOOL            reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    ID              reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    STRING          reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    $end            reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    CHAVE_FECHA     reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    IF              reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    WHILE           reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    FOR             reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    RETURN          reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    OP_NOT          reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    NOT             reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    SIZEOF          reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    INT_V           reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    TRUE            reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    FALSE           reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    STRING_V        reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    PARENT_ABRE     reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    TYPEID          reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)
    ELSE            reduce using rule 28 (decl_variavel_n -> VIRGULA ID RECEBER exp decl_variavel_n .)


state 167

    (78) condicional_1 -> IF PARENT_ABRE exp . PARENT_FECHA rest_if
    (85) condicional_2 -> IF PARENT_ABRE exp . PARENT_FECHA body
    (86) condicional_2 -> IF PARENT_ABRE exp . PARENT_FECHA comando
    (87) condicional_2 -> IF PARENT_ABRE exp . PARENT_FECHA condicional_1 ELSE condicional_2
    (36) exp -> exp . RECEBER exp_1

    PARENT_FECHA    shift and go to state 173
    RECEBER         shift and go to state 70


state 168

    (81) condicional_1 -> WHILE PARENT_ABRE exp . PARENT_FECHA body
    (36) exp -> exp . RECEBER exp_1

    PARENT_FECHA    shift and go to state 174
    RECEBER         shift and go to state 70


state 169

    (82) condicional_1 -> FOR PARENT_ABRE for_log . PARENT_FECHA body

    PARENT_FECHA    shift and go to state 175


state 170

    (92) for_log -> decl_variavel . PONTO_VIRG
    (93) for_log -> decl_variavel . exp PONTO_VIRG
    (94) for_log -> decl_variavel . exp PONTO_VIRG exp
    (95) for_log -> decl_variavel . PONTO_VIRG exp
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    PONTO_VIRG      shift and go to state 176
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 177
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 171

    (96) for_log -> PONTO_VIRG . exp PONTO_VIRG exp
    (97) for_log -> PONTO_VIRG . exp PONTO_VIRG
    (98) for_log -> PONTO_VIRG . PONTO_VIRG exp
    (99) for_log -> PONTO_VIRG . PONTO_VIRG
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    PONTO_VIRG      shift and go to state 178
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 179
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 172

    (83) condicional_1 -> RETURN exp PONTO_VIRG .

    IF              reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    WHILE           reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    FOR             reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    RETURN          reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    TYPEDEF         reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    INT             reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    BOOL            reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    ID              reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    STRING          reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    OP_NOT          reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    NOT             reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    SIZEOF          reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    INT_V           reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    TRUE            reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    FALSE           reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    STRING_V        reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    PARENT_ABRE     reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    TYPEID          reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    CHAVE_FECHA     reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)
    ELSE            reduce using rule 83 (condicional_1 -> RETURN exp PONTO_VIRG .)


state 173

    (78) condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA . rest_if
    (85) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA . body
    (86) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA . comando
    (87) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA . condicional_1 ELSE condicional_2
    (88) rest_if -> . condicional_1 ELSE condicional_1
    (89) rest_if -> . body ELSE body
    (90) rest_if -> . condicional_1 ELSE body
    (91) rest_if -> . body ELSE condicional_1
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA
    (34) comando -> . condicional_1
    (35) comando -> . condicional_2
    (78) condicional_1 -> . IF PARENT_ABRE exp PARENT_FECHA rest_if
    (79) condicional_1 -> . exp PONTO_VIRG
    (80) condicional_1 -> . decl_variavel
    (81) condicional_1 -> . WHILE PARENT_ABRE exp PARENT_FECHA body
    (82) condicional_1 -> . FOR PARENT_ABRE for_log PARENT_FECHA body
    (83) condicional_1 -> . RETURN exp PONTO_VIRG
    (84) condicional_1 -> . RETURN PONTO_VIRG
    (85) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA body
    (86) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA comando
    (87) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    CHAVE_ABRE      shift and go to state 67
    IF              shift and go to state 113
    WHILE           shift and go to state 116
    FOR             shift and go to state 117
    RETURN          shift and go to state 118
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 120
    STRING          shift and go to state 12
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 114
    rest_if                        shift and go to state 180
    body                           shift and go to state 181
    comando                        shift and go to state 182
    condicional_1                  shift and go to state 183
    condicional_2                  shift and go to state 112
    decl_variavel                  shift and go to state 115
    exp_1                          shift and go to state 37
    tipo                           shift and go to state 119
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 174

    (81) condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA . body
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA

    CHAVE_ABRE      shift and go to state 67

    body                           shift and go to state 184

state 175

    (82) condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA . body
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA

    CHAVE_ABRE      shift and go to state 67

    body                           shift and go to state 185

state 176

    (92) for_log -> decl_variavel PONTO_VIRG .
    (95) for_log -> decl_variavel PONTO_VIRG . exp
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    PARENT_FECHA    reduce using rule 92 (for_log -> decl_variavel PONTO_VIRG .)
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 186
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 177

    (93) for_log -> decl_variavel exp . PONTO_VIRG
    (94) for_log -> decl_variavel exp . PONTO_VIRG exp
    (36) exp -> exp . RECEBER exp_1

    PONTO_VIRG      shift and go to state 187
    RECEBER         shift and go to state 70


state 178

    (98) for_log -> PONTO_VIRG PONTO_VIRG . exp
    (99) for_log -> PONTO_VIRG PONTO_VIRG .
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    PARENT_FECHA    reduce using rule 99 (for_log -> PONTO_VIRG PONTO_VIRG .)
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 188
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 179

    (96) for_log -> PONTO_VIRG exp . PONTO_VIRG exp
    (97) for_log -> PONTO_VIRG exp . PONTO_VIRG
    (36) exp -> exp . RECEBER exp_1

    PONTO_VIRG      shift and go to state 189
    RECEBER         shift and go to state 70


state 180

    (78) condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .

    IF              reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    WHILE           reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    FOR             reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    RETURN          reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    TYPEDEF         reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    INT             reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    BOOL            reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    ID              reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    STRING          reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    OP_NOT          reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    NOT             reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    SIZEOF          reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    INT_V           reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    TRUE            reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    FALSE           reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    STRING_V        reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    PARENT_ABRE     reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    TYPEID          reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    CHAVE_FECHA     reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)
    ELSE            reduce using rule 78 (condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA rest_if .)


state 181

    (85) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .
    (89) rest_if -> body . ELSE body
    (91) rest_if -> body . ELSE condicional_1

    IF              reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    WHILE           reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    FOR             reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    RETURN          reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    TYPEDEF         reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    INT             reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    BOOL            reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    ID              reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    STRING          reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    OP_NOT          reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    NOT             reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    SIZEOF          reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    INT_V           reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    TRUE            reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    FALSE           reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    STRING_V        reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    PARENT_ABRE     reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    TYPEID          reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    CHAVE_FECHA     reduce using rule 85 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA body .)
    ELSE            shift and go to state 190


state 182

    (86) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .

    IF              reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    WHILE           reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    FOR             reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    RETURN          reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    TYPEDEF         reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    INT             reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    BOOL            reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    ID              reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    STRING          reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    OP_NOT          reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    NOT             reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    SIZEOF          reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    INT_V           reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    TRUE            reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    FALSE           reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    STRING_V        reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    PARENT_ABRE     reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    TYPEID          reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)
    CHAVE_FECHA     reduce using rule 86 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA comando .)


state 183

    (87) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 . ELSE condicional_2
    (88) rest_if -> condicional_1 . ELSE condicional_1
    (90) rest_if -> condicional_1 . ELSE body
    (34) comando -> condicional_1 .

    ELSE            shift and go to state 191
    IF              reduce using rule 34 (comando -> condicional_1 .)
    WHILE           reduce using rule 34 (comando -> condicional_1 .)
    FOR             reduce using rule 34 (comando -> condicional_1 .)
    RETURN          reduce using rule 34 (comando -> condicional_1 .)
    TYPEDEF         reduce using rule 34 (comando -> condicional_1 .)
    INT             reduce using rule 34 (comando -> condicional_1 .)
    BOOL            reduce using rule 34 (comando -> condicional_1 .)
    ID              reduce using rule 34 (comando -> condicional_1 .)
    STRING          reduce using rule 34 (comando -> condicional_1 .)
    OP_NOT          reduce using rule 34 (comando -> condicional_1 .)
    NOT             reduce using rule 34 (comando -> condicional_1 .)
    SIZEOF          reduce using rule 34 (comando -> condicional_1 .)
    INT_V           reduce using rule 34 (comando -> condicional_1 .)
    TRUE            reduce using rule 34 (comando -> condicional_1 .)
    FALSE           reduce using rule 34 (comando -> condicional_1 .)
    STRING_V        reduce using rule 34 (comando -> condicional_1 .)
    PARENT_ABRE     reduce using rule 34 (comando -> condicional_1 .)
    TYPEID          reduce using rule 34 (comando -> condicional_1 .)
    CHAVE_FECHA     reduce using rule 34 (comando -> condicional_1 .)


state 184

    (81) condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .

    IF              reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    WHILE           reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    FOR             reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    RETURN          reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    TYPEDEF         reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    INT             reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    BOOL            reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    ID              reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    STRING          reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    OP_NOT          reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    NOT             reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    SIZEOF          reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    INT_V           reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    TRUE            reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    FALSE           reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    STRING_V        reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    PARENT_ABRE     reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    TYPEID          reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    CHAVE_FECHA     reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)
    ELSE            reduce using rule 81 (condicional_1 -> WHILE PARENT_ABRE exp PARENT_FECHA body .)


state 185

    (82) condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .

    IF              reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    WHILE           reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    FOR             reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    RETURN          reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    TYPEDEF         reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    INT             reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    BOOL            reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    ID              reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    STRING          reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    OP_NOT          reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    NOT             reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    SIZEOF          reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    INT_V           reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    TRUE            reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    FALSE           reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    STRING_V        reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    PARENT_ABRE     reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    TYPEID          reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    CHAVE_FECHA     reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)
    ELSE            reduce using rule 82 (condicional_1 -> FOR PARENT_ABRE for_log PARENT_FECHA body .)


state 186

    (95) for_log -> decl_variavel PONTO_VIRG exp .
    (36) exp -> exp . RECEBER exp_1

    PARENT_FECHA    reduce using rule 95 (for_log -> decl_variavel PONTO_VIRG exp .)
    RECEBER         shift and go to state 70


state 187

    (93) for_log -> decl_variavel exp PONTO_VIRG .
    (94) for_log -> decl_variavel exp PONTO_VIRG . exp
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    PARENT_FECHA    reduce using rule 93 (for_log -> decl_variavel exp PONTO_VIRG .)
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 192
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 188

    (98) for_log -> PONTO_VIRG PONTO_VIRG exp .
    (36) exp -> exp . RECEBER exp_1

    PARENT_FECHA    reduce using rule 98 (for_log -> PONTO_VIRG PONTO_VIRG exp .)
    RECEBER         shift and go to state 70


state 189

    (96) for_log -> PONTO_VIRG exp PONTO_VIRG . exp
    (97) for_log -> PONTO_VIRG exp PONTO_VIRG .
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    PARENT_FECHA    reduce using rule 97 (for_log -> PONTO_VIRG exp PONTO_VIRG .)
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 193
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 190

    (89) rest_if -> body ELSE . body
    (91) rest_if -> body ELSE . condicional_1
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA
    (78) condicional_1 -> . IF PARENT_ABRE exp PARENT_FECHA rest_if
    (79) condicional_1 -> . exp PONTO_VIRG
    (80) condicional_1 -> . decl_variavel
    (81) condicional_1 -> . WHILE PARENT_ABRE exp PARENT_FECHA body
    (82) condicional_1 -> . FOR PARENT_ABRE for_log PARENT_FECHA body
    (83) condicional_1 -> . RETURN exp PONTO_VIRG
    (84) condicional_1 -> . RETURN PONTO_VIRG
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    CHAVE_ABRE      shift and go to state 67
    IF              shift and go to state 196
    WHILE           shift and go to state 116
    FOR             shift and go to state 117
    RETURN          shift and go to state 118
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 120
    STRING          shift and go to state 12
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    body                           shift and go to state 194
    condicional_1                  shift and go to state 195
    exp                            shift and go to state 114
    decl_variavel                  shift and go to state 115
    exp_1                          shift and go to state 37
    tipo                           shift and go to state 119
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 191

    (87) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE . condicional_2
    (88) rest_if -> condicional_1 ELSE . condicional_1
    (90) rest_if -> condicional_1 ELSE . body
    (85) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA body
    (86) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA comando
    (87) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2
    (78) condicional_1 -> . IF PARENT_ABRE exp PARENT_FECHA rest_if
    (79) condicional_1 -> . exp PONTO_VIRG
    (80) condicional_1 -> . decl_variavel
    (81) condicional_1 -> . WHILE PARENT_ABRE exp PARENT_FECHA body
    (82) condicional_1 -> . FOR PARENT_ABRE for_log PARENT_FECHA body
    (83) condicional_1 -> . RETURN exp PONTO_VIRG
    (84) condicional_1 -> . RETURN PONTO_VIRG
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    IF              shift and go to state 197
    WHILE           shift and go to state 116
    FOR             shift and go to state 117
    RETURN          shift and go to state 118
    CHAVE_ABRE      shift and go to state 67
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 120
    STRING          shift and go to state 12
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 114
    condicional_1                  shift and go to state 198
    condicional_2                  shift and go to state 199
    body                           shift and go to state 200
    decl_variavel                  shift and go to state 115
    exp_1                          shift and go to state 37
    tipo                           shift and go to state 119
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 192

    (94) for_log -> decl_variavel exp PONTO_VIRG exp .
    (36) exp -> exp . RECEBER exp_1

    PARENT_FECHA    reduce using rule 94 (for_log -> decl_variavel exp PONTO_VIRG exp .)
    RECEBER         shift and go to state 70


state 193

    (96) for_log -> PONTO_VIRG exp PONTO_VIRG exp .
    (36) exp -> exp . RECEBER exp_1

    PARENT_FECHA    reduce using rule 96 (for_log -> PONTO_VIRG exp PONTO_VIRG exp .)
    RECEBER         shift and go to state 70


state 194

    (89) rest_if -> body ELSE body .

    IF              reduce using rule 89 (rest_if -> body ELSE body .)
    WHILE           reduce using rule 89 (rest_if -> body ELSE body .)
    FOR             reduce using rule 89 (rest_if -> body ELSE body .)
    RETURN          reduce using rule 89 (rest_if -> body ELSE body .)
    TYPEDEF         reduce using rule 89 (rest_if -> body ELSE body .)
    INT             reduce using rule 89 (rest_if -> body ELSE body .)
    BOOL            reduce using rule 89 (rest_if -> body ELSE body .)
    ID              reduce using rule 89 (rest_if -> body ELSE body .)
    STRING          reduce using rule 89 (rest_if -> body ELSE body .)
    OP_NOT          reduce using rule 89 (rest_if -> body ELSE body .)
    NOT             reduce using rule 89 (rest_if -> body ELSE body .)
    SIZEOF          reduce using rule 89 (rest_if -> body ELSE body .)
    INT_V           reduce using rule 89 (rest_if -> body ELSE body .)
    TRUE            reduce using rule 89 (rest_if -> body ELSE body .)
    FALSE           reduce using rule 89 (rest_if -> body ELSE body .)
    STRING_V        reduce using rule 89 (rest_if -> body ELSE body .)
    PARENT_ABRE     reduce using rule 89 (rest_if -> body ELSE body .)
    TYPEID          reduce using rule 89 (rest_if -> body ELSE body .)
    CHAVE_FECHA     reduce using rule 89 (rest_if -> body ELSE body .)
    ELSE            reduce using rule 89 (rest_if -> body ELSE body .)


state 195

    (91) rest_if -> body ELSE condicional_1 .

    IF              reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    WHILE           reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    FOR             reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    RETURN          reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    TYPEDEF         reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    INT             reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    BOOL            reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    ID              reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    STRING          reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    OP_NOT          reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    NOT             reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    SIZEOF          reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    INT_V           reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    TRUE            reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    FALSE           reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    STRING_V        reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    PARENT_ABRE     reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    TYPEID          reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    CHAVE_FECHA     reduce using rule 91 (rest_if -> body ELSE condicional_1 .)
    ELSE            reduce using rule 91 (rest_if -> body ELSE condicional_1 .)


state 196

    (78) condicional_1 -> IF . PARENT_ABRE exp PARENT_FECHA rest_if

    PARENT_ABRE     shift and go to state 201


state 197

    (85) condicional_2 -> IF . PARENT_ABRE exp PARENT_FECHA body
    (86) condicional_2 -> IF . PARENT_ABRE exp PARENT_FECHA comando
    (87) condicional_2 -> IF . PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2
    (78) condicional_1 -> IF . PARENT_ABRE exp PARENT_FECHA rest_if

    PARENT_ABRE     shift and go to state 202


state 198

    (88) rest_if -> condicional_1 ELSE condicional_1 .

    IF              reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    WHILE           reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    FOR             reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    RETURN          reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    TYPEDEF         reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    INT             reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    BOOL            reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    ID              reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    STRING          reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    OP_NOT          reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    NOT             reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    SIZEOF          reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    INT_V           reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    TRUE            reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    FALSE           reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    STRING_V        reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    PARENT_ABRE     reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    TYPEID          reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    CHAVE_FECHA     reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)
    ELSE            reduce using rule 88 (rest_if -> condicional_1 ELSE condicional_1 .)


state 199

    (87) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .

    IF              reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    WHILE           reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    FOR             reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    RETURN          reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    TYPEDEF         reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    INT             reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    BOOL            reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    ID              reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    STRING          reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    OP_NOT          reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    NOT             reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    SIZEOF          reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    INT_V           reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    TRUE            reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    FALSE           reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    STRING_V        reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    PARENT_ABRE     reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    TYPEID          reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)
    CHAVE_FECHA     reduce using rule 87 (condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2 .)


state 200

    (90) rest_if -> condicional_1 ELSE body .

    IF              reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    WHILE           reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    FOR             reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    RETURN          reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    TYPEDEF         reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    INT             reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    BOOL            reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    ID              reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    STRING          reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    OP_NOT          reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    NOT             reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    SIZEOF          reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    INT_V           reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    TRUE            reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    FALSE           reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    STRING_V        reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    PARENT_ABRE     reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    TYPEID          reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    CHAVE_FECHA     reduce using rule 90 (rest_if -> condicional_1 ELSE body .)
    ELSE            reduce using rule 90 (rest_if -> condicional_1 ELSE body .)


state 201

    (78) condicional_1 -> IF PARENT_ABRE . exp PARENT_FECHA rest_if
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 203
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 202

    (85) condicional_2 -> IF PARENT_ABRE . exp PARENT_FECHA body
    (86) condicional_2 -> IF PARENT_ABRE . exp PARENT_FECHA comando
    (87) condicional_2 -> IF PARENT_ABRE . exp PARENT_FECHA condicional_1 ELSE condicional_2
    (78) condicional_1 -> IF PARENT_ABRE . exp PARENT_FECHA rest_if
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    ID              shift and go to state 35
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 204
    exp_1                          shift and go to state 37
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 203

    (78) condicional_1 -> IF PARENT_ABRE exp . PARENT_FECHA rest_if
    (36) exp -> exp . RECEBER exp_1

    PARENT_FECHA    shift and go to state 205
    RECEBER         shift and go to state 70


state 204

    (85) condicional_2 -> IF PARENT_ABRE exp . PARENT_FECHA body
    (86) condicional_2 -> IF PARENT_ABRE exp . PARENT_FECHA comando
    (87) condicional_2 -> IF PARENT_ABRE exp . PARENT_FECHA condicional_1 ELSE condicional_2
    (78) condicional_1 -> IF PARENT_ABRE exp . PARENT_FECHA rest_if
    (36) exp -> exp . RECEBER exp_1

    PARENT_FECHA    shift and go to state 206
    RECEBER         shift and go to state 70


state 205

    (78) condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA . rest_if
    (88) rest_if -> . condicional_1 ELSE condicional_1
    (89) rest_if -> . body ELSE body
    (90) rest_if -> . condicional_1 ELSE body
    (91) rest_if -> . body ELSE condicional_1
    (78) condicional_1 -> . IF PARENT_ABRE exp PARENT_FECHA rest_if
    (79) condicional_1 -> . exp PONTO_VIRG
    (80) condicional_1 -> . decl_variavel
    (81) condicional_1 -> . WHILE PARENT_ABRE exp PARENT_FECHA body
    (82) condicional_1 -> . FOR PARENT_ABRE for_log PARENT_FECHA body
    (83) condicional_1 -> . RETURN exp PONTO_VIRG
    (84) condicional_1 -> . RETURN PONTO_VIRG
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    IF              shift and go to state 196
    WHILE           shift and go to state 116
    FOR             shift and go to state 117
    RETURN          shift and go to state 118
    CHAVE_ABRE      shift and go to state 67
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 120
    STRING          shift and go to state 12
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 114
    rest_if                        shift and go to state 180
    condicional_1                  shift and go to state 207
    body                           shift and go to state 208
    decl_variavel                  shift and go to state 115
    exp_1                          shift and go to state 37
    tipo                           shift and go to state 119
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 206

    (85) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA . body
    (86) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA . comando
    (87) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA . condicional_1 ELSE condicional_2
    (78) condicional_1 -> IF PARENT_ABRE exp PARENT_FECHA . rest_if
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA
    (34) comando -> . condicional_1
    (35) comando -> . condicional_2
    (78) condicional_1 -> . IF PARENT_ABRE exp PARENT_FECHA rest_if
    (79) condicional_1 -> . exp PONTO_VIRG
    (80) condicional_1 -> . decl_variavel
    (81) condicional_1 -> . WHILE PARENT_ABRE exp PARENT_FECHA body
    (82) condicional_1 -> . FOR PARENT_ABRE for_log PARENT_FECHA body
    (83) condicional_1 -> . RETURN exp PONTO_VIRG
    (84) condicional_1 -> . RETURN PONTO_VIRG
    (88) rest_if -> . condicional_1 ELSE condicional_1
    (89) rest_if -> . body ELSE body
    (90) rest_if -> . condicional_1 ELSE body
    (91) rest_if -> . body ELSE condicional_1
    (85) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA body
    (86) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA comando
    (87) condicional_2 -> . IF PARENT_ABRE exp PARENT_FECHA condicional_1 ELSE condicional_2
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    CHAVE_ABRE      shift and go to state 67
    IF              shift and go to state 113
    WHILE           shift and go to state 116
    FOR             shift and go to state 117
    RETURN          shift and go to state 118
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 120
    STRING          shift and go to state 12
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    exp                            shift and go to state 114
    body                           shift and go to state 181
    comando                        shift and go to state 182
    condicional_1                  shift and go to state 209
    condicional_2                  shift and go to state 112
    rest_if                        shift and go to state 180
    decl_variavel                  shift and go to state 115
    exp_1                          shift and go to state 37
    tipo                           shift and go to state 119
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53

state 207

    (88) rest_if -> condicional_1 . ELSE condicional_1
    (90) rest_if -> condicional_1 . ELSE body

    ELSE            shift and go to state 210


state 208

    (89) rest_if -> body . ELSE body
    (91) rest_if -> body . ELSE condicional_1

    ELSE            shift and go to state 190


state 209

    (87) condicional_2 -> IF PARENT_ABRE exp PARENT_FECHA condicional_1 . ELSE condicional_2
    (34) comando -> condicional_1 .
    (88) rest_if -> condicional_1 . ELSE condicional_1
    (90) rest_if -> condicional_1 . ELSE body

    ELSE            shift and go to state 191
    IF              reduce using rule 34 (comando -> condicional_1 .)
    WHILE           reduce using rule 34 (comando -> condicional_1 .)
    FOR             reduce using rule 34 (comando -> condicional_1 .)
    RETURN          reduce using rule 34 (comando -> condicional_1 .)
    TYPEDEF         reduce using rule 34 (comando -> condicional_1 .)
    INT             reduce using rule 34 (comando -> condicional_1 .)
    BOOL            reduce using rule 34 (comando -> condicional_1 .)
    ID              reduce using rule 34 (comando -> condicional_1 .)
    STRING          reduce using rule 34 (comando -> condicional_1 .)
    OP_NOT          reduce using rule 34 (comando -> condicional_1 .)
    NOT             reduce using rule 34 (comando -> condicional_1 .)
    SIZEOF          reduce using rule 34 (comando -> condicional_1 .)
    INT_V           reduce using rule 34 (comando -> condicional_1 .)
    TRUE            reduce using rule 34 (comando -> condicional_1 .)
    FALSE           reduce using rule 34 (comando -> condicional_1 .)
    STRING_V        reduce using rule 34 (comando -> condicional_1 .)
    PARENT_ABRE     reduce using rule 34 (comando -> condicional_1 .)
    TYPEID          reduce using rule 34 (comando -> condicional_1 .)
    CHAVE_FECHA     reduce using rule 34 (comando -> condicional_1 .)


state 210

    (88) rest_if -> condicional_1 ELSE . condicional_1
    (90) rest_if -> condicional_1 ELSE . body
    (78) condicional_1 -> . IF PARENT_ABRE exp PARENT_FECHA rest_if
    (79) condicional_1 -> . exp PONTO_VIRG
    (80) condicional_1 -> . decl_variavel
    (81) condicional_1 -> . WHILE PARENT_ABRE exp PARENT_FECHA body
    (82) condicional_1 -> . FOR PARENT_ABRE for_log PARENT_FECHA body
    (83) condicional_1 -> . RETURN exp PONTO_VIRG
    (84) condicional_1 -> . RETURN PONTO_VIRG
    (30) body -> . CHAVE_ABRE comandos CHAVE_FECHA
    (31) body -> . CHAVE_ABRE CHAVE_FECHA
    (36) exp -> . exp RECEBER exp_1
    (37) exp -> . exp_1
    (21) decl_variavel -> . tipo ID PONTO_VIRG
    (22) decl_variavel -> . tipo ID RECEBER exp PONTO_VIRG
    (23) decl_variavel -> . tipo ID decl_variavel_n PONTO_VIRG
    (24) decl_variavel -> . tipo ID RECEBER exp decl_variavel_n PONTO_VIRG
    (25) decl_variavel -> . TYPEDEF tipo ID PONTO_VIRG
    (26) decl_variavel -> . TYPEDEF tipo ID decl_variavel_n
    (38) exp_1 -> . exp_1 OP_OU exp_2
    (39) exp_1 -> . exp_1 OR exp_2
    (40) exp_1 -> . exp_2
    (100) tipo -> . INT
    (101) tipo -> . BOOL
    (102) tipo -> . ID
    (103) tipo -> . STRING
    (41) exp_2 -> . exp_2 OP_E exp_3
    (42) exp_2 -> . exp_2 AND exp_3
    (43) exp_2 -> . exp_3
    (44) exp_3 -> . exp_3 OP_OU_EX exp_4
    (45) exp_3 -> . exp_3 XOR exp_4
    (46) exp_3 -> . exp_4
    (47) exp_4 -> . exp_4 IGUAL exp_5
    (48) exp_4 -> . exp_4 DIFERENTE exp_5
    (49) exp_4 -> . exp_5
    (50) exp_5 -> . exp_5 MENOR_Q exp_6
    (51) exp_5 -> . exp_5 MAIOR_Q exp_6
    (52) exp_5 -> . exp_5 MAIOR_IGUAL exp_6
    (53) exp_5 -> . exp_5 MENOR_IGUAL exp_6
    (54) exp_5 -> . exp_6
    (55) exp_6 -> . exp_6 SOMA exp_7
    (56) exp_6 -> . exp_6 SUB exp_7
    (57) exp_6 -> . exp_7
    (58) exp_7 -> . exp_7 MULT exp_8
    (59) exp_7 -> . exp_7 DIV exp_8
    (60) exp_7 -> . exp_7 MODULO exp_8
    (61) exp_7 -> . exp_8
    (62) exp_8 -> . OP_NOT exp_9
    (63) exp_8 -> . NOT exp_9
    (64) exp_8 -> . exp_9 MAIS_MAIS
    (65) exp_8 -> . exp_9 MENOS_MENOS
    (66) exp_8 -> . SIZEOF PARENT_ABRE exp_9 PARENT_FECHA
    (67) exp_8 -> . exp_9
    (68) exp_9 -> . ID
    (69) exp_9 -> . INT_V
    (70) exp_9 -> . TRUE
    (71) exp_9 -> . FALSE
    (72) exp_9 -> . chamada_funcao
    (73) exp_9 -> . STRING_V
    (74) exp_9 -> . PARENT_ABRE exp PARENT_FECHA
    (75) chamada_funcao -> . ID PARENT_ABRE parametros PARENT_FECHA
    (76) chamada_funcao -> . ID PARENT_ABRE PARENT_FECHA
    (77) chamada_funcao -> . TYPEID PARENT_ABRE exp PARENT_FECHA

    IF              shift and go to state 196
    WHILE           shift and go to state 116
    FOR             shift and go to state 117
    RETURN          shift and go to state 118
    CHAVE_ABRE      shift and go to state 67
    TYPEDEF         shift and go to state 9
    INT             shift and go to state 10
    BOOL            shift and go to state 11
    ID              shift and go to state 120
    STRING          shift and go to state 12
    OP_NOT          shift and go to state 45
    NOT             shift and go to state 47
    SIZEOF          shift and go to state 48
    INT_V           shift and go to state 50
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    STRING_V        shift and go to state 54
    PARENT_ABRE     shift and go to state 49
    TYPEID          shift and go to state 55

    condicional_1                  shift and go to state 198
    body                           shift and go to state 200
    exp                            shift and go to state 114
    decl_variavel                  shift and go to state 115
    exp_1                          shift and go to state 37
    tipo                           shift and go to state 119
    exp_2                          shift and go to state 38
    exp_3                          shift and go to state 39
    exp_4                          shift and go to state 40
    exp_5                          shift and go to state 41
    exp_6                          shift and go to state 42
    exp_7                          shift and go to state 43
    exp_8                          shift and go to state 44
    exp_9                          shift and go to state 46
    chamada_funcao                 shift and go to state 53
